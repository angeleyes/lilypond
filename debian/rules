#!/usr/bin/make -f
# Made with the aid of debhelper by by Joey Hess,
# based on the sample debian/rules file for GNU hello by Ian Jackson.
#
# This is free software; see the GNU General Public Licence
# version 2 or later for copying conditions.  There is NO warranty.
#
# Currently maintained by Anthony Fok <foka@debian.org>
# for Debian GNU/Linux.

package = lilypond

SHELL = /bin/bash

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

build: build-stamp
build-stamp:
	dh_testdir

	./configure --disable-checking --disable-debugging \
		--enable-printing --prefix=/usr --enable-optimise \
		--enable-shared
	$(MAKE) all

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	-$(MAKE) distclean
	-$(MAKE) local-distclean

	# Remove the following line once the *.make files are fixed
	rm -f bin/*.pyc
	rm -f debian/preinst

	dh_clean

# Build architecture-independent files here.
binary-indep: build
# We have nothing to do by default.

binary-arch: build
	dh_testdir
	dh_testroot
	dh_clean -k

	dh_installdirs usr/lib/texmf/doc \
		usr/lib/emacs/site-lisp \
		usr/doc/$(package)/examples
	ln -fs ../../../doc/lilypond debian/tmp/usr/lib/texmf/doc/lilypond
	$(MAKE) prefix=`pwd`/debian/tmp/usr install
	cp -av mudela-mode.el debian/tmp/usr/lib/emacs/site-lisp
	dh_installdocs ANNOUNCEMENT ANNOUNCE-0.1 README.txt NEWS ONEWS DEDICATION \
		BUGS TODO \
		Documentation/pictures/*.xpm \
		Documentation/out/*.txt \
		Documentation/tex/*.doc \
		Documentation/tex/*.bib
#	dh_installexamples input
	cp -aP `find input mutopia \( -name '*.ly' -o -name '*.tex' -o -name 'TODO' \)` \
		debian/tmp/usr/doc/lilypond/examples
#	dh_installmenu
#	dh_installcron
#	dh_installmanpages
#	dh_undocumented
	dh_installchangelogs
#	dh_strip
	dh_compress
	dh_fixperms
	dh_suidregister
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
#	dh_makeshlibs
	dh_md5sums
	dh_builddeb

source diff:
	@echo >&2 'source and diff are obsolete - use dpkg-source -b'; false

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary
