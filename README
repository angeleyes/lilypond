THE LILYPOND.ORG WEBSITE

SOURCES

The HTML sources live in a GIT repository.  To get a fresh version run

   mkdir web ; cd web 
   git init-db

   ## not necessary for 1.4.4.1 or newer
   touch empty ; git add empty ; git commit  -m 'empty' empty
   git pull git://git.sv.gnu.org/lilypond.git/ web/master:
   git repack

The command can

   git pull git://git.sv.gnu.org/lilypond.git/ web/master:

also be used to update a repository



BUILDING THE WEBSITE

To generate the main web site, run

    make

The scripts/format-page.py script merges the pages in the
site/template.ihtml template and handles @AT-VARIABLE@ substitutions,
and leaves the result in

    ./out/site

To generate the web site for language LANG (available: LANG), run

    make LANG  # for example:  make nl


REQUIREMENTS

    * python
    * make
    * gettext


AT-VARIABLEs

    @DEPTH@: home url prefix
    @IMAGES@: image url prefix
    @DOC@: doc url prefix

See scripts/format-page.py for full overview.


STATIC ENTRY URLS

   GNU LilyPond:       http://lilypond.org/
   Essay               http://lilypond.org/web/about/automated-engraving
   Documentation       http://lilypond.org/documentation
   (of latest stable)
   Tutorial            http://lilypond.org/tutorial
   (of latest stable)
   Glossary            http://lilypond.org/music-glossary
   of musical terms  
   (of latest stable)


DISTRIBUTION

* The format-page.py script is GPL

* Verbatim redistribution of the .html files and images is allowed and
  encouraged.


AUTOMATIC LANGUAGE SELECTION

Apache can be configured to append .LANG.html to an url, where LANG is
the user's browser preferred language.

The format-page.py script strips the .HTML from file names, but for
directory urls, that does not work.  This could be fixed by adding
'/index' to directory urls, but easier is to add an .htaccess (used on
lilypond.org):

    #.htaccess
    DirectoryIndex index



TRANSLATION

Get or update the sources.  See the top of README.


STARTING A NEW LANGUAGE

Type

    make new LANG=<MY-LANGUAGE>

eg. <MY-LANGUAGE> "nl" is Dutch, "de" German and "fr" French.
Add <MY-LANGUAGE> to

  * scripts/translate.py
  * scripts/format-page.py


TRANSLATE A PAGE

Copy the file from site into your language tree

    cp site/about/index.html <MY-LANGUAGE>/about/index.html

Translate it, see UPDATE a TRANSLATION

Add the page to repository

    git add <MY-LANGUAGE>/about/index.html
    git commit -m 'add file' <MY-LANGUAGE>/about/index.html


UPDATE A TRANSLATION

Open the HTML source file and translate all plain text, leaving markup
and URLs in tact.  Tracking changes is much easier, that way.

The best choice for non-destructive editing of HTML source is probably
a simple text editor with syntax coloring such as jEdit or Gedit.  You
may view and check the result in your favorite browser.  Do not use a
word processor, that will probably mess with the markup.

If you think the original text should be changed or fixed, share your
suggestion before pushing any changes.  Typos may be fixed right away.

Do not use mozilla composer, at least until it is clear how to
let it really preserve markup.


CHECK STATE OF TRANSLATION

Running

    make LANG=<MY-LANGUAGE> check-translation

presents a diff of the original pages since the most recent revision
of the translation.  To check a single page, run

    scripts/check-translation.py <MY-LANGUAGE>/index.html


SUBMIT TO CVS

    git push 

If you do not have GIT write access, send patches to your translation
sponsor, or the the lilypond-user list.


You can format a patch with

    git-format-patch MY-FIRST-CHANGE^..

where MY-FIRST-CHANGE is the committish of your first applied change. 
