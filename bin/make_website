#!/usr/bin/perl -w
# stupid script to generate WWW site.

use FileHandle;
my $lily_version;
my $footstr;
my $mw_id = "<!make_website!>";
sub get_version
{
    my ($vstr)=("");
    open V, "$depth/.version";
    while (<V>) {
	s/#.*$//g;
	next if (/^ *$/);
	s/^/\$/;
	s/= *(.*)$/=\"$1\";/;
	$vstr .= $_;
    }
    eval ($vstr);
    
    $lily_version= "$TOPLEVEL_MAJOR_VERSION.$TOPLEVEL_MINOR_VERSION.$TOPLEVEL_PATCH_LEVEL$TOPLEVEL_MY_PATCH_LEVEL";
    
    # stupid checks.
    $lily_version= "$TOPLEVEL_MAJOR_VERSION.$TOPLEVEL_MINOR_VERSION.$TOPLEVEL_PATCH_LEVEL$TOPLEVEL_MY_PATCH_LEVEL";


    close V;
}

sub set_html_footer
{
    my $MAILADRESS=$ENV{MAILADRESS};
    my @pw=(getpwuid($<));
    my $username=$pw[6];

    $footstr = 
	"\n<hr>Please take me <a href=index.html>back to the index</a>\n<hr>
<font size=-1>
This page was generated by <code>make_website</code> from lilypond-$lily_version by
<p>
<address><br>$username <a href=mailto:$MAILADRESS>&lt<!bla>$MAILADRESS</a>&gt</address>
<p>" . `date` . "
<p></font>";
}
    

# do something, check return status
sub my_system
{
    my (@cmds) = @_;
    foreach $cmd (@cmds) {
	my $ret =  ( system ($cmd));
	if ($ret) {
	    print STDERR "\nmake_website: failed on command \`$cmd\' (status $ret)\n";
	    exit 2;
	}
    }
}


local $base="lilypond/";
local @examples=("wohltemperirt" ,"standchen", "scsii-menuetto", "rhythm", "collisions");


sub gen_html
{
    print "generating HTML\n";
    my_system "make -kC .. html";
}

sub gen_examples
{
    print "generating examples: \n";
    foreach $a (@examples) {
	$texfile="lelie";
	$tex = "tex $texfile";
	if ($a eq "standchen" || $a eq "scsii-menuetto" ) {
	    $tex = "latex $a";
	    $texfile = "$a";
	}
	
	if ( ! -f "$a.ly.txt" ) {
	    my_system "ln $depth/input/$a.ly ./$a.ly.txt";
	}
	if ( ! -f "$a.ps.gz" ) {
	    my_system "lilypond $a;",
	    "$tex",
	    "dvips -o $a.ps $texfile;";

	}

	my_system "mv lelie.midi $a.midi; " 	if ( -f "lelie.midi" );

	# generate the pixmap at twice the size, then rescale (for antialiasing)
	if ( ! -f "$a.gif" ) {
	    my_system "gs -q -sDEVICE=ppmraw -sOutputFile=- -r200 -dNOPAUSE  $a.ps -c quit |pnmscale 0.5| ppmtogif > $a.gif",
	     "gzip $a.ps";
	}   
    }
}


sub gen_list
{
    print "generating HTML list\n";
    open HTMLLIST, ">example_output.html";
    print HTMLLIST "<html><body><title>LilyPond examples</title>\n";
    foreach $a (@examples) {
	$name=$a;
	print HTMLLIST "<h1>example file: $name</h1>\n<XMP>\n";

	open IF, "$depth/input/$a.ly";
	input_record_separator IF "%}";
	
	$desc = <IF>;
	close IF;
	
	print HTMLLIST "$desc\n</XMP>";

	$inputf="$a.ly.txt";
	$giff="$a.gif";
	$psf="$a.ps.gz";
	$midif="$a.midi";
	
	print HTMLLIST "<ul>
<li><a href=$inputf> The input file</a>
<li><a href=$giff>The output (gif)</a>
<li><a href=$psf>The output (PS)</a>\n";
	
	print HTMLLIST "<li><a href=$midif>The output (MIDI)</a>\n"
	    if ( -f $midif );
	print HTMLLIST "</ul>";
    }
    print HTMLLIST "</BODY></HTML>";
	close HTMLLIST;
}

sub edit_html
{
    print STDERR "adding footer\n";

    OUTER:
    foreach $a (<*.html>) {
	open H, "$a";
	my $sep="</BODY>";
	input_record_separator H $sep;
	my $file="";
	
	while (<H>) { 
	    if (/$mw_id/) {
		close H;
		next OUTER;
	    }
	    $file .= $_; 

	}
	close H;

	my $subst =  $footstr;
	$subst .= $back if (! $a =~ /index.html/ );
	$file =~ s/$sep/$subst$sep/g ;
	
	open H, ">$a";
	print H $mw_id;
	print H $file;
	close H;
    }
}
sub copy_files
{  
    print "copying files\n";
    print `ln -s $depth/out ./docxx` if ( ! -x "docxx" ) ;
    my_system "cp $depth/TODO ./TODO.txt",
    "cp $depth/NEWS ./NEWS.txt",
    "cp ../lelie*gif .";
}

sub docxx_update
{
    my_system "make -C $depth doc++";
}

sub do_tar
{
     print "tarring.\n";
     my_system
	 " tar vhcf website.tar *.html *.gif *.ps.gz *.txt *.midi docxx/*;",
	 "gzip -f9 website.tar;";
}

sub main
{
    $depth = "../";
    my $cwd;
    chomp($cwd = `pwd`);
    die "need to be in directory Documentation\n" if ( ! ($cwd =~ /Documentation$/));
    get_version;
    set_html_footer;


    $depth = "../../";

    chdir ("out");
    $ENV{"TEXINPUTS"} .= ":$depth/input/:";
    $ENV{"LILYINCLUDE"} = "$depth/input/";


    gen_html;
    gen_examples;
    gen_list;
    copy_files;
    edit_html;
    docxx_update;
    do_tar;
}
main;
