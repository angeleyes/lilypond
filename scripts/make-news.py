#!/usr/bin/python

import sys
import re
import datetime
import time
import os
import xml.sax.saxutils

root_url = 'http://lilypond.org/web'

auto_generated_warning = '''<!--

WARNING

This page is generated by make-news.py; do not edit!
Edit news.html.in instead.

-->
'''

feed_in_file, news_in_file, old_news_in_file = sys.argv[1:]

html_news = open (news_in_file).read ()
rss_feed_template = open (feed_in_file).read ()
old_news_template = open (old_news_in_file).read ()

news_items = re.findall (r'(<dt( class="sticky"|)>\s*<b>\s*(.+?)\s*</b>' +
                         r'.*?<em>\s*(.+?)\s*</em>\s*(<!--.+?-->|)\s*</dt>\s*' +
                         r'<dd>\s*(.+?)\s*</dd>)', html_news, re.DOTALL)

# Generate RSS feed with rss_items_count first news items

rss_items_count = 20
rss_item_template = '''
<item>
  <title>%(title)s</title>
  <description>%(text)s</description>
  <category>%(category)s</category>
  <pubDate>%(formatted_date)s</pubDate>
</item>
'''

incomplete_href_re = re.compile ('href="(?!(?:http|ftp|https|mailto|news)://)(.+?)"')

def incomplete_href_replace (m):
    return 'href="%s"' % os.path.join (root_url, m.group (1))

rss_news_items = []
for (full_item, sticky, title, date, alt_date, text) in news_items[:rss_items_count]:
    try:
        parsed_date = datetime.datetime.strptime (date, '%B %d, %Y')
    except ValueError:
        try:
            alt_date = alt_date. replace ('<!--', ''). replace ('-->', '').strip ()
            parsed_date = datetime.datetime.strptime (alt_date, '%B %d, %Y')
        except ValueError:
            sys.stderr.write ("`%s': cannot parse date in \"Month DD, YYYY\" \
format, junking this news item\n" % (alt_date or date))
            continue
    formatted_date = parsed_date.strftime ('%a, %d %b %Y 00:00:00 GMT')

    full_item = full_item.lower ()
    category = 'Publication'
    if 'release' in full_item or 'bugfix' in full_item:
        category = 'Release'
    elif 'translat' in full_item:
        category = 'Translation'
    elif 'report' in full_item:
        category = 'Report'

    text = text.replace ('@DEPTH@', root_url)
    text = text.replace ('@DOC@', os.path.join (root_url, '../doc/'))
    text = incomplete_href_re.sub (incomplete_href_replace, text)
    text = xml.sax.saxutils.escape (text)

    rss_news_items.append (rss_item_template % vars ())

rss_feed = rss_feed_template.replace ('@NEWS@', ''.join (rss_news_items))
rss_feed = rss_feed.replace ('@DATE_TIME@', time.strftime ('%a, %d %b %Y %H:%M:%S GMT', time.gmtime ()))

open ('site/lilypond-rss-feed.xml', 'w'). write (rss_feed)

# Generate HTML pages news.ihtml and old-news.html

sticky_item_index = [bool(i[1]) for i in news_items].index (True)

if sticky_item_index < 10 and sticky_item_index >= 3:
    top_news_indices = [0, 1, 2, sticky_item_index]
else:
    top_news_indices = range (4)

top_news = auto_generated_warning + '<dl>\n'
top_news += '\n'.join ([news_items[k][0] for k in top_news_indices]) + '\n</dl>\n'
old_news = '\n'.join ([news_items[k][0] for k in range (len (news_items))
                       if not k in top_news_indices])

open ('site/top-news.ihtml', 'w').write (top_news)

old_news_page = auto_generated_warning
old_news_page += old_news_template.replace ('@NEWS@', old_news)
open ('site/old-news.html', 'w').write (old_news_page)
