IMPORTANT

	* update 20 pt table

	* decent TeX page layout

	* per-pstaff item-widths

	* script priority

	* slur direction

	* problems with empty staff.->revise staff-column/score-walker.


This is an assorted collection of stuff that will be done, might be
done, or is an idea that I want to think about

PARSER
	* Duration-> Musical_duration, typedef Rational Duration?

BUGS

	* hairpin width

	* help-lines for rests

	* [c8. c32 c32]

	* cis ( | ) cis

	* lilypond - -> crash

SEVERELY LACKING:

	* SPEED!

	* grace notes

FURTHER FOR ORCHESTRAL SCORE:

	* multibar rests

	* barnumbers, markers

	* abbreviations c4=16

INPUTLANGUAGE

	* relative mode for pitch entering

	* configure pitch_byte

	* special key.

	* figured bass?

	* transposition

	* rest name configurable

	* Raw request syntax

	* subtime with Subtle_reqs

SMALLISH PROJECTS

	* use rest size in Collision

	* bugreport to doc++ devel: struct not in class hier; public
	virtual baseclasses

	* half-sharps, half-flats
	
	* key undo

	* unix style paths for LILYINCLUDE EN

	* rpm package buildroot

	* indentable stream as baseclass for TeX stream, lily stream, Dstream.

	* caching Item/spanner dimensions.

	* key transposition
	
	* caching breakpoints / saving them. 

	* use dstream feature in mi2mu

        * qtor, btor, mtor-> tor( QUIET_ver ), tor( DEBUG_ver ), etc.

	- declare notenametab?

	* use tors feature in lily

	* do conventional keys (C G A, F B E, a e fis, d as des, etc ), 
	  besides lists of flats/sharps

	* midi esp.: use I32 iso int where 32 bits are needed (or assumed...)

	* fix Staff_elem::width() derivs to use offset_

	* parshape

	* read from mmap directly: bugreport to flex developers->
	yy_scan_buffer in C++..

	* binsearch/hash for identifiers

	* stafftypes: voice names/ instrument names.

	* Lookup::tex_glissando, Lookup::tex_bracket,  (use texbeam.cc as an
	example.)

	* Decent TeX titledefs (\tempo, \metron, etc. )

	* command priority into enum

	* C meter iso 4/4

	* textspanner: center position

	* script-spacing

	* Brackets

	* caching of Register_group_register hierarchies.

	* use (char *) iso. String for communication between lexer and
	parser.

	* configure idealspacing: arithmetic

	* add (good guess of) width to lyric items

	* midi output: eat-up dynamic, key/meter/tempo changes, and
write them neatly

	* LilyPond .deb

DOC

	* beam generation.

	* all errors

	* a test suite

FUTURE

	* Reg_configure_request

	* bring Collision::do_pre_processing to haircutter

	* slurs per voicegroup.

	* slur parts as a script
	
	* mixed fontsizes

	* put scripts on bars

	* glissando

	* guitar chord

	* Junk Staff_column, and find the requests while walking the Voices.?

	* MIDI repeat: make lily understand repeats

	* better beamslope calculation:	QLP for beams?

	* implement better breaking algorithm

	* Text_crescendo

	* clean solution for staffsize in items.

	* merge key{item} & localkey{item}?

	* revise calcideal

	* volta

	* piano staff

	* vertical spanner

IDEAS

	* scoping in Lexer?

	* integrate Register/Midi stuff

	* create libmudela, or liblily_frontend

	* move MIDI stuff (including Quantization) to a ANSI C libmidi library.

	* use an embedded language: scheme, lisp, S-lang, Perl, GUILE, ?
	for : 
		- Items/Spanners
		- Registers

	* y -dims in internote?

	* hack up mf sources for decent spacing info (and then maybe
	read TFM directly)

	* merge Atom and Symbol?

	* merge common code of Item, Atom/Molecule

	* Spacing_request for manually adjusting spacing

	* Staff_group, Score_request_register.

	* SHIT: meters/bars should be aligned, which is difficult if
	we get different keychanges in different staffs.

	* Integrating (objectiveC) MusicKit with LilyPond
		
	* MusixTeX output possible?

	* PostScript output (esp. Beams, Slurs, etc)

	* caching breakpoints

	* use exceptions iso assert?

	* #c <-> cis

	* breath marks 

	* used fixedpoint arithmetic for min. energy.
