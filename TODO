Features you cannot find in the doco as working, should be mentioned here.

This is an assorted collection of stuff that will be done, might be
done, or is an idea that I want to think about

Most of the items are marked in the code as well, with full explanation. 
grep for TODO and ugh/ugr/urg

0.2:

	* add a Duration_convert memberr to Duration_iter to set parameters.
	Junk global duration settings. 
 
	* deps for ly2dvi

	* depracate \duration

	* clean up abbrev/plet/beam/abbrevbeam/duration mess in parser.

 	* minimum length second part broken tie
 
        * lowest beam of (UP) beam must never be lower than second staffline

	* multibar rests

	* make lily output make dependencies.

 	* make sure that columns never touch
 	  old hack at spring-spacer.cc:690 seems to be broken
 
 	* latex mutopia/los-toros-oboe-16.tex: max memsize
 
 	* fix position of bar number
 
	* fix website.

	* libtoolize flowerlib

	* shared lib

	* bf: abbrevbeam? 

	* robustify Beam (in case of no stems, 32nd notes)

	* fix silly " "2*12 a4 (=4*12) sticky plet 

	* check for groff / troff/ nroff et

	* use kpsepath to find all TeX dirs
	- configure.in 
	- clean-fonts.sh

	* mudela-convert.

	* nicen examples:
	- remove all \multi
	- break-up heavily-nested score blocks

	* disable spaces in TeX stuff
	
	* handle ^C for tmp/file creation.

	* WWW mirror/archive for the mailing lists.

	* dots & rest collisions.

	* add a screenshot to the website. :)

	* documentation
	- introduction?
	- info?
	- LaTeX?
	- more manpages?

	* naming Mozarella, Madeira, Muella?

	* versioning for Feta

	* the warning about the negative slur/tie length appears twice
	which is irritating.

	* The `3' in the meter key is a one or two pixels too thin (at 600dpi)
	in the middle:

	* the tenuto script is too long and too thin

	* better hshift (dots, distance, head dependent)

	* stem len adjustable

STUFF
 	* convert-mudela:
	- make smarter
	- fix convert-mudela -e *.ly ;
	- convert-mudela -e empty.ly
	- redo in python.

      * clefs (AG): The names I'd like are of the form

            [FGC]n{[_^]8}   F, G or C clef, on nth line, subscripted
                            or superscripted with an 8.
        So:                 
            G, G2, treble, (== current `violin') G clef on second line.
            F, F4, bass    (== current `bass' )  F clef on fourth line
            G_8, G2_8      G clef on 2nd line, with 8 subscript
            G^8            G clef on 2nd line with 8 superscript
            C1, soprano    (==current `soprano') C clef on first line.
            C2,            (==current `mezzosoprano') C clef on second line
            C3, alto       (==current `alto')      C clef on third line
            C4, tenor      (==current `tenor')     C clef on fourth line
            C5             (==current `baritone') C clef on fifth line)



	* give Items/Spanners access to unbroken originals	

	* scoping for properties

	{	c4
		\multi 2  < { \stemup .. } { \stemdown .. } >
		c2 
	}

	this modifies \stem for the c2

	* emacs mudela-mode

	-  should handle block comments too.
	-  handle lexer modes (\header, \melodic, \lyric) etc.
	-  indentation
	-  notenames?
	-  fontlock: \melodic \melodic
 

	* use properties for:
	- Text_style
	- default_octave
	- plet?
	- default_duration?
	- default abbreviation
	- Staff_sym size
	- default tempo.
	- font size
	- bartypes (get rid of derived Span_bar_engravers)
	- cadenza mode? 
	- MIDI instrument
	- staff title

	* page handling:
	- PS output
	- optimal pagebreaking.

	* put errorlevel in Input class

	* AFM for font input?


3RD PARTY BUGS:

	* tried egcs 1.0.2: failed on lily/stem.cc -> flower/include/interval.hh
	  should narrow down and send bug report

	* gcc 2.8.1: see ice and RESIZE_ICE

	* xdvi: PS in magnifying glass.

	* Fix profiling. gprof bugreport?

	* GNU diff 2.7: diff -rN does not see a new directory with empty file

	* GNU patch 2.1: <must find simple example> if patch chokes on a
	  hunk, or on allegedly unsorted hunks in a diff, it may stop 
	  without a trace of failure (create .rej file, print error or 
	  dump core) and just ignore any further diffs.

PROJECTS

	* Unicode support?
	- 16 bit Strings
	- -u switch
	- detect of 16/8 bit files
	- examples to go with it.

	* Spring_spacer:
	- write a faster Spring_spacer (without matrices if possible)
	- use straight LP to find minimal "fitting force"
	- relate energybound to linelen unitspace fontsize etc.
	- used fixed point fp

	* \header
	- output header info to MIDI too.


	* Makefile stuff:
	- shared lib on Solaris too.

	* Add mudela-output to Rosegarden.

	* a musical dictionary. See Documentation/vocabulary-*, other
languages:
	- explanation
	- italian
	- german
	- dutch
	- swedish
	 .. ?

	* chords
	- guitar chords
	- chord names
	- basso continuo
	- Syntax/parser
	- MIDI output?
	- typesetting

	* integrate midi-elts from mi2mu and lily?

	* Debug logs:
	- derive lily_stream, Dstream, texstream from ostream?
	- indentable stream as baseclass for TeX stream, lily stream, Dstream.
	- use dstream feature in mi2mu
	- integrate IO checking into stream class

	* input converters
	- NIFF?
	- ABC? 
	- SMDL?

	* add to MIDI output:
	- tempo change
	- ornaments (and trills?)
	- repeat
	- slurs
	- accents
	- dynamics
	- account for rhythmic position in measure
	- etc.

	* grace notes
	- make separate class for Grace_*_engravers 
	(which is at Voice_gravs level)
	- make encapsulated spacing problems.

	* accidentals per Voice_group

	* Output class, handles : (smallish)
	- help text /(c) notice?
	- version line
	- warning /errors/progress
	- abort on error/warning; exit status
	- quiet/ignore-version options
	- logfile output

	* piano staff

	* elaborate Staff_side baseclass:
	- scripts
	- text
	- slur start/end

	* cautionary accidental

	* Output an output format independent (ofi) typeset file; and 
	  make ofi2 TeX, MusiXTex, Display PostScript, PostScript,
	  Ascii... interpreters. (difficult)

	- NIFF ?
	- Common Music Notation
	- PostScript output (esp. Beams, Slurs, etc)
	- Move all Score_elems, into libmutype.a
 
	* Documentation
	- Doc Mutopia (Music To The People) 
	- Doc (C) stuff of sheet music
	- a better format?  SGML?  TeX?  Info?
	- a tutorial

	* TeX spanners , use texbeam.cc as an example (smallish)
	- Glissando
	- trill

	* Rewrite Stem, Beam and Rhythmic_grouping (hairy)
	- [c8. c32 c32]
 	- doc on Rhythmic_grouping
	- general shaving on Beam and Stem
	- use plet grouping
	- separate visual from rhythmic info even more
	- beams over bars

	* Redo fonts
	- adapt for multiple font sizes.

	* lines:
	- Ledger lines, should be separate item: Ledger_lines, Ledger_lines
	- set different line sizes / thicknesses
	- beam stem showthrough, inter beam sizes (french vs german style)

	* Collisions
	- left/right note balls should be handled by Collision:
	< \multi 2; { \stem 1; <b c> } { <f as b> } >

	* Keys:
	- merge key{item} & localkey{item}?
	- do conventional keys (C G A, F B E, a e fis, d as des, etc ), 
	  besides lists of flats/sharps, possibly via declaration
	- key transposition. 
	- key undo: \key bes; .. . \key; should print natural	
	- special key: \key bes 'b bis';
	- spacing, national styles?

	* Support for TAB
	- redo Notehead to allow digits as heads
	- add a \tablature {} lexer mode for easy entering

	* should adjust stemlength for flag number.

	* breaking:
	- caching breakpoints
	- saving them
	- penalties
	- specify number of lines

	* Rhythmic staff.

	* markers


INPUTLANGUAGE

	* c4 4 4 4 for c4 c4 c4 c4?

	* neatly (and readably) expressing concurrent
	voices

	* <c f a>4 ?

	* Viola mode?

		@c c g e g 
	for
		c g es g, 

		@A c g e g
	for
		cis gis e gis

	* relative mode for pitch entering

	* bracket (bracketplets)

	* configure pitch_byte

	* rest name configurable

	* Raw request syntax

SMALLISH PROJECTS

	* progress when creating MIDI elts.

	* A range for context errors (eg. mark both { and }. )

	* lyric in staff  (sharpsharp in staff, text below)

	* write Dynamic_line (to group dynamics horizontally)

	* use Real for all y positions.
	- use translate_axis( .. ,Y_AXIS) 

	* half-sharps, half-flats

	* adaptive accidental spacing.

	* handle EOF graciously in error messages.
oo
	* caching Item/spanner dimensions.

	* centered whole rest

        * qtor, btor, mtor-> tor( QUIET_ver ), tor( DEBUG_ver ), etc.
	- use tors feature in lily (?)

	* declare notenametab?

	* midi esp.: use I32 iso int where 32 bits are needed (or assumed...)

	* Flower types:
	- A decent scalar type
	- String hash
	- Pointer hash

	* binsearch/hash for identifiers

	* stafftypes: voice names/ instrument names.

	* TeX stuff:	
	- Decent TeX titledefs (\tempo, \metron, etc. )
	- decent TeX page layout

	* lily \tempo

	* C meter iso 4/4, idem for alla breve, etc.

	* textspanner: center position

	* Brackets
	
	* Scripts:
	- stack scripts in chords:
	  % fingering:        footing:
	    < a-4 c-2 g-1 >   < c-\ltoe e-\lheel >
	- script-spacing
	- slur parts as a script
	- stack parameterised scripts for fingering and footing:

            % toe to bheel   four to five
	    %   ^_u            4_5  
	    %     -                           
	    %  --|x--         --|x--
	    %  --|---         --|---
	    %  --|---         --|---
          (where "to" is a tiny bow)

	* auxilliary file for caching info.

	* Text_crescendo

	* clean solution for staffsize in items.

	* revise calcideal

	* volta

IDEAS

	* Output data structures of Mudela in XML/SGML.

	* create libmudela, or liblily_frontend

	* move MIDI stuff (including Quantization) to a ANSI C libmidi library.

	* use an embedded language: Python, Scheme
	for: 
		- Score_elems
		- Engraver
		- Translators
		- Complex mudela?

	* y -dims in internote? Staff-space? X-dimensions?

	* Spacing_request for manually adjusting spacing

	* caching breakpoints

	* #c <-> cis

	* breath marks 

	* used fixedpoint arithmetic for min. energy.

	* move towards incremental algorithms.

	* far fetched language ideas
	- design meta-language like TeX and Metafont
	- programming/macros input

	* Global type registration.

		My_class * p = create_object( My_class )
		Type t = get_type ( *p );
		if ( t <= get_type( q ))
			..

	* versioning stuff (cvt mudela, mudela, etc.)

	* a real convert-mudela

	* dots into separate item.

	* use String iso Text_def for lyrics.

	* Klavarskribo?

	* lyrics in chords still fuck up.

	* pushgroup/popgroup

	* Use hooks/dependency graphs for properties
