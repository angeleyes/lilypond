/*   
  ly-smobs.icc -- implement smob glue. 
  
  source file of the GNU LilyPond music typesetter
  
  (c) 1999--2000 Han-Wen Nienhuys <hanwen@cs.uu.nl>
  
 */

#ifndef LY_SMOBS_ICC
#define LY_SMOBS_ICC

#define IMPLEMENT_UNSMOB(CL, name)		\
CL *						\
unsmob_ ## name ( SCM s)			\
{						\
  if (SMOB_IS_TYPE_B(CL, s))			\
    return SMOB_TO_TYPE(CL, s);			\
  else						\
    return 0;					\
}\
SCM smobify (CL *cl)\
{\
  SCM s;								\
									\
  SCM_NEWCELL(s);							\
  SCM_SETCAR(s,CL::smob_tag_);						\
  void * me_p = cl; 							\
  SCM_SETCDR(s,me_p);							\
return s;\
}\



#define IMPLEMENT_SMOBS(CL)\
long CL::smob_tag_;\
static scm_smobfuns CL ## _funs = {					\
  CL::mark_smob, CL::free_smob,						\
  CL::print_smob, 0,							\
};									\
void									\
CL::init_smobs ()							\
{									\
  smob_tag_ = scm_newsmob (&CL ## _funs);					\
}									\
									\
									 \
void									 \
CL::unsmobify_self ()							 \
{									 \
  SCM s = self_scm_;							 \
  scm_unprotect_object (s);						 \
  									 \
  SCM_CAR(self_scm_) = SCM_EOL;	 \
  SCM_CDR(self_scm_) = SCM_EOL;						 \
  self_scm_ = SCM_EOL;							 \
}									 \
\
SCM									\
CL::smobify_self ()							\
{									\
  if (self_scm_ != SCM_EOL)						\
    return self_scm_;							\
									\
  /*									\
    This is local. We don't assign to self_scm_ directly, to assure	\
    that S isn't GC-ed from under us.					\
   */									\
  SCM s = smobify (this); \
  self_scm_ = s;							\
  scm_protect_object (s);						\
									\
/* no scm_done_malloc() !  */ \
  do_smobify_self();							\
  return s;					\
}						\
scm_sizet					\
CL::free_smob (SCM ses)				\
{						\
  CL * s = (CL*) SCM_CDR(ses);			\
  /* someone else did the deed already; this might be an automatic var.*/ \
  if (s->self_scm_ != ses)\
     return 0; \
  SCM_CAR(ses) = SCM_EOL;\
  					\
  return 0;\
}						\
ADD_SCM_INIT_FUNC(CL, CL::init_smobs)\


#endif /* LY_SMOBS_ICC */

