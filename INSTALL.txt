

INSTALL - compiling and installing GNU LilyPond
***********************************************

Abstract
========

   This document explains what you need to install LilyPond, and what
you should do.  If you are going to compile and install LilyPond often,
e.g. when doing development, you might want to check out the
`buildscripts/set-lily.sh' script.  It sets some environment variables
and symlinks, which comes in handly when you have to compile LilyPond
more often.

Obtaining
=========

   You can get the latest version of LilyPond at
ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/
(ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/).

   _If you upgrade by patching do remember to rerun autoconf after
applying the patch_.

   If you do not want to download the entire archive for each version,
the safest method for upgrading is to use `xdelta', see
`ftp://ftp.xcf.berkeley.edu/pub/xdelta/'.

   The following command produces `lilypond-1.1.55.tar.gz' from
`lilypond-1.1.54' identical (up to compression dates) to the .55 on the
FTP site.
       xdelta patch lilypond-1.1.54-1.1.55.xd lilypond-1.1.54.tar.gz

Prerequisites
=============

   For compilation you need:

   * A GNU system: GNU LilyPond is known to run on these GNU systems:
     Linux     (PPC, intel), FreeBSD, AIX, NeXTStep, IRIX, Digital Unix
     and Solaris.

   * Lots of disk space: LilyPond takes between 30 and 100 mb to
     compile if you use debugging information.  If you are short on
     disk-space run configure with `--disable-debugging'.

   * Although we recommend to use Unix, LilyPond is known to run on
     Windows NT/95/98 as well.  See Section Windows NT/95,es.

   * EGCS 1.1 or newer. Check out `ftp://ftp.gnu.org/pub/gcc/'.

   * Python 1.5, Check out `ftp://ftp.python.org' or
     `ftp://ftp.cwi.nl/pub/python'.

   * GUILE 1.3.4,  check out
     http://www.gnu.org/software/guile/guile.html
     (http://www.gnu.org/software/guile/guile.html).

   * GNU make.  Check out ftp://ftp.gnu.org/make/
     (ftp://ftp.gnu.org/make/).

   * Flex (version 2.5.4 or newer).  Check out ftp://ftp.gnu.org/flex/
     (ftp://ftp.gnu.org/flex/).

   * Bison (version 1.25 or newer).  Check out ftp://ftp.gnu.org/bison/
     (ftp://ftp.gnu.org/bison/).

   * Texinfo. Check out ftp://ftp.gnu.org/pub/texinfo/
     (ftp://ftp.gnu.org/pub/texinfo/).  Most documentation is in
     texinfo.

   * The geometry package for LaTeX is needed to use ly2dvi.  Available
     at
     ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry
     (ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry)
     or at mirror site ftp://ftp.dante.de (ftp://ftp.dante.de)

   * MetaPost, if you want to use direct PostScript output. Please note
     that  tetex-0.4pl8 (included with Redhat 5.x) does not include
     `mfplain.mp', which is needed  for producing the scaleable font
     files.


Running
=======

   GNU LilyPond does use a lot of resources. For operation you need the
following software

   * TeX

   * A PostScript printer and/or viewer (such as Ghostscript) is
     strongly     recommended.  Xdvi will show all embedded PostScript
     too if you have     Ghostscript installed.

   * GUILE 1.3.4, check out http://www.gnu.org/software/guile/
     (http://www.gnu.org/programs/guile.html)

   For running LilyPond successfully you have to help TeX and MetaFont
find various files.  The recommended way of doing so is adjusting the
environment variables in the start-up scripts of your shell.  An
example is given here for the Bourne shell:
     export MFINPUTS="/usr/local/share/lilypond/mf:"
     export TEXINPUTS="/usr/local/share/lilypond/tex:/usr/local/share/lilypond/ps:"

   The empty path component represents TeX and MetaFont's default
search paths.  Scripts with the proper paths for the bourne and C-shell
respectively are generated in `buildscripts/out/lilypond-profile' and
`buildscripts/out/lilypond-login' during compilation.

   LilyPond is a hiddeously big, slow and bloated program.  A fast CPU
and plenty of RAM is recommended for comfortable use.

Website
=======

   The website is the most convenient form to use for reading the
documentation on-line documentation. It is made by entering

       make website
   This does require a fully functioning

   If you want to auto-generate Lily's website, you'll need some
additional conversion tools.

   * xpmtoppm (from the Portable Bitmap Utilities) (For RedHat Linux
      users: it is included within the package libgr-progs).
     the original is at
     ftp://ftp.x.org/contrib/utilities/netpbm-1mar1994.p1.tar.gz
     (ftp://ftp.x.org/contrib/utilities/netpbm-1mar1994.p1.tar.gz)

   * pnmtopng, which is also in libgr-progs for RedHat. The original is
     at
     ftp://swrinde.nde.swri.edu/pub/png/applications/pnmtopng-2.37.2.tar.gz
     (ftp://swrinde.nde.swri.edu/pub/png/applications/pnmtopng-2.37.2.tar.gz).i

     The version of `pnmtopng' that is distributed with RedHat 5.1 and
     5.2 contains a bug: pnmtopng is dynamically linked to the wrong
     version of libpng, which results in cropped images.  Recompile it
     from source, and make sure that the pnmtopng binary is linked
     statically to the libpng that is included in libgr.  RedHat 6.0
     does not have this problem.

           tar xzf libgr-2.0.13.tar.gz
                make
                cd png
                rm libpng.so*
                make pnmtopng

     You can then install the new pnmtopng into `/usr/local/bin/'

   * Bib2html http://pertsserver.cs.uiuc.edu/~hull/bib2html.
     (http://pertsserver.cs.uiuc.edu/~hull/bib2html.)      Which, in
     turn depends on man2html for proper installation.  man2html can be
     had from
     http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05
     (http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05).

     The website will build without this utility, but you will not see
     our hypertextified bibliography.

   * Doc++ (optional) to read the source code.


Configuring and compiling
=========================

   to install GNU LilyPond, simply type:

     	gunzip -c lilypond-x.y.z | tar xf -
     	cd lilypond-x.y.z
     	./configure		# fill in your standard prefix with --prefix
     	make
     	make install

   This will install a number of files, something close to:

     	/usr/local/man/man1/mi2mu.1
     	/usr/local/man/man1/convert-mudela.1
     	/usr/local/man/man1/mudela-book.1
     	/usr/local/man/man1/lilypond.1
     	/usr/local/bin/lilypond
     	/usr/local/bin/mi2mu
     	/usr/local/bin/convert-mudela
     	/usr/local/bin/mudela-book
     	/usr/local/bin/abc2ly
     	/usr/local/share/lilypond/*
     	/usr/local/share/locale/{it,nl}/LC_MESSAGES/lilypond.mo

   The above assumes that you are root and have the GNU development
tools, and your make is GNU make.  If this is not the case, you can
adjust your environment variables to your taste:


     	export CPPFLAGS="-I /home/me/my_include -DWEIRD_FOOBAR"
     	./configure

   `CPPFLAGS' are the preprocessor flags.

   The configure script is Cygnus configure, and it will accept
`--help'. If you are not root, you will probably have to make it with a
different `--prefix' option.  Our favourite location is


     	./configure --prefix=$HOME/usr

   In this case, you will have to set up MFINPUTS, and TEXINPUTS
accordingly.

   Since GNU LilyPond currently is beta, you are advised to also use


     	--enable-debugging
     	--enable-checking

   Options to configure include:

``--enable-printing''
     Enable debugging print routines (lilypond `-D' option)

``--enable-optimise''
     Set maximum optimisation: compile with `-O2'.  This can be
     unreliable on some compiler/platform combinations (eg, DEC Alpha
     and PPC)

``--enable-profiling''
     Compile with support for profiling.

``--enable-config''
     Output to a different configuration file.  Needed for
     multi-platform     builds

   All options are documented in the `configure' help The option
`--enable-optimise' is recommended for Real Life usage.

   If you do


     	make all

   everything will be compiled, but nothing will be installed.  The
resulting binaries can be found in the subdirectories `out/' (which
contain all files generated during compilation).

Configuring for multiple platforms
==================================

   If you want to compile LilyPond with different configuration
settings, then, you can use the `--enable-config' option.  Example:
suppose I want to build with and   without profiling.  Then I'd use the
following for the normal build,


           ./configure --prefix=~ --disable-optimise --enable-checking
           make
           make install

   and for the profiling version, I specify a different configuration.


           ./configure --prefix=~ --enable-profiling --enable-config=optprof --enable-optimise --disable-checking
           make config=optprof
           make config=optprof install

Installing
==========

   if you have done a successful `make', then a simple


     	make install

   should do the trick.

   If you are doing an upgrade, please remember to remove obsolete
`.pk' and `.tfm' files of the fonts.  A script has been provided to do
the work for you, see `bin/clean-fonts.sh'.

Redhat linux
============

   RedHat Linux users can compile an RPM. A spec file is in
`make/out/lilypond.spec', it is distributed along with the sources.

   You can make the rpm by issuing

     	rpm -tb lilypond-x.y.z.tar.gz
     	rpm -i /usr/src/redhat/RPMS/i386/lilypond-x.y.z

   Precompiled i386 RedHat RPMS are available from
ftp://freshmeat.net/pub/rpms/lilypond/
(ftp://freshmeat.net/pub/rpms/lilypond/) and
http://linux.umbc.edu/software/lilypond/rpms/
(http://linux.umbc.edu/software/lilypond/rpms/).

   For compilation on a RedHat system you need these packages, in
addition to the those needed for running:
   * glibc-devel

   * libstdc++-devel

   * guile-devel

   * flex

   * bison

   * texinfo

Debian GNU/linux
================

   A Debian package is also available; contact Anthony Fok
<foka@debian.org>.  The build scripts are in the subdirectory `debian/'.

Windows NT/95
=============

   Separate instructions on building for W32 are available; See the
files in `Documentation/ntweb/', included with the sources.

Problems
========

   For help and questions use <help-gnu-music@gnu.org> and
<gnu-music-discuss@gnu.org>.  Please consult the faq before mailing
your problems.

   If you find bugs, please send bug reports to <bug-gnu-music@gnu.org>.

   Known bugs that are LilyPond's fault are listed in `TODO', or
demonstrated in `input/bugs/'.

   Known bugs that are not LilyPond's fault are documented here.

LinuxPPC Bugs:
**************

   * egcs-1.1.2-12c (stock LinuxPPC R5) has a serious bug, upgrade to
     fixed in egcs-1.1.2-12f or gcc-2.95-0a,
     `ftp://dev.linuxppc.org/users/fsirl/R5/RPMS/ppc/'

   * egcs-1.0.2 (LinuxPPC R4): all compiling with `-O2' is suspect, in
     particular guile-1.3, and Lily herself will break.

Linux-i386
**********

   * SuSE6.2 and similar platforms (glibc 2.1, libstdc++ 2.9.0)

     Lily will crash during parsing (which suggests a C++ library
     incompatibility).  Precise cause, precise platform description or
     solution are not known.

     Note that this only happens on some computers with the said
     platform.

   * libg++ 2.7

     LilyPond occasionally crashes while parsing the initialisation
     files.  This is a very obscure bug, and usually entering the
     commandline differently "fixes" it.

          	lilypond input.ly

     and
          	lilypond -I. ./input.ly
     makes a difference

     Typical stacktrace:
          	SIGSEGV
          	__libc_malloc (bytes=16384)
          	?? ()
          	yyFlexLexer::yy_create_buffer ()
          	Includable_lexer::new_input (this=0x8209a00, s={strh_ = {

     This behaviour has been observed with machines that have old libg++
     versions (LinuxPPC feb '98, RedHat 4.x).

Solaris:
********

   * Sparc64/Solaris 2.6, GNU make-3.77

     GNU make-3.77 is buggy on this platform, upgrade to 3.78.1 or
     newer.

   * Sparc64/Solaris 2.6, ld

     Not yet resolved.

AIX
***

   * AIX 4.3 ld

     The following is from the gcc install/SPECIFIC file.
             Some versions of the AIX binder (linker) can fail with a
          relocation    overflow severe error when the -bbigtoc option
          is used to link    GCC-produced object files into an
          executable that overflows the TOC. A    fix for APAR IX75823
          (OVERFLOW DURING LINK WHEN USING GCC AND    -BBIGTOC) is
          available from IBM Customer Support and from its
          27service.boulder.ibm.com website as PTF U455193.

          Binutils does not support AIX 4.3 (at least through release
          2.9). GNU    as and GNU ld will not work properly and one
          should not configure GCC    to use those GNU utilities. Use
          the native AIX tools which do    interoperate with GCC.

     add -Wl,-bbigtoc to USER_LDFLAGS, ie:
              LDFLAGS='-Wl,-bbigtoc' ./configure


