@c -*- coding: latin-1; mode: texinfo; -*-

@node Preface
@unnumbered Preface


It must have been during a rehearsal of the EJE (Eindhoven Youth
Orchestra), somewhere in 1995 that Jan, one of the cranked violists
told Han-Wen, one of the distorted French horn players, about the
grand new project he was working on.  It was an automated system for
printing music (to be precise, it was MPP, a preprocessor for
MusiXTeX).  As it happened, Han-Wen accidentally wanted to print out
some parts from a score, so he started looking at the software, and he
quickly got hooked.  It was decided that MPP was a dead end.  After
lots of philosophizing and heated email exchanges, Han-Wen started
LilyPond in 1996.  This time, Jan got sucked into Han-Wen's new
project.

In some ways, developing a computer program is like learning to play
an instrument.  In the beginning, discovering how it works is fun, and
the things you cannot do are challenging.  After the initial excitement,
you have to practice and practice.  Scales and studies can be dull, and
if you are not motivated by others---teachers, conductors or
audience---it is very tempting to give up.  You continue, and gradually
playing becomes a part of your life.  Some days it comes naturally, and
it is wonderful, and on some days it just does not work, but you keep
playing, day after day.

Like making music, working on LilyPond can be dull work, and on
some days it feels like plodding through a morass of bugs.
Nevertheless, it has become a part of our life, and we keep doing it.
Probably the most important motivation is that our program actually
does something useful for people.  When we browse around the net we
find many people who use LilyPond, and produce impressive pieces of
sheet music.  Seeing that feels unreal, but in a very pleasant way.

Our users not only give us good vibes by using our program, many of
them also help us by giving suggestions and sending bug reports, so we
would like to thank all users that sent us bug reports, gave
suggestions or contributed in any other way to LilyPond.

Playing and printing music is more than a nice analogy.  Programming
together is a lot of fun, and helping people is deeply satisfying, but
ultimately, working on LilyPond is a way to express our deep love for
music.  May it help you create lots of beautiful music!

Han-Wen and Jan

Utrecht/Eindhoven, The Netherlands, July 2002.

@menu
* Notes for version 2.4::       
@end menu

@node Notes for version 2.6
@unnumberedsec Notes for version 2.6

For years, LilyPond has been associated with @TeX{}, for its design,
syntax and, last but not least, since it used @TeX{} as an output
engine. Starting with 2.6, the latter has changed. By default,
LilyPond now produces PostScript directly.  This makes it easier to
install, quicker to operate and more versatile.

Under the hood, this was made possible by use of the Pango library,
which does typesetting of multilingual text.  This means that you can
easily typeset Chinese, Russian or Minoic lyrics.  Another result is
the SVG output. You can create SVG pictures of music notation directly
from LilyPond. 

There are also small improvements.  This release has numerous extra
features, such as color support, string-number notation, arrowed
glissandi.  Moreover, it is now possible to commission features. For a
small fee, we (the core developers) can implement the features that
you sorely. Examples of sponsored features in 2.6 are: solfa notation,
stemlets, starting and stopping staves.


Han-Wen and Jan

Utrecht/Eindhoven, The Netherlands, May 2005.
