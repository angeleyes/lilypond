@c -*- coding: utf-8; mode: texinfo; -*-
@ignore
   Translation of GIT committish: FILL-IN-HEAD-COMMITTISH

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore


@node Pitches
@section Pitches

@lilypondfile[quote,ragged-right,line-width=16\cm,staffsize=16]
{pitches-headword.ly}

This section discusses how to specify the pitch of notes.  There
are three steps to this process: input, modification, and output.

@menu
* Writing pitches::             
* Changing multiple pitches::   
* Displaying pitches::          
* Note heads::                  
@end menu


@node Writing pitches
@subsection Writing pitches

This section discusses how to input pitches.  There are two
different ways to place notes in octaves: absolute and relative
mode.  In most cases, relative mode will be more convenient.

@menu
* Absolute octave entry::       
* Relative octave entry::       
* Accidentals::                 
* Note names in other languages::  
@end menu


@node Absolute octave entry
@subsubsection Absolute octave entry

@cindex pitch names
@cindex pitches
@cindex absolute
@cindex absolute octave specification

A pitch name is specified using lowercase letters@tie{}@code{a}
through@tie{}@code{g}.  The note names @code{c} to @code{b} are
engraved in the octave below middle C.

@c NOTE: don't use c' here.
@lilypond[verbatim,quote,ragged-right,fragment]
\clef bass
c d e f
g a b c
d e f g
@end lilypond

@funindex '
@funindex ,

Other octaves may be specified with a single quote@tie{}(@code{'})
or comma@tie{}(@code{,}) character.  Each@tie{}@code{'} raises the
pitch by one octave; each@tie{}@code{,} lowers the pitch by an
octave.

@lilypond[verbatim,quote,ragged-right,fragment]
\clef treble
c' c'' e' g
d'' d' d c
\clef bass
c, c,, e, g
d,, d, d c
@end lilypond

@seealso

Music Glossary: @rglos{Pitch names}.

Snippets: @lsrdir{Pitches,Pitches}.


@node Relative octave entry
@subsubsection Relative octave entry

@cindex relative
@cindex relative octave specification
@funindex \relative

When octaves are specified in absolute mode it is easy to
accidentally put a pitch in the wrong octave.  Relative octave
mode reduces these errors since most of the time it is not
necessary to indicate any octaves at all.  Furthermore, in
absolute mode a single mistake may be difficult to spot, while in
relative mode a single error puts the rest of the piece off by one
octave.

@example
\relative @var{startpitch} @var{musicexpr}
@end example

In relative mode, each note is assumed to be as close to the
previous note as possible.  This means that the octave of pitches
in @var{musicexpr} is calculated as follows:

@itemize
@item
If no octave changing mark is used on a pitch, its octave is calculated
so that the interval with the previous note is less than a fifth.  This
interval is determined without considering accidentals.

@item
An octave changing mark@tie{}@code{'} or@tie{}@code{,} can be added to
respectively raise or lower a pitch by an extra octave, relative to
the pitch calculated without an octave mark.

@item
Multiple octave changing marks can be used.  For example, @code{''}@tie{}and
@code{,,}@tie{} will alter the pitch by two octaves.

@item
The pitch of the first note is relative to
@code{@var{startpitch}}.  @var{startpitch} is specified in
absolute octave mode, and it is recommended that it be a octave of
@code{c}.

@end itemize

Here is the relative mode shown in action:

@lilypond[verbatim,quote,ragged-right]
\relative c {
  \clef bass
  c d e f
  g a b c
  d e f g
}
@end lilypond

Octave changing marks are used for intervals greater than a
fourth:

@lilypond[verbatim,quote,ragged-right]
\relative c'' {
  c g c f,
  c' a, e'' c
}
@end lilypond

A note sequence without a single octave mark can nevertheless span
large intervals:

@lilypond[verbatim,quote,ragged-right]
\relative c {
  c f b e
  a d g c
}
@end lilypond

If the preceding item is a chord, the first note of the chord is
used as the reference point for the octave placement of a
following note or chord.  Inside chords, the next note is always
relative to the preceding one.

@lilypond[verbatim,quote,ragged-right]
\relative c' {
  c
  <c e g>
  % the C is now an octave higher
  <c' e g'>
  % the C returns to the original pitch
  <c, e, g''>
}
@end lilypond

As explained above, the octave of pitches is calculated only with
the note names, regardless of any alterations.  Therefore, an
E-double-sharp following a B will be placed higher, while an
F-double-flat will be placed lower.  In other words, a
double-augmented fourth is considered a smaller interval than a
double-diminished fifth, regardless of the number of semitones
that each interval contains.

@lilypond[verbatim,quote,ragged-right]
\relative c'' {
  c2 fis
  c2 ges
  b2 eisis
  b2 feses
}
@end lilypond


@seealso

Music Glossary: @rglos{fifth}, @rglos{interval}, @rglos{Pitch names}.

Notation Reference: @ref{Octave checks}.

Snippets: @lsrdir{Pitches,Pitches}.


@funindex \transpose
@funindex \chordmode
@funindex \relative

@refbugs

The relative conversion will not affect @code{\transpose},
@code{\chordmode} or @code{\relative} sections in its argument.
To use relative mode within transposed music, an additional
@code{\relative} must be placed inside @code{\transpose}.

@c NOTE: DEPRECATED
If no @var{startpitch} is specified for @code{\relative},
then@tie{}@code{c'} is assumed.  However, this is a deprecated
option and may disappear in future versions, so its use is
discouraged.



@node Accidentals
@subsubsection Accidentals

@cindex accidental
@cindex key signature
@cindex clef

@warning{New users are sometimes confused about accidentals and
key signatures.  In LilyPond, note names are the raw input; key
signatures and clefs determine how this raw input is displayed.
An unaltered note like@tie{}@code{c} means @q{C natural},
regardless of the key signature or clef.  For more information,
see @rlearning{Accidentals and key signatures}.}

@cindex note names, Dutch
@cindex note names, default
@cindex sharp
@cindex flat
@cindex double sharp
@cindex sharp, double
@cindex double flat
@cindex flat, double

A @notation{sharp} pitch is made by adding @code{is} to the note name,
and a @notation{flat} pitch by adding @code{es}.  As you might expect,
a @notation{double sharp} or @notation{double flat} is made by adding
@code{isis} or @code{eses}.  This syntax is derived from Dutch note
naming conventions.  To use other names for accidentals, see
@ref{Note names in other languages}.

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
ais1 aes aisis aeses
@end lilypond

A natural will cancel the effect of an accidental or key
signature.  However, naturals are not encoded into the note name
syntax with a suffix; a natural pitch is shown as a simple note
name:

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
a4 aes a2
@end lilypond

@cindex quarter tones
@cindex semi-flats, semi-sharps

Quarter tones may be added; the following is a series of Cs with
increasing pitches

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
ceseh1 ces ceh c cih cis cisih
@end lilypond



@cindex accidental, reminder
@cindex accidental, cautionary
@cindex accidental, parenthesized
@cindex reminder accidental
@funindex ?
@cindex cautionary accidental
@cindex parenthesized accidental
@funindex !

Normally accidentals are printed automatically, but you may also
print them manually.  A reminder accidental can be forced by
adding an exclamation mark@tie{}@code{!} after the pitch.  A
cautionary accidental (i.e., an accidental within parentheses) can
be obtained by adding the question mark@tie{}@code{?} after the
pitch.  These extra accidentals can also be used to produce
natural signs.

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
cis cis cis! cis? c c c! c?
@end lilypond

Accidentals on tied notes are only printed at the beginning of a
new system:

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
cis1 ~ cis ~
\break
cis
@end lilypond


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{preventing-extra-naturals-from-being-automatically-added.ly}

@seealso

Music Glossary: @rglos{sharp}, @rglos{flat}, @rglos{double sharp},
@rglos{double flat}, @rglos{Pitch names}.
@c FIXME: add @rglos{quarter-tone}

Learning Manual: @rlearning{Accidentals and key signatures}.

Notation Reference: @ref{Automatic accidentals},
@ref{Musica ficta accidentals},
@ref{Note names in other languages}.

Snippets: @lsrdir{Pitches,Pitches}.


@refbugs

There are no generally accepted standards for denoting
quarter-tone accidentals, so LilyPond's symbol does not conform to
any standard.



@node Note names in other languages
@subsubsection Note names in other languages

There are predefined sets of note names for various other
languages.  To use them, include the language-specific init file.
For example, to use English notes names, add @code{\include
"english.ly"} to the top of the input file.  The available
language files and the note names they define are:

@cindex note names, other languages
@cindex pitch names, other languages

@smallexample
@multitable {nederlands.ly} {do re mi fa sol la sib si} {-iss/-is} {-ess/-es} {-ss/-x/-sharpsharp} {-essess/-eses}
@headitem Language
  @tab Note names
  @tab sharp @tab flat @tab double sharp @tab double flat
@item nederlands.ly
  @tab c d e f g a bes b
  @tab -is @tab -es @tab -isis @tab -eses
@item english.ly
  @tab c d e f g a bf b
  @tab -s/-sharp @tab -f/-flat @tab -ss/-x/-sharpsharp
    @tab -ff/-flatflat
@item deutsch.ly
  @tab c d e f g a b h
  @tab -is @tab -es @tab -isis @tab -eses
@item norsk.ly
  @tab c d e f g a b h
  @tab -iss/-is @tab -ess/-es @tab -ississ/-isis
    @tab -essess/-eses
@item svenska.ly
  @tab c d e f g a b h
  @tab -iss @tab -ess @tab -ississ @tab -essess
@item suomi.ly
  @tab c d e f g a b h
  @tab -is @tab -es @tab -isis @tab -eses
@item italiano.ly
  @tab do re mi fa sol la sib si
  @tab -d @tab -b @tab -dd @tab -bb
@item catalan.ly
  @tab do re mi fa sol la sib si
  @tab -d/-s @tab -b @tab -dd/-ss @tab -bb
@item espanol.ly
  @tab do re mi fa sol la sib si
  @tab -s @tab -b @tab -ss @tab -bb
@item portugues.ly
  @tab do re mi fa sol la sib si
  @tab -s @tab -b @tab -ss @tab -bb
@item vlaams.ly
  @tab do re mi fa sol la sib si
  @tab -k @tab -b @tab -kk @tab -bb
@end multitable
@end smallexample

In Dutch, @code{aes} is contracted to @code{as}, but both forms
are accepted in LilyPond.  Similarly, both @code{es} and
@code{ees} are accepted.  This also applies to
@code{aeses}@tie{}/@tie{}@code{ases} and
@code{eeses}@tie{}/@tie{}@code{eses}.  Sometimes only these
contracted names are defined in the corresponding language files.

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
a2 as e es a ases e eses
@end lilypond


Some music uses microtones whose alterations are fractions of a
@q{normal} sharp or flat.  The note names for quarter-tones
defined in the various language files are listed in the following
table.  Here the prefixes @notation{semi-} and @notation{sesqui-}
mean @q{half} and @q{one and a half}, respectively.  For the other
languages, no special names have been defined yet.

@smallexample
@multitable {nederlands.ly} {do re mi fa sol la sib si} {-iss/-is} {-ess/-es} {-ississ/-isis} {-ississ/-isis}
@headitem Language
  @tab Note names
  @tab semi-sharp @tab semi-flat @tab sesqui-sharp @tab sesqui-flat

@item nederlands.ly
  @tab c d e f g a bes b
  @tab -ih @tab -eh @tab -isih @tab -eseh
@item english.ly
  @tab c d e f g a bf b
  @tab -qs @tab -qf @tab -tqs @tab -tqf
@item deutsch.ly
  @tab c d e f g a b h
  @tab -ih @tab -eh @tab -isih @tab -eseh
@item italiano.ly
  @tab do re mi fa sol la sib si
  @tab -sd @tab -sb @tab -dsd @tab -bsb
@item portugues.ly
  @tab do re mi fa sol la sib si
  @tab -sqt @tab -bqt @tab -stqt @tab -btqt
@end multitable
@end smallexample


@seealso

Music Glossary: @rglos{Pitch names}.

Snippets: @lsrdir{Pitches,Pitches}.


@node Changing multiple pitches
@subsection Changing multiple pitches

This section discusses how to modify pitches.

@menu
* Octave checks::               
* Transpose::                   
@end menu

@node Octave checks
@subsubsection Octave checks

@cindex octave correction
@cindex octave check
@funindex =
@funindex \octave

In relative mode, it is easy to forget an octave changing mark.
Octave checks make such errors easier to find by displaying a
warning and correcting the octave if a note is found in an
unexpected octave.

To check the octave of a specific note, specify the absolute
octave after the @code{=}@tie{}symbol.  This example will generate
a warning (and change the pitch) because the second note is the
absolute octave @code{d''} instead of @code{d'} as indicated by
the octave correction.

@lilypond[verbatim,quote,ragged-right,fragment]
\relative c'' {
  c2 d='4 d
  e2 f
}
@end lilypond

The octave of notes may also be checked with the
@code{\octave}@tie{}@var{controlpitch} command.  @var{controlpitch} is
specified in absolute mode.  This checks that the interval between the
previous note and the @var{controlpitch} is within a fourth (i.e. the
normal calculation of relative mode).  If this check fails, a warning
is printed, but the previous note is not changed.  Future notes are
relative to the @var{controlpitch}.

@lilypond[verbatim,quote,ragged-right,fragment]
\relative c'' {
  c2 d
  \octave c'
  e2 f
}
@end lilypond

Compare the two bars below.  The first and third @code{\octave}
check fail, but the second one does not fail.

@lilypond[verbatim,quote,ragged-right,fragment]
\relative c'' {
  c4 f g f

  c4
  \octave c'
  f
  \octave c'
  g
  \octave c'
  f
}
@end lilypond


@seealso

Snippets: @lsrdir{Pitches,Pitches}.


@node Transpose
@subsubsection Transpose

@cindex transpose
@cindex transposition
@cindex transposition of pitches
@funindex \transpose

A music expression can be transposed with @code{\transpose}.  The
syntax is

@example
\transpose @var{frompitch} @var{topitch} @var{musicexpr}
@end example

@noindent
This means that @var{musicexpr} is transposed by the interval
between the pitches @var{frompitch} and @var{topitch}: any note
with pitch @var{frompitch} is changed to @var{topitch} and any
other note is transposed by the same interval.  Both pitches are
entered in absolute mode.

Consider a piece written in the key of D-major.  It can be
transposed up to E-major; note that the key signature is
automatically transposed as well.

@lilypond[verbatim,quote,ragged-right]
\transpose d e {
  \relative c' {
    \key d \major
    d4 fis a d
  }
}
@end lilypond

If a part written in C (normal concert pitch) is to be played on
the A clarinet (for which an A is notated as a C and thus sounds a
minor third lower than notated), the appropriate part will be
produced with:

@lilypond[verbatim,quote,ragged-right]
\transpose a c' {
  \relative c' {
    \key c \major
    c4 d e g
  }
}
@end lilypond

@noindent
Note that we specify @code{\key c \major} explicitly.  If we do
not specify a key signature, the notes will be transposed but no
key signature will be printed.

@code{\transpose} distinguishes between enharmonic pitches: both
@code{\transpose c cis} or @code{\transpose c des} will transpose
up a semitone.  The first version will print sharps and the notes
will remain on the same scale step, the second version will print
flats on the scale step above.

@lilypond[verbatim,quote,ragged-right]
mus = \relative c' { c d e f }
\new Staff {
  \transpose c cis { \mus }
  \transpose c des { \mus }
}
@end lilypond

@cindex transposing instruments

@code{\transpose} may also be used in a different way, to input
written notes for a transposing instrument.  The previous examples
show how to enter pitches in C (or @notation{concert pitch}) and
typeset them for a transposing instrument, but the opposite is
also possible if you for example have a set of instrumental parts
and want to print a conductor's score.  For example, when entering
music for a B-flat trumpet that begins on a notated E (concert D),
one would write:

@example
musicInBflat = @{ e4 @dots{} @}
\transpose c bes, \musicInBflat
@end example

@noindent
To print this music in F (e.g., rearranging to a French horn) you
could wrap the existing music with another @code{\transpose}:

@example
musicInBflat = @{ e4 @dots{} @}
\transpose f c' @{ \transpose c bes, \musicInBflat @}
@end example

@noindent
For more information about transposing instruments,
see @ref{Instrument transpositions}.


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{transposing-pitches-with-minimum-accidentals-smart-transpose.ly}


@seealso

Notation Reference: @ref{Instrument transpositions}.

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{TransposedMusic}.

@funindex \transpose
@funindex \chordmode
@funindex \relative

@refbugs


The relative conversion will not affect @code{\transpose},
@code{\chordmode} or @code{\relative} sections in its argument.
To use relative mode within transposed music, an additional
@code{\relative} must be placed inside @code{\transpose}.


@node Displaying pitches
@subsection Displaying pitches

This section discusses how to alter the output of pitches.

@menu
* Clef::                        
* Key signature::               
* Ottava brackets::             
* Instrument transpositions::   
* Automatic accidentals::       
* Ambitus::                     
@end menu


@node Clef
@subsubsection Clef

@funindex \clef
@cindex G clef
@cindex C clef
@cindex F clef
@cindex treble clef
@cindex violin clef
@cindex alto clef
@cindex tenor clef
@cindex bass clef
@cindex french clef
@cindex soprano clef
@cindex mezzosoprano clef
@cindex baritone clef
@cindex varbaritone clef
@cindex subbass clef
@cindex clef
@cindex ancient clef
@cindex clef, ancient
@cindex clef, G
@cindex clef, C
@cindex clef, F
@cindex clef, treble
@cindex clef, violin 
@cindex clef, alto 
@cindex clef, tenor
@cindex clef, bass 
@cindex clef, french 
@cindex clef, soprano 
@cindex clef, mezzosoprano 
@cindex clef, baritone 
@cindex clef, varbaritone 
@cindex subbass clef, subbass 

The clef is set with the @code{\clef} @var{clefname} command.
Middle C is shown in every example.

@lilypond[verbatim,quote,ragged-right,fragment,relative=1]
\clef treble
c2 c
\clef alto
c2 c
\clef tenor
c2 c
\clef bass
c2 c
@end lilypond

Other clefs include:

@lilypond[verbatim,quote,ragged-right,fragment,relative=1]
\clef french
c2 c
\clef soprano
c2 c
\clef mezzosoprano
c2 c
\clef baritone
c2 c

\break

\clef varbaritone
c2 c
\clef subbass
c2 c
\clef percussion
c2 c
\clef tab
c2 c
@end lilypond

Further supported clefs are described under @ref{Ancient clefs}.

@cindex transposing clefs
@cindex clef, transposing
@cindex octave transposition

By adding @code{_8} or @code{^8} to the clef name, the clef is
transposed one octave down or up, respectively, and @code{_15} and
@code{^15} transposes by two octaves.  The argument @var{clefname}
must be enclosed in quotes when it contains underscores or digits.

@cindex choral tenor clef

@lilypond[verbatim,quote,ragged-right,fragment,relative=1]
\clef "treble_8"
c2 c
\clef "bass^15"
c2 c
@end lilypond


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{clefs-commonly-tweaked-properties.ly}


@seealso

Notation Reference: @ref{Ancient clefs}.

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{Clef}.


@node Key signature
@subsubsection Key signature

@cindex key signature
@funindex \key

@warning{New users are sometimes confused about accidentals and
key signatures.  In LilyPond, note names are the raw input; key
signatures and clefs determine how this raw input is displayed.
An unaltered note like@tie{}@code{c} means @q{C natural},
regardless of the key signature or clef.  For more information,
see @rlearning{Accidentals and key signatures}.}

The key signature indicates the tonality in which a piece is
played.  It is denoted by a set of alterations (flats or sharps)
at the start of the staff.  Setting or changing the key signature
is done with the @code{\key} command:

@example
\key @var{pitch} @var{mode}
@end example

@funindex \major
@funindex \minor
@funindex \ionian
@funindex \locrian
@funindex \aeolian
@funindex \mixolydian
@funindex \lydian
@funindex \phrygian
@funindex \dorian
@cindex church modes
@cindex modes

Here, @var{mode} should be @code{\major} or @code{\minor} to get a
key signature of @var{pitch}-major or @var{pitch}-minor,
respectively.  You may also use the standard mode names, also
called @q{church modes}: @code{\ionian}, @code{\dorian},
@code{\phrygian}, @code{\lydian}, @code{\mixolydian},
@code{\aeolian}, and @code{\locrian}.

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
\key g \major
fis1
f
fis
@end lilypond


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{preventing-natural-signs-from-being-printed-when-the-key-signature-changes.ly}

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{non-traditional-key-signatures.ly}


@seealso

Music Glossary: @rglos{church mode}, @rglos{scordatura}.

Learning Manual: @rlearning{Accidentals and key signatures}.

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{KeyCancellation},
@internalsref{KeySignature}, @internalsref{Key_engraver}.


@node Ottava brackets
@subsubsection Ottava brackets

@cindex ottava
@cindex 15ma
@cindex 8va
@cindex 8ve
@cindex octavation

@notation{Ottava brackets} introduce an extra transposition of an
octave for the staff:

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
a'2 b
#(set-octavation 1)
a b
#(set-octavation 0)
a b
@end lilypond

The @code{set-octavation} function also takes -1 (for 8va bassa),
2@tie{}(for 15ma), and -2 (for 15ma bassa) as arguments.


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{ottava-text.ly}


@seealso

Music Glossary: @rglos{ottava}.
@c FIXME? @rglos{15ma}, @rglos{8va}, @rglos{8ve}, @rgloss{octavation}

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{OttavaBracket}.



@node Instrument transpositions
@subsubsection Instrument transpositions

@cindex transposition, MIDI
@cindex transposition, instrument
@cindex transposing instrument
@cindex MIDI
@funindex \transposition

When typesetting scores that involve transposing instruments, some
parts can be typeset in a different pitch than the
@notation{concert pitch}.  In these cases, the key of the
@notation{transposing instrument} should be specified; otherwise
the MIDI output and cues in other parts will produce incorrect
pitches.  For more information about quotations, see @ref{Quoting
other voices}.

@example
\transposition @var{pitch}
@end example

The pitch to use for @code{\transposition} should correspond to
the real sound heard when a@tie{}@code{c'} written on the staff is
played by the transposing instrument.  This pitch is entered in
absolute mode, so an instrument that produces a real sound which
is one tone higher than the printed music should use
@code{\transposition d'}.  @code{\transposition} should
@emph{only} be used if the pitches are @emph{not} being entered in
concert pitch.

Here are a few notes for violin and B-flat clarinet where the
parts have been entered using the notes and key as they appear in
each part of the conductor's score.  The two instruments are
playing in unison.

@lilypond[verbatim,quote,ragged-right]
\new GrandStaff <<
  \new Staff = "Vln" {
    \relative c'' {
      \set Staff.instrumentName = "Vln"
      \set Staff.midiInstrument="violin"
      % strictly speaking not necessary, but a good reminder
      \transposition c'

      \key c \major
      g4( c8) r c r c4
    }
  }
  \new Staff = "clarinet" {
    \relative c'' {
      \set Staff.instrumentName = \markup {Cl (B\flat)}
      \set Staff.midiInstrument="clarinet"
      \transposition bes

      % not concert pitch
      \key d \major
      a4( d8) r d r d4
    }
  }
>>
@end lilypond

The @code{\transposition} may be changed during a piece.  For
example, a clarinetist may switch from an A clarinet to a B-flat
clarinet.

@lilypond[verbatim,quote,ragged-right,fragment,relative=2]
\set Staff.instrumentName = "Cl (A)"
\key a \major
\transposition a
c d e f
\textLengthOn
r1^\markup{Switch to B\flat clarinet}

\key bes \major
\transposition bes
c2 g
@end lilypond


@seealso

Music Glossary: @rglos{concert pitch}, @rglos{transposing instrument}.

Notation Reference: @ref{Quoting other voices}, @ref{Transpose}.

Snippets: @lsrdir{Pitches,Pitches}.


@node Automatic accidentals
@subsubsection Automatic accidentals

@cindex automatic accidentals
@cindex accidentals, automatic
@cindex accidentals
@cindex accidental style
@cindex default accidental style
@cindex accidental style, default
@funindex set-accidental-style

There are many different conventions on how to typeset
accidentals.  LilyPond provides a function to specify which
accidental style to use.  This function is called as follows

@example
\new Staff <<
  #(set-accidental-style 'voice)
  @{ @dots{} @}
>>
@end example

The accidental style applies to the current @code{Staff} by
default (with the exception of the styles @code{piano} and
@code{piano-cautionary}, which are explained below).  Optionally,
the function can take a second argument that determines in which
scope the style should be changed.  For example, to use the same
style in all staves of the current @code{StaffGroup}, use

@example
#(set-accidental-style 'voice 'StaffGroup)
@end example

The following accidental styles are supported.  To demonstrate
each style, we use the following example:

@lilypond[verbatim,quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      %%% change the next line as desired:
      #(set-accidental-style 'default)
      \musicA
    }
    \context Staff = "down" {
      %%% change the next line as desired:
      #(set-accidental-style 'default)
      \musicB
    }
  >>
}
@end lilypond

Note that the last lines of this example can be replaced by the
following, as long as the same accidental style should be used in
both staves.
@example
\new PianoStaff @{
  <<
    \context Staff = "up" @{
      %%% change the next line as desired:
      #(set-accidental-style 'default 'Score)
      \musicA
    @}
    \context Staff = "down" @{
      \musicB
    @}
  >>
@}
@end example


@c NOTE: don't use verbatim in this table.
@table @code
@item default
This is the default typesetting behavior.  It corresponds to
eighteenth-century common practice: accidentals are remembered to
the end of the measure in which they occur and only on their own
octave.  Thus, in the example below, no natural signs are printed
before the@tie{}@code{b} in the second measure or the
last@tie{}@code{c}:

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'default)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'default)
      \musicB
    }
  >>
}
@end lilypond

@item voice
The normal behavior is to remember the accidentals on Staff-level.
In this style, however, accidentals are typeset individually for
each voice.  Apart from that, the rule is similar to
@code{default}.

As a result, accidentals from one voice do not get canceled in
other voices, which is often an unwanted result: in the following
example, it is hard to determine whether the second@tie{}@code{a}
should be played natural or sharp.  The @code{voice} option should
therefore be used only if the voices are to be read solely by
individual musicians.  If the staff is to be used by one musician
(e.g., a conductor or in a piano score) then @code{modern} or
@code{modern-cautionary} should be used instead.


@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'voice)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'voice)
      \musicB
    }
  >>
}
@end lilypond

@item modern
@cindex accidentals, modern style
@cindex modern style accidentals
@funindex modern style accidentals

This rule corresponds to the common practice in the twentieth
century.  It prints the same accidentals as @code{default}, with
two exceptions that serve to avoid ambiguity: after temporary
accidentals, cancellation marks are printed also in the following
measure (for notes in the same octave) and, in the same measure,
for notes in other octaves.  Hence the naturals before
the@tie{}@code{b} and the@tie{}@code{c} in the second measure of
the upper staff:

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'modern)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'modern)
      \musicB
    }
  >>
}
@end lilypond

@item modern-cautionary
@cindex accidentals, modern cautionary style
@cindex modern style accidentals
@cindex modern style cautionary accidentals
@cindex modern accidental style
@cindex modern cautionary accidental style
@funindex modern-cautionary

This rule is similar to @code{modern}, but the @q{extra}
accidentals (the ones not typeset by @code{default}) are typeset
as cautionary accidentals.  They are by default printed with
parentheses, but they can also be printed in reduced size by
defining the @code{cautionary-style} property of
@code{AccidentalSuggestion}.


@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'modern-cautionary)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'modern-cautionary)
      \musicB
    }
  >>
}
@end lilypond

@item modern-voice
@cindex accidentals, multivoice
@cindex accidentals, modern
@cindex modern accidentals
@cindex multivoice accidentals
@funindex modern-voice

This rule is used for multivoice accidentals to be read both by
musicians playing one voice and musicians playing all voices.
Accidentals are typeset for each voice, but they @emph{are}
canceled across voices in the same @code{Staff}.  Hence,
the@tie{}@code{a} in the last measure is canceled because the
previous cancellation was in a different voice, and
the@tie{}@code{d} in the lower staff is canceled because of the
accidental in a different voice in the previous measure:


@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'modern-voice)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'modern-voice)
      \musicB
    }
  >>
}
@end lilypond

@funindex modern-voice-cautionary
@item modern-voice-cautionary

This rule is the same as @code{modern-voice}, but with the extra
accidentals (the ones not typeset by @code{voice}) typeset
as cautionaries.  Even though all accidentals typeset by
@code{default} @emph{are} typeset with this rule,
some of them are typeset as cautionaries.

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'modern-voice-cautionary)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'modern-voice-cautionary)
      \musicB
    }
  >>
}
@end lilypond

@item piano
@funindex piano accidentals

This rule reflects twentieth-century practice for piano notation.
Its behavior is very similar to @code{modern} style, but here
accidentals also get canceled across the staves in the same
GrandStaff or PianoStaff, hence all the cancellations of the final
notes.

This accidental style applies to the current @code{GrandStaff} or
@code{PianoStaff} by default.

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'piano)
      \musicA
    }
    \context Staff = "down" {
      \musicB
    }
  >>
}
@end lilypond

@item piano-cautionary
@funindex #(set-accidental-style 'piano-cautionary)

Same as @code{#(set-accidental-style 'piano)} but with the extra
accidentals typeset as cautionaries.

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'piano-cautionary)
      \musicA
    }
    \context Staff = "down" {
      \musicB
    }
  >>
}
@end lilypond

@item no-reset
@funindex no-reset accidental style

This is the same as @code{default} but with accidentals lasting
@q{forever} and not only within the same measure:

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'no-reset)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'no-reset)
      \musicB
    }
  >>
}
@end lilypond

@item forget
@funindex forget accidental style

This is the opposite of @code{no-reset}: Accidentals are not
remembered at all -- and hence all accidentals are typeset
relative to the key signature, regardless of what was before in
the music:

@lilypond[quote,ragged-right]
musicA = {
  <<
    \relative c' {
      cis'8 fis, d'4 <a cis>8 f bis4 |
      cis2. <c, g'>4 |
    }
    \\
    \relative c' {
      ais'2 cis, |
      fis8 b a4 cis2 |
    }
  >>
}

musicB = {
  \clef bass
  \new Voice {
    \voiceTwo \relative c' {
      <fis, a cis>4
      \change Staff = up
      cis'
      \change Staff = down
      <fis, a>
      \change Staff = up
      dis' |
      \change Staff = down
      <fis, a cis>4 gis <f a d>2 |
    }
  }
}

\new PianoStaff {
  <<
    \context Staff = "up" {
      #(set-accidental-style 'forget)
      \musicA
    }
    \context Staff = "down" {
      #(set-accidental-style 'forget)
      \musicB
    }
  >>
}
@end lilypond
@end table

@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{dodecaphonic-style-accidentals-for-each-note-including-naturals.ly}


@seealso

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{Accidental_engraver},
@internalsref{Accidental}, @internalsref{AccidentalSuggestion},
@internalsref{AccidentalPlacement}, @internalsref{GrandStaff} and
@internalsref{PianoStaff}, @internalsref{Staff}.


@refbugs

Simultaneous notes are considered to be entered in sequential
mode.  This means that in a chord the accidentals are typeset as
if the notes in the chord happen one at a time, in the order in
which they appear in the input file.  This is a problem when
accidentals in a chord depend on each other, which does not happen
for the default accidental style.  The problem can be solved by
manually inserting@tie{}@code{!} and@tie{}@code{?} for the
problematic notes.


@node Ambitus
@subsubsection Ambitus
@cindex ambitus

The term @notation{ambitus} or @notation{ambit} denotes a range of
pitches for a given voice in a part of music.  It may also denote
the pitch range that a musical instrument is capable of playing.
Ambits are printed on vocal parts so that performers can easily
determine if it matches their capabilities.

Ambits are denoted at the beginning of a piece near the initial
clef.  The range is graphically specified by two note heads that
represent the lowest and highest pitches.  Accidentals are only
printed if they are not part of the key signature.

@lilypond[verbatim,quote,ragged-right]
\layout {
  \context {
    \Voice
    \consists Ambitus_engraver
  }
}

\relative c'' {
  aes c e2 cis,2
}
@end lilypond


@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{adding-ambiti-per-voice.ly}

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{ambiti-multiple-voices.ly}


@seealso

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{Ambitus},
@internalsref{AmbitusLine}, @internalsref{AmbitusNoteHead},
@internalsref{AmbitusAccidental}, @internalsref{Ambitus_engraver},
@internalsref{Staff}, @internalsref{Voice}.


@refbugs

There is no collision handling in the case of multiple per-voice
ambitus.


@node Note heads
@subsection Note heads

@menu
* Special note heads::          
* Easy notation note heads::    
* Shape note heads::            
* Improvisation::               
@end menu

@node Special note heads
@subsubsection Special note heads

@cindex note heads, special

Different note heads are used by various instruments for various
meanings -- crosses are used for @q{parlato} with vocalists,
stopped notes on guitar; diamonds are used for harmonics on string
instruments, etc.  There is a shorthand (@code{\harmonic}) for
diamond shapes; the other note head styles are produced by
tweaking the property:

@lilypond[verbatim,quote,ragged-right,fragment,relative=1]
c4 d
\override NoteHead #'style = #'cross
e f
\revert NoteHead #'style
e d <c f\harmonic> <d a'\harmonic>
@end lilypond

@noindent
To see all note head styles, see @ref{Note head styles}.


@seealso

Snippets: @lsrdir{Pitches,Pitches}.

Notation Reference: @ref{Note head styles}.

Internals Reference: @internalsref{NoteHead},
@internalsref{LedgerLineSpanner}.


@node Easy notation note heads
@subsubsection Easy notation note heads

@cindex note heads, practice
@cindex note heads, easy notation
@cindex easy notation
@cindex Hal Leonard

The @q{easy play} note head includes a note name inside the head.
It is used in music for beginners.

@lilypond[verbatim,quote,ragged-right]
#(set-global-staff-size 26)
\relative c' {
  \easyHeadsOn
  c2 e4 f
  g1
  \easyHeadsOff
  c,1
}
@end lilypond

The command @code{\easyHeadsOn} overrides settings for the
@code{NoteHead} object.  These settings can be reverted with the command
@code{\easyHeadsOff}. To make the letters readable, it has to be printed
in a large font size.  To print with a larger font, see @ref{Setting the
staff size}.

@refcommands

@funindex \easyHeadsOn
@funindex \easyHeadsOff
@code{\easyHeadsOn}, @code{\easyHeadsOff}

@seealso

Notation Reference: @ref{Setting the staff size}.

Snippets: @lsrdir{Pitches,Pitches},

Internals Reference: @internalsref{NoteHead}.


@node Shape note heads
@subsubsection Shape note heads

@cindex note heads, shape
@funindex \key
@funindex shapeNoteStyles
@funindex \aikenHeads
@funindex \sacredHarpHeads

In shape note head notation, the shape of the note head
corresponds to the harmonic function of a note in the scale.  This
notation was popular in nineteenth-century American song books.

Shape note heads can be produced by setting @code{\aikenHeads} or
@code{\sacredHarpHeads}, depending on the style desired.

@lilypond[verbatim,fragment,quote,ragged-right,relative=1]
\aikenHeads
c8 d4 e8 a2 g1
\sacredHarpHeads
c,8 d4 e8 a2 g1
@end lilypond

Shapes are typeset according to the step in the scale, where
the base of the scale is determined by the @code{\key} command.

@commonprop

@lilypondfile[verbatim,lilyquote,ragged-right,texidoc]
{applying-noteheads-styles-depending-on-the-step-of-the-scale.ly}


@seealso

Snippets: @lsrdir{Pitches,Pitches}.


@node Improvisation
@subsubsection Improvisation

@cindex improvisation
@cindex slashed note heads
@cindex note heads, improvisation
@cindex note heads, slashed

Improvisation is sometimes denoted with slashed note heads, where
the performer may choose any pitch but should play the specified
rhythm.  Such note heads can be created:

@lilypond[verbatim,quote,ragged-right]
\new Voice \with {
  \consists Pitch_squash_engraver
} \transpose c c' {
  e8 e g a a16( bes) a8 g
  \improvisationOn
  e8
  ~e2~e8 f4 fis8
  ~fis2
  \improvisationOff
  a16(bes) a8 g e
}
@end lilypond


@refcommands

@funindex \improvisationOn
@funindex \improvisationOff

@code{\improvisationOn}, @code{\improvisationOff}

@seealso

Snippets: @lsrdir{Pitches,Pitches}.

Internals Reference: @internalsref{Pitch_squash_engraver},
@internalsref{Voice}.


