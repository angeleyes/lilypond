@c -*- coding: latin-1; mode: texinfo; -*-

@tex
\input feta20.tex
\global\font\fetasixteen=feta16
\gdef\fetafont{\fetasixteen}
\gdef\fetachar#1{\hbox{\fetasixteen#1}}
@end tex

@c Reference GLOSsary
@macro rglos {NAME}
@ifhtml
@c ugh: @ref assumes that external refs are split documents too
@html
<a style="text-decoration: none; color: inherit;" href="source/Documentation/user/out-www/music-glossary.html#\NAME\">\NAME\</a>@c
@end html
@end ifhtml
@ifnothtml
\NAME\@c
@end ifnothtml
@end macro


@ifnottex
  @macro texisharp {word}
  #
  @end macro
  @macro texiflat {word}
  b
  @end macro
@end ifnottex

@iftex
 @macro texiflat {word}
 @tex
 \\kern0.15em\\fetachar\\fetaflat
 @end tex
 @end macro
 @macro texisharp {word}
  @tex
  \\raise0.5ex\\fetachar\\fetasharp
  @end tex
  @end macro
@end iftex


@macro arrow{}
@iftex
@tex $\\Rightarrow$ @end tex@c
@end iftex
@ifhtml
@html
&rarr;
@end html
@end ifhtml
@ifinfo
-->
@end ifinfo
@end macro



@ifhtml
@c ***** HTML *****

@c makeinfo-4.7 encodes html names, which means that nodes that
@c contain nonalphanum characters will be broken links on the website.
@c @uref{../lilypond-internals/\NAME\.html,\NAME\}@c
@c @inforef{} adds ``See'' to the sentence, which is annoying, but
@c better than a broken link.
@c @inforef{\NAME\,,lilypond-internals}@c
@c using @ref without punctuation is OK without for formats other than info
 
@macro internalsref{NAME}@c
@c annoying parentheses stripped by add-html-footer.py
@ref{\NAME\,,,lilypond-internals}@c
@findex \NAME\
@end macro

@c usage: @inputfileref{input@/regression,FILE@/-NAME.ly}
@macro inputfileref{DIR,NAME}
@uref{source/\DIR\/out-www/collated-files.html#\NAME\,@file{\DIR\/\NAME\}}@c
@end macro

@end ifhtml


@ifdocbook
@c ***** DOCBOOK-XML *****

@macro internalsref{NAME}
@ref{\NAME\,,,lilypond-internals}@c
@findex @code{\NAME\}
@end macro
 
@macro inputfileref{DIR,NAME}
@uref{source/\DIR\/out-www/collated-files.html#\NAME\,@file{\DIR\/\NAME\}}@c
@end macro

@end ifdocbook


@ifinfo
@c **** INFO ****

@macro internalsref{NAME}
@inforef{\NAME\,,lilypond/lilypond-internals}@c
@findex \NAME\@c
@end macro

@macro inputfileref{DIR,NAME}
@file{\DIR\/\NAME\}
@end macro

@macro usermanref{NAME}
@ref{\NAME\,,,lilypond/lilypond}@c
@end macro

@end ifinfo


@iftex
@c **** TEX ****

@macro internalsref{NAME}@c
@findex \NAME\ @c
@code{\NAME\}@c
@end macro

@macro inputfileref{DIR,NAME}@c
@file{\DIR\/@/\NAME\}@c
@end macro

@macro seeinternals{NAME}
internals document, @internalsref{\NAME\}
@end macro

@macro usermanref{NAME}
user manual, @internalsref{\NAME\}
@end macro

@end iftex
@c **** not TEX ****

@ifnottex
 @macro seeinternals{NAME}
 @internalsref{\NAME\}
 @end macro
@end ifnottex

@ifnottex
 @macro usermanref{NAME}
 @ref{\NAME\}@c
 @end macro
@end ifnottex

@macro refbugs
@noindent
@subsubheading Bugs

@end macro

@macro seealso
@noindent
@subsubheading See also

@end macro

@macro refcommands
@noindent
@subsubheading Predefined commands

@end macro

@macro context{NAME}@c
@code{\NAME\}@c should use internalsref
@findex \NAME\@c
@end macro

@c I want
@c @cindex @code{@backslash\WHAT\}
@c how do I do that?  --hwn

@ignore

Is this question still relevant?  With texinfo 4.7,
escape the backslash, like so  --jcn

@macro refcommand{WHAT}
@cindex @code{\\\WHAT\}
@code{\WHAT\},
@end macro

@end ignore

@macro refcommand{WHAT}
@findex \WHAT\
@code{\WHAT\} 
@end macro

