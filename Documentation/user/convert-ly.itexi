@c -*-texinfo-*-

@node Upgrading from older LilyPond versions
@chapter Upgrading from older LilyPond versions


Convert-ly sequentially applies different conversions to upgrade a
Lilypond input file.  It uses @code{\version} statements in the file to
detect the old version number.  For example, to upgrade all lilypond
files in the current directory and its subdirectories, use
@example
        convert-ly -e --to=1.3.150 `find . -name '*.ly' -print`
@end example

The program is invoked as follows:
@example
        convert-ly [@var{options}] @var{files}
@end example


The following options can be given:

@table @code
@item -a,--assume-old
    If version number cannot be determined, apply all conversions.
@item -e,--edit
    Do an inline edit of the input file. Overrides @code{--output}.
@item -f,--from=@var{from-patchlevel}
    Set the level to convert from. If this is not set, convert-ly will
    guess this, on the basis of @code{\version} strings in the file.
@item -o,--output=@var{file}
    Set the output file to write.  
@item -n,--no-version
    Normally, convert-ly adds a @code{\version} indicator 
    to the output. Specifying this option suppresses this.  
@item -s, --show-rules
    Show all known conversions and exit.
@item --to=@var{to-patchlevel}
    Set the goal version of the conversion. It defaults to the latest
    available version.
@item -h, --help
    Print usage help
@end table



@refbugs Bugs

Not all language changes are handled. Only one output options can be specified.
