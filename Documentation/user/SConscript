# -*-python-*-

import os
import string

Import ('env')
telys = env['glob'] (env, '*.tely')
pngs = env['glob'] (env, '*.png')

env.Depends ('lilypond.texi', env['LILYPOND_BIN'])
env.Depends ('lilypond.texi', 'lilypond-internals.texi')

epss = map (env.Png2eps, pngs)
env.Depends ('lilypond.texi', epss)

env.Command ('lilypond-internals.texi', env['LILYPOND_BIN'],
	     'cd ${TARGET.dir} \
	     && LILYPONDPREFIX=$LILYPONDPREFIX $LILYPOND_BIN $__verbose \
	     $srcdir/ly/generate-documentation')

texis = map (env.TEXI, telys)
dvis = map (env.Texi2dvi, telys)
pss = map (env.PostScript, map (lambda x: x + '.dvi', telys))
pdfs = map (env.Dvi2pdf, telys)
infos = map (env.INFO, telys)

def file_subst (file_name, find, subst):
	s = open (file_name).read ()
	t = string.replace (find, subst, s)
	if s != t:
		os.rename (file_name, file_name + '~')
		h = open (file_name, "w")
		h.write (t)
		h.close ()

e = env.Copy ()
e['usersrc'] = Dir ('.').srcnode ().abspath
def url_fixup (target, source, env):
	file_subst (str (target[0]),
		    '../lilypond-internals', 'lilypond-internals/')
a = ['$MAKEINFO -I$srcdir/Documenation/user -I${SOURCE.dir} --html \
--css-include=$srcdir/Documentation/texinfo.css $__verbose \
--output=${TARGET.dir} $SOURCE',
     '$MAKEINFO -I$srcdir/Documentation/user -I${SOURCE.dir} --html \
     --no-split --no-headers \
     --css-include=$srcdir/Documentation/../texinfo.css $__verbose \
     --output=$TARGET $SOURCE',
     url_fixup,
     'ln -f ${SOURCE.dir}/*.png ${SOURCE.dir}/*.ly ${TARGET.dir}/']
     
e.Command ('lilypond/lilypond.html', 'lilypond.texi', a)
e.Command ('lilypond-internals/lilypond-internals.html',
	     'lilypond-internals.texi', a)

env.Alias ('doc', texis)
env.Alias ('doc', dvis)
env.Alias ('doc', pss)
env.Alias ('doc', pdfs)

env.Alias ('doc', 'lilypond/lilypond.html')
env.Alias ('doc', 'lilypond-internals/lilypond-internals.html')
