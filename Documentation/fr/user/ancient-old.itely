@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: aebc0820702acbd928a9acb14e1c95131a0234d9

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.11.38"

@c Translators: Valentin Villenave
@c Translation checkers: Jean-Charles Malahieude, John Mandereau

@node Ancient notation
@section Ancient notation

@menu
* Figured bass::                
@end menu

@c TODO: move to chords.itely -FV
@node Figured bass
@unnumberedsubsubsec Figured bass

@cindex basse continue
@cindex basse chiffrée

@c TODO: musicological blurb about FB
@c librement adapté de
@c http://en.wikipedia.org/wiki/Basso_continuo#Basso_continuo
Les parties de basse continue étaient très répandues dans la musique
baroque et jusqu'à la fin du XVIIIe siècle.  Comme son nom
l'indique, le @emph{continuo} constitue une partie à lui seul, qui
se déroule tout au long de l'œuvre pour en donner la structure harmonique. 

Les musiciens du @emph{continuo} jouent des claviers (clavecin,
orgue) ou de tout autre instrument pouvant réaliser des accords.  Leur
partie est constituée d'une portée de basse aux notes agrémentées de
combinaisons de chiffres et signes indiquant le développement des
accords à jouer, ainsi que leur éventuel renversement.  Cette notation
était avant tout un guide, invitant le musicien à improviser de
lui-même l'accompagnement.

LilyPond gère la basse chiffrée. 

@lilypond[quote,ragged-right,verbatim,fragment]
<<
  \new Voice { \clef bass dis4 c d ais g fis}
  \new FiguredBass \figuremode {
    < 6 >4 < 7\+ >8 < 6+ [_!] >
    < 6 >4 <6 5 [3+] >
    < _ >4 < 6 5/>4
  }
>>
@end lilypond

La gestion de la basse chiffrée se décompose en deux parties.  Dans un
premier temps, le mode @code{\figuremode} permet de saisir les accords
sous forme chiffrée.  Le contexte @rinternals{FiguredBass} s'occupera
ensuite de gérer les objets @rinternals{BassFigure}.

En mode de saisie, un chiffrage est délimité par @code{<} et
@code{>}.  La  durée est indiquée après le @code{>} :

@example
<4 6>
@end example
@lilypond[quote,ragged-right,fragment]
\new FiguredBass
\figuremode { <4 6> }
@end lilypond

Les altérations s'obtiennent en ajoutant aux chiffres les caractères
@code{-}, @code{!} ou @code{+}. Un signe plus s'obtient grâce à
@code{\+}, et une quinte ou septième diminuée par @code{5/} ou
@code{7/} respectivement.

@example
<4- 6+ 7!> <5++> <3--> <7/> r <6\+ 5/>
@end example
@lilypond[quote,ragged-right,fragment]
\figures { <4- 6+ 7!> <5++> <3--> <7/> r <6\+ 5/> }
@end lilypond

Le caractère @code{_} insère un espace, et l'on peut imprimer des
crochets avec @code{[} et @code{]}.  Vous pouvez aussi ajouter des
chaînes de caractères ou des étiquettes --- cf. @ref{Text
markup commands}.

@example
<[4 6] 8 [_! 12] > <5 \markup @{ \number 6 \super (1) @} >
@end example
@lilypond[quote,ragged-right,fragment]
\new FiguredBass
\figuremode { < [4 6] 8 [_! 12] > < 5 \markup{ \tiny \number 6 \super (1)} > }
@end lilypond


Lorsque des chiffrages se répètent, vous pouvez utiliser des lignes de
prolongation. 

@lilypond[verbatim,relative=1]
<<
  \new Staff {
    \clef bass
    c4 c c
  }
  \figures {
    \set useBassFigureExtenders = ##t
    <4 6> <3 6> <3 7>
  }
>>
@end lilypond

@noindent
En pareil cas, la ligne de prolongation masquera toujours le chiffre
qu'elle rappelle dans le chiffrage suivant.

Le contexte @code{FiguredBass} ne tient aucun compte de la ligne de
basse.  Par conséquent, il vous faudra peut être insérer des chiffrages
supplémentaires pour imprimer les prolongations, ou utiliser des
@code{\!} pour les éviter, comme dans l'exemple suivant :

@lilypond[relative=1]
<<
  \new Voice
  \figures {
    \set useBassFigureExtenders = ##t
    <6 4->4. <6 4->16. <6 4->32 <5>8. r16 <6>8 <6\! 5->
  }
  {
    \clef bass
    f16. g32 f16. g32 f16. g32 f16. g32 f8. es16 d8 es
  }
>>
@end lilypond

Lorsque vous utilisez des lignes de prolongation, les chiffres communs
seront verticalement alignés.  Pour l'éviter, insérez un silence avec
@code{r} afin de réinitialiser l'alignement.  Par exemple, saisissez

@example
  <4 6>8 r8
@end example

@noindent
au lieu de
@example
  <4 6>4
@end example

On peut choisir d'impriemr les altérations et signes plus aussi bien
avant qu'après les chiffres, en réglant les propriétés
@code{figuredBassAlterationDirection} et
@code{figuredBassPlusDirection}.

@lilypond
  \figures {
    <6\+> <5+> <6 4-> r
    \set figuredBassAlterationDirection = #1
    <6\+> <5+> <6 4-> r
    \set figuredBassPlusDirection = #1
    <6\+> <5+> <6 4-> r
    \set figuredBassAlterationDirection = #-1
    <6\+> <5+> <6 4-> r
  }
@end lilypond


Bien que la gestion de la basse chiffrée ressemble beaucoup à celle
des accords, elle est beaucoup plus simpliste.  Le mode
@code{\figuremode} ne fait que stocker des chiffres que le contexte
@rinternals{FiguredBass} se chargera d'imprimer tels quels.  En
aucune manière ils ne sont transformés en son, et ils ne sont pas
rendus dans un fichier MIDI.

En interne, ce code produit des étiquettes de texte que vous
pouvez formater à votre convenance grâce aux propriétés des
étiquettes.  Par exemple, l'espacement vertical des chiffrages est
déterminé par la propriété @code{baseline-skip}.


On peut également ajouter une basse chiffrée directement à un contexte
@code{Staff}.  L'alignement vertical est alors automatiquement ajusté.

@lilypond[ragged-right,fragment,quote]
<<
  \new Staff = someUniqueName
  \relative c'' {
    c4 c'8 r8 c,4 c'
  }

  %% send to existing Staff.
  \context Staff = someUniqueName 
  \figuremode {
    <4>4 <6 10>8 s8
    
    \set Staff.useBassFigureExtenders = ##t
    <4 6>4 <4 6>
  }
>>
@end lilypond


@commonprop

Par défaut, les chiffres sont imprimés au-dessus de la portée.  Pour les
imprimer dessous, ajoutez

@example
\override Staff.BassFigureAlignmentPositioning #'direction = #DOWN
@end example


@knownissues

Si vous positionnez la basse chiffrée au dessus de la portée en ayant
recours aux lignes d'extension et @code{implicitBassFigures}, les lignes
peuvent se mélanger.  Préserver l'ordre des prolongateurs peut s'avérer
impossible lorsque plusieurs chiffrages qui se chevauchent en possèdent.
Ce problème peut être contourné en jouant sur l'empilement, avec la
propriété @code{stacking-dir} de l'objet @code{BassFigureAlignment}.


@seealso

Référence du programme : les objets @rinternals{NewBassFigure},
@rinternals{BassFigureAlignment}, @rinternals{BassFigureLine},
@rinternals{BassFigureBracket} et
@rinternals{BassFigureContinuation}, ainsi que le contexte
@rinternals{FiguredBass}.


