@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: 71b67137f76fa4e8aede58299630369f616004d9

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c A menu is needed before every deeper *section nesting of @node's; run
@c     M-x texinfo-all-menus-update
@c to automatically fill in these menus before saving changes

@node Basic notation
@chapter Basic notation

De l'utilisation des fonctions de notation de base.


@menu
* Pitches::
* Rhythms::
* Polyphony::
* Staff notation::
* Connecting notes::
* Expressive marks::
* Repeats::
@end menu


@node Pitches
@section Pitches

De la manière de spécifier les hauteurs de notes.

@menu
* Normal pitches::
* Accidentals::
* Cautionary accidentals::
* Micro tones::
* Note names in other languages::
* Relative octaves::
* Octave check::
* Transpose::
* Rests::
* Skips::
@end menu





@node Rhythms
@section Rhythms

Des rythmes, durées et mesures.

@menu
* Durations::
* Augmentation dots::
* Tuplets::
* Scaling durations::
* Bar check::
* Barnumber check::
* Automatic note splitting::
@end menu


@node Polyphony
@section Polyphony

La notion musicale de polyphonie fait référence au fait d'avoir plus
d'une voix simultanément dans une pièce.  Dans LilyPond, la notion de
polyphonie fait référence au fait d'avoir plus d'une voix sur la même
portée.

@menu
* Chords::
* Stems::
* Basic polyphony::
* Explicitly instantiating voices::
* Collision Resolution::
@end menu


@node Chords
@subsection Chords

@cindex accords

Un accord est formé en mettant une série de hauteurs entre @code{<}
et @code{>}.  Un accord peut être suivi d'une durée et d'indications
d'articulation, comme une simple note.

@lilypond[verbatim,ragged-right,fragment,quote,relative=1]
<c e g>4 <c>8
@end lilypond

Pour plus d'information à propos des accords, voir @ref{Chord names}.


@node Stems
@subsection Stems

Dès qu'une note est rencontrée, un objet @internalsref{Stem} se crée
automatiquement.  Pour les rondes et les silences, ils sont aussi
créés, mais en mode invisible.

@refcommands

@funindex \stemUp
@code{\stemUp},
@funindex \stemDown
@code{\stemDown},
@funindex \stemNeutral
@code{\stemNeutral}.


@commonprop

Pour changer la direction des hampes au milieu de la portée, utilisez

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
a4 b c b
\override Stem #'neutral-direction = #up
a4 b c b
\override Stem #'neutral-direction = #down
a4 b c b
@end lilypond


@node Basic polyphony
@subsection Basic polyphony

@cindex polyphonie

La manière la plus facile d'entrer des fragments avec plus d'une voix
sur une portée est d'entrer chaque voix comme une suite de notes
--- entre accolades : @code{@{...@}} --- puis de les combiner simultanément,
en séparant les voix avec @code{\\}

@funindex \\

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  c16 d e f
  <<
    { g4 f e | d2 e2 } \\
    { r8 e4 d c8 ~ | c b16 a b8 g ~ g2 } \\
    { s2. | s4 b4 c2 }
  >>
}
@end lilypond

Le séparateur permet aux contextes @internalsref{Voice}@footnote{Ces
voix polyphoniques sont parfois appelées @qq{couches} ou @qq{calques} dans
d'autres logiciels de notation.}
@cindex couches
@cindex calques
d'être identifiés.  Les contextes de voix portent les noms @code{"1"},
@code{"2"}, etc.  Dans chacun de ces contextes, la direction verticale
des liaisons, hampes, etc. est réglée de manière appropriée.

Ces voix sont toutes distinctes de la voix qui contient les notes en
dehors de la construction @code{<< \\ >>}.  On doit le prendre en compte
lorsqu'on fait des changements au niveau des voix.  Cela veut aussi dire
que les liaisons de prolongation et d'articulation ne peuvent ni entrer
ni sortir de la construction @code{<< \\ >>}.  À l'inverse, des voix
parallèles venant de constructions @code{<< \\ >>} séparées sur la même
portée sont dans les mêmes voix.  Voici le même exemple, avec des
couleurs et têtes de note différentes pour chaque voix.  Notez que le
changement de style de tête de note n'affecte pas l'intérieur des
constructions @code{<< \\ >>}.  Aussi, le changement à la deuxième voix
dans la première construction @code{<< \\ >>} l'affecte aussi dans la
deuxième construction @code{<< \\ >>}, et la voix est liée entre les
deux constructions.

@cindex têtes de note, styles

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  <<
    { g4 f e } \\
    { \override NoteHead #'style = #'triangle
      \override NoteHead #'color = #blue
    r8 e4 d c8 ~ }
  >> |
  <<
    { d2 e2 } \\
    { c8 b16 a b8 g ~ g2 } \\
    { \override NoteHead #'style = #'slash 
      \override NoteHead #'color = #green
      s4 b4 c2 }
  >>
}
@end lilypond

La polyphonie ne change pas la relation des notes dans un bloc
@code{\relative @{ @}}.  Chaque note est calculée en fonction de la note
qui la précède immédiatement, sans tenir compte des différentes voix.

@example
\relative @{ noteA << noteB \\ noteC >> noteD @}
@end example

@code{noteC} est calculé relativement à @code{noteB}, non pas à
@code{noteA} ; @code{noteD} est calculé relativement à @code{noteC}, non
pas à @code{noteB} ou @code{noteA}.


@node Explicitly instantiating voices
@subsection Explicitly instantiating voices

Les contextes @internalsref{Voice} peuvent être déclarés manuellement
dans un bloc @code{<< >>} pour créer de la musique polyphonique, en
utilisant @code{\voiceOne}, @dots{} jusqu'à @code{\voiceFour} pour
assigner des directions de hampes et un déplacement horizontal pour
chaque partie.

En particulier,
@example
<< \upper \\ \lower >>
@end example

@noindent
équivaut à

@example
<<
 \new Voice = "1" @{ \voiceOne \upper @}
 \new Voice = "2" @{ \voiceTwo \lower @}
>>
@end example

Les commandes @code{\voiceXXX} fixent la direction des hampes, des
liaisons de prolongations et de phrasé, des articulations, des
annotations, des points d'augmentation des notes pointées et des
doigtés.  @code{\voiceOne} et @code{\voiceThree} font pointer ces objets
vers le haut, alors que @code{\voiceTwo} et @code{\voiceFour} les font
pointer vers le bas.  La commande @code{\oneVoice} les ramène aux
critères normaux.

Une expression séquentielle qui apparaît en premier dans un @code{<< >>}
appartient à la voix principale.  Ceci est utile lorsque des voix
supplémentaires apparaissent pendant que la voix principale est jouée.
Voici une meilleure réalisation de l'exemple de la section précédente.
Les notes colorées et en croix mettent en évidence le fait que la mélodie principale
est maintenant dans un seul contexte de voix.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  \voiceOne
  <<
    { g4 f e | d2 e2 }
    \new Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. | s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

La définition correcte des voix permet à la mélodie d'être liée.
@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Le fait d'éviter le séparateur @code{\\} permet aussi d'imbriquer des
constructions polyphoniques, ce qui peut être une manière plus naturelle
de saisir la musique.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ |
      <<
        {c8 b16 a b8 g ~ g2}
        \new Voice { \voiceThree
          s4 b4 c2
          \oneVoice
        }
      >>
    \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Dans certaines circonstances de polyphonie complexe, vous pourrez être
amené à recourir à des voix supplémentaires afin d'éviter des collisions
de notes.  Ces voix additionnelles s'ajoutent en définissant un
identificateur, comme le montre l'exemple suivant :

@lilypond[quote,verbatim,ragged-right,relative=2]
voiceFive = #(context-spec-music (make-voice-props-set 4) 'Voice)

\relative c''' <<
  { \voiceOne g4 ~  \stemDown g32[ f( es d c b a b64 )g] } \\
  { \voiceThree  b4} \\
  { \voiceFive d,} \\
  { \voiceTwo g,}
>>
@end lilypond


@node Collision Resolution
@subsection Collision Resolution

D'ordinaire, les têtes de notes pointées et non-pointées ne sont pas
fusionnées, mais lorsque la propriété @code{merge-differently-dotted} de
l'objet @internalsref{NoteCollision} est définie, elles se trouvent
fusionnées :

@lilypond[quote,verbatim,fragment,ragged-right,relative=2]
\new Voice << {
  g8 g8
  \override Staff.NoteCollision
    #'merge-differently-dotted = ##t
  g8 g8
} \\ { g8.[ f16] g8.[ f16] } >>
@end lilypond

De même, vous pouvez fusionner une tête de blanche avec une tête de
croche, en définissant @code{merge-differently-headed}

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\new Voice << {
  c8 c4.
  \override Staff.NoteCollision
    #'merge-differently-headed = ##t
c8 c4. } \\ { c2 c2 } >>
@end lilypond

LilyPond décale aussi verticalement les silences à l'opposé des hampes,
par exemple

@lilypond[quote,ragged-right,fragment,verbatim]
\new Voice << c''4 \\ r4 >>
@end lilypond

Lorsque trois notes ou plus s'agglutinent dans un même empilement,
@code{merge-differently-headed} ne peut mener à bien la fusion des deux
notes qui devraient l'être.  Pour obtenir une fusion optimale, appliquez
un décalage (@code{\shift}) à la note qui ne devrait pas s'empiler.
Dans la première mesure de l'exemple suivant,
@code{merge-differently-headed} ne fonctionne pas --- la tête de la
blanche est noire.  Dans la seconde mesure, @code{\shiftOn} s'applique
pour sortir le sol (@code{g}) de l'alignement, et
@code{merge-differently-headed} fonctionne correctement.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\override Staff.NoteCollision #'merge-differently-headed = ##t
<<
  { d=''2 g2 } \\
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
<<
  { d'=''2 \shiftOn g2 } \\ 
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
@end lilypond


@refcommands

@funindex \oneVoice
@code{\oneVoice},
@funindex \voiceOne
@code{\voiceOne},
@funindex \voiceTwo
@code{\voiceTwo},
@funindex \voiceThree
@code{\voiceThree},
@funindex \voiceFour
@code{\voiceFour}.

@funindex \shiftOn
@code{\shiftOn},
@funindex \shiftOnn
@code{\shiftOnn},
@funindex \shiftOnnn
@code{\shiftOnnn},
@funindex \shiftOff
@code{\shiftOff} : toutes ces commandes précisent le degré de décalage
des notes de la voix courante.  Les voix externes --- habituellement,
les voix une et deux --- ont @code{\shiftOff}, alors que les voix
internes --- trois et quatre --- ont @code{\shiftOn}.  @code{\shiftOnn}
et @code{\shiftOnnn} sont des niveaux supplémentaires de décalage.

Quand LilyPond est dépassé, la propriété @code{force-hshift} de l'objet
@internalsref{NoteColumn}, et des silences à hauteur déterminée, peuvent
s'avérer utiles pour dicter au programme les choix de placement.

@lilypond[quote,verbatim,ragged-right]
\relative <<
{
  <d g>
  <d g>
} \\ {
  <b f'>
  \once \override NoteColumn #'force-hshift = #1.7
  <b f'>
} >>
@end lilypond


@seealso
Référence du programme : les objets appropriés pour résoudre les
collisions sont @internalsref{NoteCollision} et
@internalsref{RestCollision}.


@refbugs

Quand @code{merge-differently-headed} est utilisé avec une croche ou
une valeur plus courte à hampe vers le haut, et une blanche hampe vers
le bas, la croche se retrouve à la mauvaise place.

Il n'y a aucune prise en charge des agrégats dans lesquels une même note
apparaît avec différentes altérations.  Il est conseillé d'avoir recours
aux enharmoniques, ou d'utiliser la notation spécifique de cluster ---
voir @ref{Clusters}.



@node Staff notation
@section Staff notation

@cindex Staff notation

De la notation musicale concernant la portée, comme
les armures, les clefs ou les chiffres de mesure.

@menu
* Clef::
* Key signature::
* Time signature::
* Partial measures::
* Bar lines::
* Unmetered music::
* System start delimiters::
* Staff symbol::
* Writing music in parallel::
@end menu



@node System start delimiters
@subsection System start delimiters

@cindex système, début de
@cindex crochet vertical
@cindex accolade verticale
@cindex portée multiple
@cindex portées, groupe de

De nombreuses partitions sont écrites sur plusieurs portées.  Ces
portées peuvent être regroupées de quatre manières différentes.

@itemize @bullet
@item Le groupe de portées est attaché par une accolade sur la gauche,
et les barres de mesure sont d'un seul tenant. Il s'agit du contexte
@internalsref{GrandStaff}.

@lilypond[verbatim,ragged-right,quote]
\new GrandStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Le groupe de portées est attaché par un crochet, et les barres
de mesure sont d'un seul tenant. Il s'agit du contexte
@internalsref{StaffGroup}.

@lilypond[verbatim,ragged-right,quote]
\new StaffGroup
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond



@item Le groupe de portées est attaché par un crochet, mais les barres
de mesure sont séparées d'une portée à l'autre. Il s'agit du contexte
@internalsref{ChoirStaff}.

@lilypond[verbatim,ragged-right,quote]
\new ChoirStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Les portées du groupe ne sont pas attachées (hormis par une
simple ligne verticale). Les barres de mesure sont détachées. Il
s'agit de l'assemblage par défaut.

@lilypond[verbatim,ragged-right,quote]
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond
@end itemize


@seealso

Les barres de mesure au début de chaque système prennent l'un des styles
@internalsref{SystemStartBar}, @internalsref{SystemStartBrace},
@internalsref{SystemStartBracket}.  Dans chaque contexte, seul l'un de
ces styles est utilisé, et c'est la propriété
@code{systemStartDelimiter} qui détermine lequel.

@commonprop

Les accolades et crochets délimitant les systèmes peuvent être imbriqués
en profondeur,

@lilypond[quote,ragged-right,verbatim]
\new StaffGroup
\relative <<
  \set StaffGroup.systemStartDelimiterHierarchy
    = #'(SystemStartSquare (SystemStartBracket a (SystemStartSquare b)) d)
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
>>
@end lilypond


@node Staff symbol
@subsection Staff symbol

@cindex symbole de portée
@cindex portée, lignes de

Les notes, nuances, etc. sont regroupés dans un assemblage de lignes
horizontales, que l'on nomme la portée (en anglais @qq{staff}, et
@qq{staves} au pluriel).  Dans LilyPond, ces lignes sont dessinées au
moyen d'un objet de mise en forme à part entière, nommé @code{staff
symbol} --- symbole de portée.


L'aspect du symbole de portée peut être modifié selon différentes
propriétés, telles que le nombre de lignes, leur épaisseur, ou leur
éloignement. Vous en trouverez des exemples dans
@lsr{staff,changing-the-number-of-lines-in-a-staff.ly} et
@lsr{staff,changing-the-staff-size.ly}.


De plus, la portée peut commencer et s'arrêter où l'on veut, grâce aux
commandes @code{\startStaff} et @code{\stopStaff}.

@lilypond[verbatim,relative=2,fragment]
b4 b
\override Staff.StaffSymbol #'line-count = 2
\stopStaff \startStaff
b b
\revert Staff.StaffSymbol #'line-count
\stopStaff \startStaff
b b
@end lilypond

Cette manière de procéder peut être utilisée pour introduire des
@qq{ossias}, ou dans des partitions à nombre de portées variable,
comme sur l'exemple suivant :

@cindex ossia

@lilypondfile{ossia.ly}

@cindex lignes de portée, nombre de
@cindex lignes de portée, épaisseur des
@cindex épaisseur des lignes de portées
@cindex nombre de lignes de portée

@seealso

Référence du programme : @internalsref{StaffSymbol}.

D'autres exemples : @lsrdir{staff}.


@node Writing music in parallel
@subsection Writing music in parallel

@cindex écrire la musique en parallèle
@cindex musique en parallèle
@cindex musique entremêlée

On peut écrire plusieurs voix de façon entremêlée :

@lilypond[quote,fragment,verbatim]
\parallelMusic #'(voiceA voiceB) {
  r8     g'16[ c''] e''[ g' c'' e''] r8     g'16[ c''] e''[ g' c'' e''] |
  c'2                                c'2                                |
  r8     a'16[ d''] f''[ a' d'' f''] r8     a'16[ d''] f''[ a' d'' f''] |
  c'2                                c'2                                |
}
\new StaffGroup <<
  \new Staff \new Voice \voiceA
  \new Staff \new Voice \voiceB
>>
@end lilypond

Ceci fonctionne bien avec la musique pour piano :

@lilypond[quote,verbatim]
music = {
  \key c \major
  \time 4/4
  \parallelMusic #'(voiceA voiceB voiceC voiceD) {
    % Bar 1
    r8  g'16[ c''] e''[ g' c'' e''] r8  g'16[ c''] e''[ g' c''
e''] |
    c'2                                 c'2 |
    r8  a16[ d'] f'[ a d' f']       r8  a16[ d'] f'[ a d' f'] |
    c2                                  c2 |

    % Bar 2
    a'8 b'      c'' d''    e'' f''    g'' a'' |
    d'4         d'         d'         d' |
    c16 d e f   d e f g    e f g a    f g a b |
    a,4         a,4        a,4        a,4 |

    % Bar 3 ...
  }
}

\score {
  \new PianoStaff <<
    \music
    \new Staff <<
      \voiceA \\
      \voiceB
    >>
    \new Staff {
      \clef bass
      <<
        \voiceC \\
        \voiceD
      >>
    }
  >>
}
@end lilypond


@node Connecting notes
@section Connecting notes

De la notation qui affecte des groupes de notes.

@menu
* Ties::
* Slurs::
* Phrasing slurs::
* Laissez vibrer ties::
* Automatic beams::
* Manual beams::
* Grace notes::
@end menu


@node Expressive marks
@section Expressive marks

Les signes d'interprétation aident les musiciens à faire en sorte que la
musique soit plus qu'un simple assemblage de notes et de rythmes.

@menu
* Articulations::
* Fingering instructions::
* Dynamics::
* Breath marks::
* Trills::
* Glissando::
* Arpeggio::
* Falls and doits::
@end menu


@node Fingering instructions
@subsection Fingering instructions

@cindex doigté
@cindex substitution de doigt


Les doigtés peuvent être indiqués comme suit :
@example
@var{note}-@var{chiffre_du_doigt}
@end example
Pour les substitutions de doigts, on a recours à une indication
textuelle (commande @code{\markup}) de doigté
(commande @code{\finger}).

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
c4-1 c-2 c-3 c-4
c^\markup { \finger "2 - 3" }
@end lilypond


La commande @code{\thumb} peut être utilisée pour indiquer, par exemple
dans une partition de violoncelle, si une note doit être jouée avec le
pouce (@q{thumb} en anglais).

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
<a_\thumb a'-3>8 <b_\thumb b'-3>
@end lilypond


Les doigtés des accords peuvent être saisis note par note,
en les indiquant après chaque hauteur de note.

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
< c-1 e-2 g-3 b-5 >4
@end lilypond


@commonprop

On peut contrôler précisément les doigtés des accords en réglant
la propriété @code{fingeringOrientations}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
\set fingeringOrientations = #'(left down)
<c-1 es-2 g-4 bes-5 > 4
\set fingeringOrientations = #'(up right down)
<c-1 es-2 g-4 bes-5 > 4
@end lilypond


Cette propriété permet également, dans de la musique monophonique,
d'indiquer des doigtés très proches des têtes de notes.

@lilypond[verbatim,ragged-right,quote,fragment]
\set fingeringOrientations = #'(right)
<es'-2>4
@end lilypond


@seealso

Référence du programme : @internalsref{Fingering}.

D'autres exemples : @lsr{expressive,fingering-chords.ly}.


@node Repeats
@section Repeats

Une des notions essentielles, dans la musique, est le fait que des
éléments soient joués plusieurs fois. Il existe de nombreuses façons
de noter ces reprises.

@menu
* Repeat types::
* Repeat syntax::
* Repeats and MIDI::
* Manual repeat commands::
* Tremolo repeats::
* Tremolo subdivisions::
* Measure repeats::
@end menu


