@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: 71b67137f76fa4e8aede58299630369f616004d9

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c A menu is needed before every deeper *section nesting of @node's; run
@c     M-x texinfo-all-menus-update
@c to automatically fill in these menus before saving changes

@node Basic notation
@chapter Basic notation

De l'utilisation des fonctions de notation de base.


@menu
* Pitches::
* Rhythms::
* Polyphony::
* Staff notation::
* Connecting notes::
* Expressive marks::
* Repeats::
@end menu


@node Pitches
@section Pitches

De la manière de spécifier les hauteurs de notes.

@menu
* Normal pitches::
* Accidentals::
* Cautionary accidentals::
* Micro tones::
* Note names in other languages::
* Relative octaves::
* Octave check::
* Transpose::
* Rests::
* Skips::
@end menu





@node Rhythms
@section Rhythms

Des rythmes, durées et mesures.

@menu
* Durations::
* Augmentation dots::
* Tuplets::
* Scaling durations::
* Bar check::
* Barnumber check::
* Automatic note splitting::
@end menu


@node Polyphony
@section Polyphony

La notion musicale de polyphonie fait référence au fait d'avoir plus
d'une voix simultanément dans une pièce.  Dans LilyPond, la notion de
polyphonie fait référence au fait d'avoir plus d'une voix sur la même
portée.

@menu
* Chords::
* Stems::
* Basic polyphony::
* Explicitly instantiating voices::
* Collision Resolution::
@end menu


@node Chords
@subsection Chords

@cindex accords

Un accord est formé en mettant une série de hauteurs entre @code{<}
et @code{>}.  Un accord peut être suivi d'une durée et d'indications
d'articulation, comme une simple note.

@lilypond[verbatim,ragged-right,fragment,quote,relative=1]
<c e g>4 <c>8
@end lilypond

Pour plus d'information à propos des accords, voir @ref{Chord names}.


@node Stems
@subsection Stems

Dès qu'une note est rencontrée, un objet @internalsref{Stem} se crée
automatiquement.  Pour les rondes et les silences, ils sont aussi
créés, mais en mode invisible.

@refcommands

@funindex \stemUp
@code{\stemUp},
@funindex \stemDown
@code{\stemDown},
@funindex \stemNeutral
@code{\stemNeutral}.


@commonprop

Pour changer la direction des hampes au milieu de la portée, utilisez

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
a4 b c b
\override Stem #'neutral-direction = #up
a4 b c b
\override Stem #'neutral-direction = #down
a4 b c b
@end lilypond


@node Basic polyphony
@subsection Basic polyphony

@cindex polyphonie

La manière la plus facile d'entrer des fragments avec plus d'une voix
sur une portée est d'entrer chaque voix comme une suite de notes
--- entre accolades : @code{@{...@}} --- puis de les combiner simultanément,
en séparant les voix avec @code{\\}

@funindex \\

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  c16 d e f
  <<
    { g4 f e | d2 e2 } \\
    { r8 e4 d c8 ~ | c b16 a b8 g ~ g2 } \\
    { s2. | s4 b4 c2 }
  >>
}
@end lilypond

Le séparateur permet aux contextes @internalsref{Voice}@footnote{Ces
voix polyphoniques sont parfois appelées @qq{couches} ou @qq{calques} dans
d'autres logiciels de notation.}
@cindex couches
@cindex calques
d'être identifiés.  Les contextes de voix portent les noms @code{"1"},
@code{"2"}, etc.  Dans chacun de ces contextes, la direction verticale
des liaisons, hampes, etc. est réglée de manière appropriée.

Ces voix sont toutes distinctes de la voix qui contient les notes en
dehors de la construction @code{<< \\ >>}.  On doit le prendre en compte
lorsqu'on fait des changements au niveau des voix.  Cela veut aussi dire
que les liaisons de prolongation et d'articulation ne peuvent ni entrer
ni sortir de la construction @code{<< \\ >>}.  À l'inverse, des voix
parallèles venant de constructions @code{<< \\ >>} séparées sur la même
portée sont dans les mêmes voix.  Voici le même exemple, avec des
couleurs et têtes de note différentes pour chaque voix.  Notez que le
changement de style de tête de note n'affecte pas l'intérieur des
constructions @code{<< \\ >>}.  Aussi, le changement à la deuxième voix
dans la première construction @code{<< \\ >>} l'affecte aussi dans la
deuxième construction @code{<< \\ >>}, et la voix est liée entre les
deux constructions.

@cindex têtes de note, styles

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  <<
    { g4 f e } \\
    { \override NoteHead #'style = #'triangle
      \override NoteHead #'color = #blue
    r8 e4 d c8 ~ }
  >> |
  <<
    { d2 e2 } \\
    { c8 b16 a b8 g ~ g2 } \\
    { \override NoteHead #'style = #'slash 
      \override NoteHead #'color = #green
      s4 b4 c2 }
  >>
}
@end lilypond

La polyphonie ne change pas la relation des notes dans un bloc
@code{\relative @{ @}}.  Chaque note est calculée en fonction de la note
qui la précède immédiatement, sans tenir compte des différentes voix.

@example
\relative @{ noteA << noteB \\ noteC >> noteD @}
@end example

@code{noteC} est calculé relativement à @code{noteB}, non pas à
@code{noteA} ; @code{noteD} est calculé relativement à @code{noteC}, non
pas à @code{noteB} ou @code{noteA}.


@node Explicitly instantiating voices
@subsection Explicitly instantiating voices

Les contextes @internalsref{Voice} peuvent être déclarés manuellement
dans un bloc @code{<< >>} pour créer de la musique polyphonique, en
utilisant @code{\voiceOne}, @dots{} jusqu'à @code{\voiceFour} pour
assigner des directions de hampes et un déplacement horizontal pour
chaque partie.

En particulier,
@example
<< \upper \\ \lower >>
@end example

@noindent
équivaut à

@example
<<
 \new Voice = "1" @{ \voiceOne \upper @}
 \new Voice = "2" @{ \voiceTwo \lower @}
>>
@end example

Les commandes @code{\voiceXXX} fixent la direction des hampes, des
liaisons de prolongations et de phrasé, des articulations, des
annotations, des points d'augmentation des notes pointées et des
doigtés.  @code{\voiceOne} et @code{\voiceThree} font pointer ces objets
vers le haut, alors que @code{\voiceTwo} et @code{\voiceFour} les font
pointer vers le bas.  La commande @code{\oneVoice} les ramène aux
critères normaux.

Une expression séquentielle qui apparaît en premier dans un @code{<< >>}
appartient à la voix principale.  Ceci est utile lorsque des voix
supplémentaires apparaissent pendant que la voix principale est jouée.
Voici une meilleure réalisation de l'exemple de la section précédente.
Les notes colorées et en croix mettent en évidence le fait que la mélodie principale
est maintenant dans un seul contexte de voix.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  \voiceOne
  <<
    { g4 f e | d2 e2 }
    \new Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. | s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

La définition correcte des voix permet à la mélodie d'être liée.
@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Le fait d'éviter le séparateur @code{\\} permet aussi d'imbriquer des
constructions polyphoniques, ce qui peut être une manière plus naturelle
de saisir la musique.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ |
      <<
        {c8 b16 a b8 g ~ g2}
        \new Voice { \voiceThree
          s4 b4 c2
          \oneVoice
        }
      >>
    \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Dans certaines circonstances de polyphonie complexe, vous pourrez être
amené à recourir à des voix supplémentaires afin d'éviter des collisions
de notes.  Ces voix additionnelles s'ajoutent en définissant un
identificateur, comme le montre l'exemple suivant :

@lilypond[quote,verbatim,ragged-right,relative=2]
voiceFive = #(context-spec-music (make-voice-props-set 4) 'Voice)

\relative c''' <<
  { \voiceOne g4 ~  \stemDown g32[ f( es d c b a b64 )g] } \\
  { \voiceThree  b4} \\
  { \voiceFive d,} \\
  { \voiceTwo g,}
>>
@end lilypond


@node Collision Resolution
@subsection Collision Resolution

D'ordinaire, les têtes de notes pointées et non-pointées ne sont pas
fusionnées, mais lorsque la propriété @code{merge-differently-dotted} de
l'objet @internalsref{NoteCollision} est définie, elles se trouvent
fusionnées :

@lilypond[quote,verbatim,fragment,ragged-right,relative=2]
\new Voice << {
  g8 g8
  \override Staff.NoteCollision
    #'merge-differently-dotted = ##t
  g8 g8
} \\ { g8.[ f16] g8.[ f16] } >>
@end lilypond

De même, vous pouvez fusionner une tête de blanche avec une tête de
croche, en définissant @code{merge-differently-headed}

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\new Voice << {
  c8 c4.
  \override Staff.NoteCollision
    #'merge-differently-headed = ##t
c8 c4. } \\ { c2 c2 } >>
@end lilypond

LilyPond décale aussi verticalement les silences à l'opposé des hampes,
par exemple

@lilypond[quote,ragged-right,fragment,verbatim]
\new Voice << c''4 \\ r4 >>
@end lilypond

Lorsque trois notes ou plus s'agglutinent dans un même empilement,
@code{merge-differently-headed} ne peut mener à bien la fusion des deux
notes qui devraient l'être.  Pour obtenir une fusion optimale, appliquez
un décalage (@code{\shift}) à la note qui ne devrait pas s'empiler.
Dans la première mesure de l'exemple suivant,
@code{merge-differently-headed} ne fonctionne pas --- la tête de la
blanche est noire.  Dans la seconde mesure, @code{\shiftOn} s'applique
pour sortir le sol (@code{g}) de l'alignement, et
@code{merge-differently-headed} fonctionne correctement.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\override Staff.NoteCollision #'merge-differently-headed = ##t
<<
  { d=''2 g2 } \\
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
<<
  { d'=''2 \shiftOn g2 } \\ 
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
@end lilypond


@refcommands

@funindex \oneVoice
@code{\oneVoice},
@funindex \voiceOne
@code{\voiceOne},
@funindex \voiceTwo
@code{\voiceTwo},
@funindex \voiceThree
@code{\voiceThree},
@funindex \voiceFour
@code{\voiceFour}.

@funindex \shiftOn
@code{\shiftOn},
@funindex \shiftOnn
@code{\shiftOnn},
@funindex \shiftOnnn
@code{\shiftOnnn},
@funindex \shiftOff
@code{\shiftOff} : toutes ces commandes précisent le degré de décalage
des notes de la voix courante.  Les voix externes --- habituellement,
les voix une et deux --- ont @code{\shiftOff}, alors que les voix
internes --- trois et quatre --- ont @code{\shiftOn}.  @code{\shiftOnn}
et @code{\shiftOnnn} sont des niveaux supplémentaires de décalage.

Quand LilyPond est dépassé, la propriété @code{force-hshift} de l'objet
@internalsref{NoteColumn}, et des silences à hauteur déterminée, peuvent
s'avérer utiles pour dicter au programme les choix de placement.

@lilypond[quote,verbatim,ragged-right]
\relative <<
{
  <d g>
  <d g>
} \\ {
  <b f'>
  \once \override NoteColumn #'force-hshift = #1.7
  <b f'>
} >>
@end lilypond


@seealso
Référence du programme : les objets appropriés pour résoudre les
collisions sont @internalsref{NoteCollision} et
@internalsref{RestCollision}.


@refbugs

Quand @code{merge-differently-headed} est utilisé avec une croche ou
une valeur plus courte à hampe vers le haut, et une blanche hampe vers
le bas, la croche se retrouve à la mauvaise place.

Il n'y a aucune prise en charge des agrégats dans lesquels une même note
apparaît avec différentes altérations.  Il est conseillé d'avoir recours
aux enharmoniques, ou d'utiliser la notation spécifique de cluster ---
voir @ref{Clusters}.



@node Staff notation
@section Staff notation

@cindex Staff notation

De la notation musicale concernant la portée, comme
les armures, les clefs ou les chiffres de mesure.

@menu
* Clef::
* Key signature::
* Time signature::
* Partial measures::
* Bar lines::
* Unmetered music::
* System start delimiters::
* Staff symbol::
* Writing music in parallel::
@end menu



@node System start delimiters
@subsection System start delimiters

@cindex système, début de
@cindex crochet vertical
@cindex accolade verticale
@cindex portée multiple
@cindex portées, groupe de

De nombreuses partitions sont écrites sur plusieurs portées.  Ces
portées peuvent être regroupées de quatre manières différentes.

@itemize @bullet
@item Le groupe de portées est attaché par une accolade sur la gauche,
et les barres de mesure sont d'un seul tenant. Il s'agit du contexte
@internalsref{GrandStaff}.

@lilypond[verbatim,ragged-right,quote]
\new GrandStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Le groupe de portées est attaché par un crochet, et les barres
de mesure sont d'un seul tenant. Il s'agit du contexte
@internalsref{StaffGroup}.

@lilypond[verbatim,ragged-right,quote]
\new StaffGroup
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond



@item Le groupe de portées est attaché par un crochet, mais les barres
de mesure sont séparées d'une portée à l'autre. Il s'agit du contexte
@internalsref{ChoirStaff}.

@lilypond[verbatim,ragged-right,quote]
\new ChoirStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Les portées du groupe ne sont pas attachées (hormis par une
simple ligne verticale). Les barres de mesure sont détachées. Il
s'agit de l'assemblage par défaut.

@lilypond[verbatim,ragged-right,quote]
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond
@end itemize


@seealso

Les barres de mesure au début de chaque système prennent l'un des styles
@internalsref{SystemStartBar}, @internalsref{SystemStartBrace},
@internalsref{SystemStartBracket}.  Dans chaque contexte, seul l'un de
ces styles est utilisé, et c'est la propriété
@code{systemStartDelimiter} qui détermine lequel.

@commonprop

Les accolades et crochets délimitant les systèmes peuvent être imbriqués
en profondeur,

@lilypond[quote,ragged-right,verbatim]
\new StaffGroup
\relative <<
  \set StaffGroup.systemStartDelimiterHierarchy
    = #'(SystemStartSquare (SystemStartBracket a (SystemStartSquare b)) d)
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
>>
@end lilypond


@node Staff symbol
@subsection Staff symbol

@cindex symbole de portée
@cindex portée, lignes de

Les notes, nuances, etc. sont regroupés dans un assemblage de lignes
horizontales, que l'on nomme la portée (en anglais @qq{staff}, et
@qq{staves} au pluriel).  Dans LilyPond, ces lignes sont dessinées au
moyen d'un objet de mise en forme à part entière, nommé @code{staff
symbol} --- symbole de portée.


L'aspect du symbole de portée peut être modifié selon différentes
propriétés, telles que le nombre de lignes, leur épaisseur, ou leur
éloignement. Vous en trouverez des exemples dans
@lsr{staff,changing-the-number-of-lines-in-a-staff.ly} et
@lsr{staff,changing-the-staff-size.ly}.


De plus, la portée peut commencer et s'arrêter où l'on veut, grâce aux
commandes @code{\startStaff} et @code{\stopStaff}.

@lilypond[verbatim,relative=2,fragment]
b4 b
\override Staff.StaffSymbol #'line-count = 2
\stopStaff \startStaff
b b
\revert Staff.StaffSymbol #'line-count
\stopStaff \startStaff
b b
@end lilypond

Cette manière de procéder peut être utilisée pour introduire des
@qq{ossias}, ou dans des partitions à nombre de portées variable,
comme sur l'exemple suivant :

@cindex ossia

@lilypondfile{ossia.ly}

@cindex lignes de portée, nombre de
@cindex lignes de portée, épaisseur des
@cindex épaisseur des lignes de portées
@cindex nombre de lignes de portée

@seealso

Référence du programme : @internalsref{StaffSymbol}.

D'autres exemples : @lsrdir{staff}.


@node Writing music in parallel
@subsection Writing music in parallel

@cindex écrire la musique en parallèle
@cindex musique en parallèle
@cindex musique entremêlée

On peut écrire plusieurs voix de façon entremêlée :

@lilypond[quote,fragment,verbatim]
\parallelMusic #'(voiceA voiceB) {
  r8     g'16[ c''] e''[ g' c'' e''] r8     g'16[ c''] e''[ g' c'' e''] |
  c'2                                c'2                                |
  r8     a'16[ d''] f''[ a' d'' f''] r8     a'16[ d''] f''[ a' d'' f''] |
  c'2                                c'2                                |
}
\new StaffGroup <<
  \new Staff \new Voice \voiceA
  \new Staff \new Voice \voiceB
>>
@end lilypond

Ceci fonctionne bien avec la musique pour piano :

@lilypond[quote,verbatim]
music = {
  \key c \major
  \time 4/4
  \parallelMusic #'(voiceA voiceB voiceC voiceD) {
    % Bar 1
    r8  g'16[ c''] e''[ g' c'' e''] r8  g'16[ c''] e''[ g' c''
e''] |
    c'2                                 c'2 |
    r8  a16[ d'] f'[ a d' f']       r8  a16[ d'] f'[ a d' f'] |
    c2                                  c2 |

    % Bar 2
    a'8 b'      c'' d''    e'' f''    g'' a'' |
    d'4         d'         d'         d' |
    c16 d e f   d e f g    e f g a    f g a b |
    a,4         a,4        a,4        a,4 |

    % Bar 3 ...
  }
}

\score {
  \new PianoStaff <<
    \music
    \new Staff <<
      \voiceA \\
      \voiceB
    >>
    \new Staff {
      \clef bass
      <<
        \voiceC \\
        \voiceD
      >>
    }
  >>
}
@end lilypond


@node Connecting notes
@section Connecting notes

De la notation qui affecte des groupes de notes.

@menu
* Ties::
* Slurs::
* Phrasing slurs::
* Laissez vibrer ties::
* Automatic beams::
* Manual beams::
* Grace notes::
@end menu


@node Ties
@subsection Ties

@cindex liaison de prolongation
@funindex ~

Une liaison de tenue (ou de prolongation) relie deux notes adjacentes de
même hauteur.  Dans les faits, elle prolonge la durée d'une note, et ne
doit donc pas être confondue avec les liaisons d'articulation ou de
phrasé.  Une liaison de tenue est indiquée au moyen d'un tilde @samp{~}.

@lilypond[quote,ragged-right,fragment,verbatim]
e' ~ e' <c' e' g'> ~ <c' e' g'>
@end lilypond


Quand une liaison de tenue se trouve entre deux accords, toutes les
notes de même hauteur entre ces deux accords sont reliées.  S'il n'y en
a aucune, aucune liaison n'est créée.  Il est également possible de lier
partiellement deux accords, en mettant les liaisons à l'intérieur des
accords.

@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
<c~ e g~ b> <c e g b>
@end lilypond


Une liaison de tenue est un moyen parmi d'autres pour prolonger la durée
d'une note, tout comme les points.  L'exemple suivant montre deux
manières de matérialiser exactement la même idée :


@lilypond[quote,fragment,ragged-right]
\time 3/4 c'2. c'2 ~ c'4
@end lilypond

@noindent
Les liaisons de tenues sont utilisées soit lorsque la note dépasse de la
mesure, soit quand les points ne suffisent pas à donner la bonne durée.
Lorsque l'on utilise ces liaisons, les valeurs rythmiques les plus
longues doivent s'aligner sur les subidivisions de la mesure, comme ici :

@c KEEP LY
@lilypond[fragment,quote,ragged-right]
\relative {
  r8^"oui" c8 ~ c2 r4 | r8^"non" c2 ~ c8 r4
}
@end lilypond


Lorsque l'on doit lier de nombreuses notes sur plusieurs mesures, il
devient plus facile d'avoir recours à la division automatique des notes
--- voir @ref{Automatic note splitting}.  Ce procédé divise
automatiquement les notes trop longues, et les lie par-delà les barres
de mesure.

@funindex \repeatTie

Lorsqu'une mesure de seconde fois après une reprise commence sur une
note liée, la liaison doit être répétée. C'est à cela que sert la
commande @code{\repeatTie} :

@lilypond[fragment,quote,ragged-right,relative=2]
r <c e g>\repeatTie
@end lilypond

@cindex liaison de prolongation, répétition
@cindex reprises avec alternatives et liaisons de prolongation

@commonprop

Les liaisons de tenue servent parfois à rendre un accord arpégé. Dans ce
cas, les notes liées ne sont pas toutes consécutives. Il faut alors
assigner à la propriété @code{tieWaitForNote} la valeur @emph{vrai}
(@q{t} pour @q{true}).  Cette même méthode peut servir, par exemple, à
lier un trémolo à un accord.

@lilypond[fragment,verbatim,relative=1,ragged-right,quote]
\set tieWaitForNote = ##t
\grace { c16[~ e~ g]~ } <c, e g>2
\repeat tremolo 8 { c32~ c'~ } <c c,>1
e8~ c~ a~ f~ <e' c a f>2
@end lilypond

Il est possible de graver manuellement les liaisons de tenue, en
modifiant la propriété @code{tie-configuration}.  Pour chaque paire, le
premier nombre indique la distance à la portée, en espaces de portée, et
le second la direction (1 pour haut, @minus{}1 pour bas).

@lilypond[fragment,verbatim,relative=1,ragged-right,quote]
<c e g>2~ <c e g> |
\override TieColumn #'tie-configuration =
  #'((0.0 . 1) (-2.0 . 1) (-4.0 . 1))
<c e g>~ <c e g> |
@end lilypond


@refcommands

@funindex \tieUp
@code{\tieUp},
@funindex \tieDown
@code{\tieDown},
@funindex \tieNeutral
@code{\tieNeutral},
@funindex \tieDotted
@code{\tieDotted},
@funindex \tieDashed
@code{\tieDashed},
@funindex \tieSolid
@code{\tieSolid}.


@seealso

Dans ce même manuel : @ref{Automatic note splitting}.

Référence du programme : @internalsref{Tie}.


@refbugs

Un changement de portée, lorsqu'une liaison de tenue est active, ne
peut produire une liaison oblique.

Le changement de clé ou d'octave pendant une liaison de tenue produit un
résultat indéfini.  Dans ces cas-là, il est préférable d'utiliser un
legato.


@node Slurs
@subsection Slurs

@cindex legato
@cindex liaison d'articulation

Une liaison d'articulation indique que les notes doivent être jouées
liées, ou @emph{legato}.  Ces liaisons s'indiquent au moyen de
parenthèses.

@lilypond[quote,ragged-right,relative=2,fragment,verbatim]
f( g a) a8 b( a4 g2 f4)
<c e>2( <b d>2)
@end lilypond


On peut indiquer l'orientation des liaisons suivantes avec
@code{\slur@emph{DIR}}, @code{@emph{DIR}} pouvant être @code{Up} pour
une liaison vers le haut, @code{Down} pour une liaison vers le bas, ou
@code{Neutral} pour laisser LilyPond décider.

Il existe également un raccourci pratique pour forcer l'orientation
d'une seule liaison.  Il suffit pour cela d'ajouter @code{_} ou @code{^}
avant d'ouvrir une parenthèse.

@lilypond[relative=2,ragged-right,quote,verbatim,fragment]
c4_( c) c^( c)
@end lilypond


Une seule liaison d'articulation peut être imprimée à la fois.  S'il est
nécessaire d'imprimer une liaison plus longue, englobant des liaisons
plus courtes, utilisez des @ref{Phrasing slurs}.


@commonprop

Certains auteurs utilisent deux liaisons lorsqu'ils veulent
lier des accords. Dans LilyPond, il faut pour cela assigner
@emph{vrai} (@q{true}) la propriété @code{doubleSlurs} :

@lilypond[verbatim,ragged-right,relative,fragment,quote]
\set doubleSlurs = ##t
<c e>4 ( <d f> <c e> <d f> )
@end lilypond


@refcommands

@funindex \slurUp
@code{\slurUp},
@funindex \slurDown
@code{\slurDown},
@funindex \slurNeutral
@code{\slurNeutral},
@funindex \slurDashed
@code{\slurDashed},
@funindex \slurDotted
@code{\slurDotted},
@funindex \slurSolid
@code{\slurSolid}.

@seealso

Référence du programme : @internalsref{Slur}.


@node Phrasing slurs
@subsection Phrasing slurs

@cindex liaisons de phrasé
@cindex phrasé, liaisons de

Une liaison de phrasé relie plusieurs notes en délimitant une phrase
musicale.  On indique les points de départ et d'arrivée avec @code{\(}
et @code{\)} respectivement.

@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
\time 6/4 c'\( d( e) f( e) d\)
@end lilypond


D'un point de vue typographique, rien ne distingue une liaison de phrasé
d'une liaison d'articulation. Cependant, LilyPond les considère comme
des objets différents. Une commande @code{\slurUp} n'affectera donc pas
une liaison de phrasé : il faut plutôt utiliser @code{\phrasingSlurUp},
@code{\phrasingSlurDown} ou @code{\phrasingSlurNeutral}.

Il n'est pas possible d'avoir plusieurs liaisons de phrasé en même temps.


@refcommands

@funindex \phrasingSlurUp
@code{\phrasingSlurUp},
@funindex \phrasingSlurDown
@code{\phrasingSlurDown},
@funindex \phrasingSlurNeutral
@code{\phrasingSlurNeutral}.


@seealso

Référence du programme : @internalsref{PhrasingSlur}.


@node Laissez vibrer ties
@subsection Laissez vibrer ties

@cindex laissez vibrer
@cindex liaison, laissez vibrer

Les liaisons @qq{Laissez vibrer} (L.V.) sont utilisées pour le piano, la
harpe, et certains instruments de percussion.  Elles indiquent à
l'instrumentiste de laisser sonner la note ou l'accord au lieu de
l'étouffer.  Cet effet s'obtient avec la commande @code{\laissezVibrer}.

@lilypond[fragment,ragged-right,verbatim,relative=1]
<c f g>\laissezVibrer
@end lilypond

@seealso

Référence du programme :
@internalsref{LaissezVibrerTie}
@internalsref{LaissezVibrerTieColumn}

D'autres exemples :
@lsr{connecting,laissez-vibrer-ties.ly}


@node Expressive marks
@section Expressive marks

Les signes d'interprétation aident les musiciens à faire en sorte que la
musique soit plus qu'un simple assemblage de notes et de rythmes.

@menu
* Articulations::
* Fingering instructions::
* Dynamics::
* Breath marks::
* Trills::
* Glissando::
* Arpeggio::
* Falls and doits::
@end menu


@node Articulations
@subsection Articulations

@cindex articulations
@cindex symboles d'ornementation
@cindex ornementations, symboles


Différents symboles peuvent être ajoutés au-dessus ou au-dessous des
notes pour indiquer des ponctuations ou des modes de jeu différents.
On les ajoute à chaque note au moyen d'un tiret suivi du caractère
correspondant à l'articulation désirée.  En voici une démonstration :

@lilypondfile[quote,ragged-right]{script-abbreviations.ly}

Il est possible de changer la signification de ces raccourcis : voir des
exemples dans @file{ly/@/script@/-init@/.ly}.

Même si LilyPond place automatiquement ces symboles, il est possible de
l'obliger à les placer au-dessus ou en-dessous de la note, tout comme
d'autres objets, en utilisant respectivement @code{^} et @code{_}.

@lilypond[quote,ragged-right,fragment,verbatim]
c''4^^ c''4_^
@end lilypond

On peut ajouter d'autres symboles, avec la syntaxe
@var{note}@code{\}@var{symbole}.  Ici encore, on peut forcer leur
orientation avec @code{^} and @code{_}.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c\fermata c^\fermata c_\fermata
@end lilypond

@cindex accent
@cindex marcato
@cindex staccatissimo
@cindex espressivo
@cindex point d'orgue
@cindex point d'arrêt
@cindex staccato
@cindex portato
@cindex tenuto
@cindex tirer l'archet
@cindex pousser l'archet
@cindex bouché
@cindex sourdine
@cindex orgue, marque de pédale d'
@cindex grupetto
@cindex ouvert
@cindex flageolet
@cindex trille
@cindex mordant
@cindex ornementation baroque
@cindex baroque, ornementation
@cindex pouce
@cindex segno
@cindex coda
@cindex varcoda


Voici la liste exhaustive des symboles :

@lilypondfile[ragged-right,quote]{script-chart.ly}

@commonprop

Les symboles s'ordonnent verticalement suivant la propriété
@code{script-priority}. Plus sa valeur numérique est faible, plus le
symbole sera proche de la note. Dans l'exemple suivant, l'objet
@internalsref{TextScript} --- le dièse --- a d'abord la propriété la
plus basse, et il est donc placé plus près de la note ; ensuite c'est
l'objet @internalsref{Script} qui a la propriété la plus basse, et il se
place alors sous le dièse.  Lorsque deux objets ont la même priorité,
c'est l'ordre dans lequel ils sont indiqués qui détermine lequel sera
placé en premier.

@lilypond[verbatim,relative=3,ragged-right,fragment,quote]
\once \override TextScript #'script-priority = #-100
a4^\prall^\markup { \sharp }

\once \override Script #'script-priority = #-100
a4^\prall^\markup { \sharp }
@end lilypond


@seealso

Référence du programme : @internalsref{Script}.


@refbugs

Ces symboles sont présents sur la partition imprimée, mais
n'ont pas d'effet sur le rendu de la musique en MIDI.


@node Fingering instructions
@subsection Fingering instructions

@cindex doigté
@cindex substitution de doigt


Les doigtés peuvent être indiqués comme suit :
@example
@var{note}-@var{chiffre_du_doigt}
@end example
Pour les substitutions de doigts, on a recours à une indication
textuelle (commande @code{\markup}) de doigté
(commande @code{\finger}).

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
c4-1 c-2 c-3 c-4
c^\markup { \finger "2 - 3" }
@end lilypond


La commande @code{\thumb} peut être utilisée pour indiquer, par exemple
dans une partition de violoncelle, si une note doit être jouée avec le
pouce (@q{thumb} en anglais).

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
<a_\thumb a'-3>8 <b_\thumb b'-3>
@end lilypond


Les doigtés des accords peuvent être saisis note par note,
en les indiquant après chaque hauteur de note.

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
< c-1 e-2 g-3 b-5 >4
@end lilypond


@commonprop

On peut contrôler précisément les doigtés des accords en réglant
la propriété @code{fingeringOrientations}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
\set fingeringOrientations = #'(left down)
<c-1 es-2 g-4 bes-5 > 4
\set fingeringOrientations = #'(up right down)
<c-1 es-2 g-4 bes-5 > 4
@end lilypond


Cette propriété permet également, dans de la musique monophonique,
d'indiquer des doigtés très proches des têtes de notes.

@lilypond[verbatim,ragged-right,quote,fragment]
\set fingeringOrientations = #'(right)
<es'-2>4
@end lilypond


@seealso

Référence du programme : @internalsref{Fingering}.

D'autres exemples : @lsr{expressive,fingering-chords.ly}.


@node Dynamics
@subsection Dynamics

@cindex nuances
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz

À chaque nuance absolue correspond une commande, qui peut être indiquée
après une note : @code{c4\ff} par exemple.  Les commandes de nuances
disponibles sont @code{\ppppp}, @code{\pppp}, @code{\ppp}, @code{\pp},
@code{\p}, @code{\mp}, @code{\mf}, @code{\f}, @code{\ff}, @code{\fff},
@code{\ffff}, @code{\fp}, @code{\sf}, @code{\sff}, @code{\sp},
@code{\spp}, @code{\sfz}, et @code{\rfz}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
c\ppp c\pp c \p c\mp c\mf c\f c\ff c\fff
c2\fp c\sf c\sff c\sp c\spp c\sfz c\rfz
@end lilypond

@funindex \<
@funindex \>
@funindex \!

Un crescendo est délimité par @code{\<} et @code{\!}, ou peut se
terminer par une commande de nuance.  Au lieu de @code{\<}
ou @code{\>}, on peut aussi utiliser @code{\cr} et @code{\decr}.
Ces indications sont attachées aux notes ; aussi si l'on veut
faire se succéder plusieurs nuances pendant une note tenue, il faudra
avoir recours à des silences invisibles :

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c\< c\! d\> e\!
<< f1 { s4 s4\< s4\! \> s4\! } >>
@end lilypond

@noindent
En principe, un soufflet --- (de)crescendo imprimé sous forme graphique --
commence au bord gauche de la note de départ, et se termine au
bord droit de la note d'arrivée.  Cependant, si la note d'arrivée
est sur un premier temps, le soufflet s'arrêtera au niveau de la
barre de mesure qui la précède.  Ce comportement peut être annulé
en assignant @emph{faux} (lettre @q{f}) à la propriété
@code{hairpinToBarline} :

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\set hairpinToBarline = ##f
c4\< c2. c4\!
@end lilypond

On peut avoir recours à l'indication @code{\espressivo} pour indiquer un
crescendo puis un decrescendo sur une seule note.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c2 b4 a g1\espressivo
@end lilypond

Cependant, ces deux indications graphiques peuvent se trouver très
comprimées horizontalement.  Pour les rallonger, on peut modifier la
propriété @code{minimum-length} de
@code{Voice.Hairpin} --- @internalsref{Voice}
étant le contexte, et @internalsref{Hairpin} l'objet affecté. Par
exemple :

@example
\override Voice.Hairpin #'minimum-length = #5
@end example

@cindex al niente
@cindex niente, al

Des crescendos ou decrescendos @emph{al niente} peuvent être indiqués de
manière graphique, en assignant @emph{vrai} (lettre @q{t}) à la
propriété @code{circled-tip}, ce qui affiche un cercle à leur extrémité.

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\override Hairpin #'circled-tip = ##t
c2\< c\!
c4\> c\< c2\!
@end lilypond


@cindex crescendo
@cindex decrescendo
@cindex diminuendo

Au lieu d'une notation graphique des crescendos, on peut utiliser
une notation textuelle.

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\setTextCresc
c\< d e f\!
\setHairpinCresc
e\> d c b\!
\setTextDecresc
c\> d e f\!
\setTextDim
e\> d c b\!
@end lilypond

On peut même définir ses propres indications textuelles :

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\set crescendoText = \markup { \italic "cresc. poco" }
\set crescendoSpanner = #'dashed-line
a'2\< a a a\!\mf
@end lilypond

Pour créer des indications de nuances qui restent alignées
avec les nuances habituelles, voir @ref{New dynamic marks}.

Le positionnement vertical des nuances est géré par le
@internalsref{DynamicLineSpanner}.


@commonprop

Des nuances différentes situées --- ou commençant --- sur une même
note seront alignées verticalement.  Pour aligner des nuances qui ne
se situeraient pas sur une même note, il est possible d'augmenter
la propriété @code{staff-padding}.

@example
\override DynamicLineSpanner #'staff-padding = #4
@end example

Cette propriété peut aussi servir à régler des problèmes de
collision entre des nuances et d'autres objets.

Les crescendos ou decrescendos qui aboutissent sur la première note
d'une nouvelle ligne ne sont imprimés que jusqu'à la fin de la ligne
précédente.  Ce comportement peut être outrepassé en définissant :

@example
\override Score.Hairpin #'after-line-breaking = ##t
@end example


Les crescendos et decrescendos indiqués textuellement --- tels que
@emph{cresc.} ou @emph{dim.} --- sont suivis de pointillés qui montrent
leur étendue.  On peut empêcher l'impression de ces pointillés avec :

@example
\override DynamicTextSpanner #'dash-period = #-1.0
@end example


@refcommands

@funindex \dynamicUp
@code{\dynamicUp},
@funindex \dynamicDown
@code{\dynamicDown},
@funindex \dynamicNeutral
@code{\dynamicNeutral}.


@seealso

Référence du programme : @internalsref{DynamicText}, @internalsref{Hairpin}.

Le placement vertical de ces éléments graphiques est géré par le
@internalsref{DynamicLineSpanner}.


@node Breath marks
@subsection Breath marks

Les indications de respiration sont indiquées par la commande @code{\breathe}.

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
c'4 \breathe d4
@end lilypond


@commonprop

On peut choisir le glyphe imprimé par cette commande, en modifiant la
propriété @code{text} de l'objet @code{BreathingSign}, pour lui affecter
n'importe quelle indication textuelle.  Par exemple :

@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
c'4
\override BreathingSign #'text
  = #(make-musicglyph-markup "scripts.rvarcomma")
\breathe
d4
@end lilypond

@seealso

Référence du programme : @internalsref{BreathingSign}.

Exemples : @lsr{expressive,breathing-sign.ly}


@node Trills
@subsection Trills

Les trilles brefs s'indiquent comme n'importe quelle ponctuation :
voir @ref{Articulations}.


Les trilles plus longs sont délimités par @code{\startTrillSpan} et
@code{\stopTrillSpan} :

@lilypond[verbatim,ragged-right,relative=2,quote,fragment]
\new Voice {
  << { c1 \startTrillSpan }
     { s2. \grace { d16[\stopTrillSpan e] } } >>
  c4 }
@end lilypond

@cindex trilles avec hauteur explicite

Les trilles qui font intervenir une hauteur précise peuvent être
indiqués par la commande @code{pitchedTrill}.

@lilypond[ragged-right,verbatim,fragment,relative=1,quote]
\pitchedTrill c4\startTrillSpan fis
f\stopTrillSpan
@end lilypond

@noindent
Le premier argument est la note réelle ; le second est une hauteur qui
sera imprimée comme une tête de note noire entre parenthèses.


@refcommands

@code{\startTrillSpan},
@funindex \startTrillSpan
@code{\stopTrillSpan}.
@funindex \stopTrillSpan


@seealso

Référence du programme : @internalsref{TrillSpanner}.


@node Glissando
@subsection Glissando

@cindex glissando
@funindex \glissando

Un glissando relie une hauteur à une autre en passant par chaque hauteur
intermédiaire.  Il est indiqué graphiquement, par une ligne ou des
vaguelettes entre ces deux notes. On l'obtient en accolant la commande
@code{\glissando} à la première note.

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
c2\glissando c'
\override Glissando #'style = #'zigzag
c2\glissando c,
@end lilypond


@commonprop

@lilypond[quote,ragged-right,verbatim]
I = \once \override NoteColumn #'ignore-collision = ##t

\relative <<
  { \oneVoice \stemDown f2 \glissando \stemNeutral a } \\
  { \oneVoice \I c2 \glissando \I d, }
>>
@end lilypond


@seealso

Référence du programme : @internalsref{Glissando}.

D'autres exemples : @lsr{expressive,glissando.ly}, @lsr{expressive,line-styles.ly}.


@refbugs

Il n'est pas possible d'imprimer un texte (tel que @emph{gliss.})
le long de la ligne de glissando.


@node Arpeggio
@subsection Arpeggio

@cindex arpège
@cindex accord arpégé
@funindex \arpeggio


On peut indiquer qu'un accord doit être arpégé en lui accolant la
commande @code{\arpeggio} :

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
<c e g c>\arpeggio
@end lilypond


Pour spécifier qu'un autre accord doit être plaqué et non arpégé, on
peut remplacer ce signe par un crochet :

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\arpeggioBracket
<c' e g c>\arpeggio
@end lilypond


Le sens de l'arpège est parfois indiqué par une pointe de flèche au bout
de la vaguelette :

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\new Voice {
  \arpeggioUp
  <c e g c>\arpeggio
  \arpeggioDown
  <c e g c>\arpeggio
}
@end lilypond


@commonprop

Quand un arpège couvre plusieurs portées, il est possible d'indiquer
l'arpège sur chacune des portées, puis de relier la ligne de vaguelettes
en assignant @emph{vrai} à la propriété @code{connectArpeggios}, par
exemple dans le contexte @internalsref{PianoStaff} :

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\new PianoStaff <<
  \set PianoStaff.connectArpeggios = ##t
  \new Staff { <c' e g c>\arpeggio }
  \new Staff { \clef bass <c,, e g>\arpeggio }
>>
@end lilypond


@refcommands

@code{\arpeggio},
@funindex \arpeggioUp
@code{\arpeggioUp},
@funindex \arpeggioDown
@code{\arpeggioDown},
@funindex \arpeggioNeutral
@code{\arpeggioNeutral},
@funindex \arpeggioBracket
@code{\arpeggioBracket}.


@seealso

Dans ce même manuel : @ref{Ties}, pour noter explicitement des arpèges.

Référence du programme : @internalsref{Arpeggio}.


@refbugs

Il est impossible de mêler au même instant, dans un contexte
@internalsref{PianoStaff}, des lignes d'arpèges connectées et d'autres
non connectées.


@node Falls and doits
@subsection Falls and doits

Des indications de désinence peuvent être obtenues au moyen de la
commande @code{\bendAfter} :

@lilypond[fragment,ragged-right,relative=2]
\override Score.SpacingSpanner #'shortest-duration-space = #3.0
c4-\bendAfter #+5
c4-\bendAfter #-3
@end lilypond


@node Repeats
@section Repeats

Une des notions essentielles, dans la musique, est le fait que des
éléments soient joués plusieurs fois. Il existe de nombreuses façons
de noter ces reprises.

@menu
* Repeat types::
* Repeat syntax::
* Repeats and MIDI::
* Manual repeat commands::
* Tremolo repeats::
* Tremolo subdivisions::
* Measure repeats::
@end menu


@node Repeat types
@subsection Repeat types

@cindex reprises et répétitions

On peut indiquer des répétitions des façons suivantes :

@table @code
@item unfold
La musique qui doit être répétée sera entièrement imprimée (et jouée).
Ceci est particulièrement utile dans de la musique répétitive.  Ce type
de reprise est le seul pris en compte dans le rendu MIDI.

@item volta
Le passage répété ne sera pas écrit explicitement, mais il sera encadré
sur la partition par des barres de reprises, et peut se terminer par
plusieurs fins alternatives, imprimées de gauche à droite sous des
crochets.  Il s'agit là de la notation courante des reprises avec des
fins alternatives.  Ces dernières, par défaut, ne sont pas jouées dans
le rendu MIDI.

@item tremolo
Pour réaliser des trémolos.  Ceux-ci, par défaut, ne sont pas joués dans
le rendu MIDI.

@item percent
Pour répéter des temps ou des mesures, imprimés sous la forme de signes de
pourcentage.  Ceux-ci, par défaut, ne sont pas joués dans le rendu MIDI.
Les répétitions indiquées par ces symboles doivent être déclarées dans
un contexte @code{Voice}.

@end table


@node Repeat syntax
@subsection Repeat syntax

@cindex volta
@cindex première fois
@cindex seconde fois
@funindex \repeat

Tous les différents types de reprise se spécifient dans
LilyPond avec une même construction syntaxique, qui est :


@example
\repeat @var{type_de_la_reprise} @var{nombre_de_répétitions} @var{expression_à_répéter}
@end example

On peut ajouter, pour indiquer une fin alternative :
@funindex \alternative
@example
\alternative @{
 @var{alternative1}
 @var{alternative2}
 @var{alternative3}
 @dots{}
@}
@end example

@noindent
chaque @var{alternative} étant une expression musicale.  Si l'on donne
trop peu d'alternatives en regard du nombre de fois où le passage doit
être rejoué, la première alternative sera jouée plusieurs fois.


Les reprises courantes s'indiquent comme ceci :

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 { c4 d e f }
\repeat volta 2 { f e d c }
@end lilypond

Et avec des fins alternatives :

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 {c4 d e f}
\alternative { {d2 d} {f f,} }
@end lilypond

Il est possible de créer des répétitions avec une levée.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\new Staff {
  \partial 4 e |
  \repeat volta 4 { c2 d2 | e2 f2 | }
  \alternative { { g4 g g e } { a a a a | b2. } }
}
@end lilypond

@noindent
ou

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\new Staff {
  \partial 4 
  \repeat volta 4 { e | c2 d2 | e2 f2 | }
  \alternative { { \partial 4*3 g4 g g } { a a a a | b2. } }
}
@end lilypond



@funindex \repeatTie
Des liaisons de tenue peuvent être ajoutées à toute alternative :

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 {c4 d e f ~ }
\alternative { {f2 d} {f\repeatTie f,} }
@end lilypond


On peut raccourcir les crochets indiquant les fins alternatives,
en définissant la propriété @code{voltaSpannerDuration}.  Dans 
l'exemple suivant, le crochet ne se prolonge que sur une mesure
à 3/4.

@lilypond[verbatim,ragged-right,quote]
\relative c''{
  \time 3/4
  c c c
  \set Staff.voltaSpannerDuration = #(ly:make-moment 3 4)
  \repeat volta 5 { d d d }
  \alternative { { e e e f f f }
  { g g g } }
}
@end lilypond

Si l'on souhaite à la fois terminer une ligne par une double barre et
débuter la ligne suivante avec une section reprise, on peut utiliser
@example
@dots{} \bar "||:" \break
\repeat volta 2 @{ @dots{}
@end example

Consultez @ref{Bar lines} pour plus d'informations.

@seealso

Program reference: @internalsref{VoltaBracket},
@internalsref{RepeatedMusic},
@internalsref{VoltaRepeatedMusic}, et
@internalsref{UnfoldedRepeatedMusic}.


Examples

Les crochets précédant une reprise s'impriment d'ordinaire seulement
au-dessus de la portée du haut.  On peut ajuster cela en déplaçant le
graveur @code{Volta_engraver} vers les contextes de portée
(@code{Staff}) qui doivent comporter ces crochets ;
voir @ref{Modifying context plug-ins} et 
@lsr{repeats,volta@/-multi@/-staff@/.ly}.


@refbugs

@cindex reprises ambigües

Des reprises imbriquées telles que

@example
\repeat @dots{}
\repeat @dots{}
\alternative
@end example

@noindent
présentent une ambiguïté, dans la mesure où l'on ne sait à quelle
section @code{\repeat} attribuer la section @code{\alternative}.  Pour
résoudre cette ambiguïté, il convient de toujours insérer la commande
@code{\alternative} à l'intérieur de la section @code{\repeat}.  Il est
préférable, dans une telle situation, d'utiliser des accolades pour plus
de clarté.

Lorsqu'une alternative commence, les informations de métrique sont
perdues, il faut donc les rappeler après une reprise, par exemple
en définissant @code{Score.measurePosition} ou en invoquant la commande
@code{\partial}.  De même, aucune liaison (de tenue ou autre)
n'est répétée.

Les crochets qui indiquent les alternatives ne sont pas alignés 
verticalement.


@node Repeats and MIDI
@subsection Repeats and MIDI

@cindex reprises développées
@funindex \unfoldRepeats

Au prix de quelques réglages, les reprises de toutes sortes peuvent être
rendues dans le fichier MIDI.  Il suffit pour cela de recourir à la
fonction @code{\unfoldRepeats}, qui développe toutes les reprises.  En
d'autre termes, @code{\unfoldRepeats} transforme toutes les reprises
en reprises de type @code{unfold}.


@lilypond[quote,verbatim,fragment,line-width=8.0\cm]
\unfoldRepeats {
  \repeat tremolo 8 {c'32 e' }
  \repeat percent 2 { c''8 d'' }
  \repeat volta 2 {c'4 d' e' f'}
  \alternative {
    { g' a' a' g' }
    {f' e' d' c' }
  }
}
\bar "|."
@end lilypond


Lorsque l'on veut utiliser @code{\unfoldRepeats} seulement pour le rendu
MIDI, il faut établir deux blocs @code{\score} : un pour le MIDI, avec
des reprises explicites, et l'autre pour la partition, avec des reprises
notées sous forme de barres de reprise, de trémolo ou de symboles de
pourcentage.  Par exemple

@example
\score @{
 @var{..musique..}
 \layout @{ ..  @}
@}
\score @{
 \unfoldRepeats @var{..musique..}
 \midi @{ ..  @}
@}
@end example


@node Manual repeat commands
@subsection Manual repeat commands

@funindex repeatCommands

La propriété @code{repeatCommands} sert à contrôler la mise en forme des
reprises.  On la définit par une suite de commandes de reprise Scheme.

@table @asis
@item @code{start-repeat}
Pour imprimer une barre de reprise @code{|:}

@item @code{end-repeat}
Pour imprimer une barre de reprise @code{:|}

@item @code{(volta @var{texte})}
Pour imprimer un crochet indiquant une alternative.  L'argument
@var{texte} mentionné dans le crochet peut être n'importe quelle chaîne
de caractères ou indication textuelle --- voir @ref{Text markup}.
Attention cependant à changer la police, car la police employée par
défaut pour les chiffres ne contient aucun caractère alphabétique.

@item @code{(volta #f)}
Pour terminer un crochet indiquant une alternative.
@end table

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c4
  \set Score.repeatCommands = #'((volta "93") end-repeat)
c4 c4
  \set Score.repeatCommands = #'((volta #f))
c4 c4
@end lilypond


@seealso

Référence du programme : @internalsref{VoltaBracket},
@internalsref{RepeatedMusic},
@internalsref{VoltaRepeatedMusic}, et
@internalsref{UnfoldedRepeatedMusic}.


@node Tremolo repeats
@subsection Tremolo repeats

@cindex ligatures de trémolo
@cindex trémolo, ligatures de

On peut placer une notation de trémolo entre deux notes, avec la
commande @code{\repeat} suivie du style trémolo :
@lilypond[quote,verbatim,ragged-right]
\new Voice \relative c' {
  \repeat tremolo 8 { c16 d16 }
  \repeat tremolo 4 { c16 d16 }
  \repeat tremolo 2 { c16 d16 }
}
@end lilypond


On peut aussi indiquer un trémolo sur une seule note, qu'il faudra
alors laisser sans accolades.

@lilypond[quote,verbatim,ragged-right]
\repeat tremolo 4 c'16
@end lilypond


La subdivision des trémolos aboutit à un résultat semblable : voir
@ref{Tremolo subdivisions}.


@seealso

Dans ce manuel : @ref{Tremolo subdivisions}, @ref{Repeats}.

Référence du programme : @internalsref{Beam}, @internalsref{StemTremolo}.


@node Tremolo subdivisions
@subsection Tremolo subdivisions

@cindex trémolo, indication de
@funindex tremoloFlags

Un trémolo peut être indiqué sur une seule note, en la faisant suivre
de deux points et d'un nombre :

@code{note:}[@var{nombre}]. 

Le nombre en question correspond à la valeur de la subdivision ;
il doit être au moins de 8, auquel cas la hampe sera barrée par un 
seul trait de ligature.  Si ce nombre est omis, la dernière valeur ---
telle que mémorisée dans @code{tremoloFlags} --- sera utilisée.

@lilypond[quote,ragged-right,verbatim,fragment]
c'2:8 c':32 | c': c': |
@end lilypond


@refbugs

Les trémolos entrés de cette manière ne sont pas rendus dans
le fichier MIDI.


@seealso

Dans ce manuel : @ref{Tremolo repeats}.

Référence du programme : @internalsref{StemTremolo}.


@node Measure repeats
@subsection Measure repeats

@cindex percent repeats
@cindex measure repeats

Le style de @qq{reprise en pourcent} sert à répéter une séquence de
notes.  Elle sera imprimée une fois, puis remplacée par un symbole
spécial.  Les séquences d'une ou deux mesures sont remplacées par un
symbole qui ressemble au symbole de pourcentage, tandis que les
séquences inférieures à une mesure sont remplacées par une barre
oblique.  Toutes ces répétitions doivent être déclarées dans un contexte
@code{Voice}.

@lilypond[quote,verbatim,ragged-right]
\new Voice \relative c' {
  \repeat percent 4 { c4 }
  \repeat percent 2 { c2 es2 f4 fis4 g4 c4 }
}
@end lilypond

Les répétitions de plus de 2 mesures sont surmontées d'un compteur,
si l'on assigne @emph{vrai} (lettre @q{t}) à la propriété
@code{countPercentRepeats}.

@lilypond[relative=2,fragment,quote,verbatim,ragged-right]
\new Voice {
\set countPercentRepeats = ##t
  \repeat percent 4 { c1 }
}
@end lilypond

Des symboles de pourcentage isolés peuvent aussi être obtenus, au
moyen d'un silence multi-mesures dont on modifie l'aspect :

@lilypond[fragment,verbatim,quote]
\override MultiMeasureRest #'stencil
  = #ly:multi-measure-rest::percent
R1
@end lilypond


@seealso

Référence du programme : @internalsref{RepeatSlash},
@internalsref{PercentRepeat}, @internalsref{DoublePercentRepeat},
@internalsref{DoublePercentRepeatCounter},
@internalsref{PercentRepeatCounter},
@internalsref{PercentRepeatedMusic}.
