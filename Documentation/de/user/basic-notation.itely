@c -*- coding: utf-8; mode: texinfo; -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: ad389dc87664ea7cf89ae5b87ef4c591d9a29f14

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore


@c A menu is needed before every deeper *section nesting of @node's; run
@c     M-x texinfo-all-menus-update
@c to automatically fill in these menus before saving changes

@node Basic notation
@chapter Basic notation

In diesem Kapitel wird die Notation der am häufigsten benutzten 
Notationsformen und -elemente vorgestellt.

@menu
* Pitches::                     
* Rhythms::                     
* Polyphony::                   
* Staff notation::              
* Connecting notes::            
* Expressive marks::            
* Repeats::                     
@end menu



@node Pitches
@section Pitches
In diesem Abschnitt wird behandelt, wie die Tonhöhe angegeben wird.

@menu
* Normal pitches::              
* Accidentals::                 
* Cautionary accidentals::      
* Micro tones::                 
* Note names in other languages::  
* Relative octaves::            
* Octave check::                
* Transpose::                   
* Rests::                       
* Skips::                       
@end menu



@node Rhythms
@section Rhythms

Dieser Abschnitt erklärt Rhythmen, Dauern und Takte.

@menu
* Durations::                   
* Augmentation dots::           
* Tuplets::                     
* Scaling durations::           
* Bar check::                   
* Barnumber check::             
* Automatic note splitting::    
@end menu


@node Polyphony
@section Polyphony

Polyphonie bedeutet in der musikalischen Terminologie das
Vorhandensein von mehr als einer (eigenständigen) Stimme 
in einem Stück. Für LilyPond bedeutet es aber das Vorhandensein 
von mehr als einer Stimme pro System.

@menu
* Chords::                      
* Stems::                       
* Basic polyphony::             
* Explicitly instantiating voices::  
* Collision Resolution::        
@end menu


@node Chords
@subsection Chords

@cindex Akkorde

Ein Akkord wird notiert, indem die zu ihm gehörenden Tonhöhen 
zwischen spitze Klammern (@code{<} und @code{>} gesetzt werden.
Auf einen Akkord kann eine Dauer-Angabe folgen, genauso wie bei 
einfachen Noten.


@lilypond[verbatim,ragged-right,fragment,quote,relative=1]
<c e g>4 <c>8
@end lilypond

Siehe @ref{Chord names} für mehr Information.

@c  I don't like having this here, but I can't think of
@c  anywhere else to put it.  :(   -gp
@node Stems
@subsection Stems

Immer, wenn das Programm eine Note findet, wird automatisch 
ein Notenhals (@internalsref{Stem}) -Objekt erzeugt. Auch 
für ganze Noten und Pausen werden sie erzeugt, aber unsichtbar 
gemacht.

@refcommands

@funindex \stemUp
@code{\stemUp} (Hälse nach oben),
@funindex \stemDown
@code{\stemDown} (Hälse nach unten),
@funindex \stemNeutral
@code{\stemNeutral} (Hälse je nach Notenposition).


@commonprop

Um die Richtung der Hälse zu ändern, können die Befehle

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
a4 b c b
\override Stem #'neutral-direction = #up
a4 b c b
\override Stem #'neutral-direction = #down
a4 b c b
@end lilypond

@noindent benutzt werden.

@node Basic polyphony
@subsection Basic polyphony

@cindex Mehrstimmigkeit
@cindex Polyphonie

Die einfachste Weise, Abschnitte mit mehr als einer Stimme pro
Notensystem zu notieren, ist es, jede Stimme als eine
Sequenz zu notieren (innerhalb der Klammern @code{@{...@}}) 
und dann die beiden Klammer simultan zu kombinieren, indem
sie mit @code{\\} getrennt werden.

@funindex \\

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  c16 d e f
  <<
    { g4 f e | d2 e2 } \\
    { r8 e4 d c8 ~ | c b16 a b8 g ~ g2 } \\
    { s2. | s4 b4 c2 }
  >>
}
@end lilypond

Dieser Trenner veranlasst, dass Stimmen (@internalsref{Voice}) 
-Kontexte@footnote{Polyphone Stimmen werden in anderen
Programmen teilweise als @qq{layers} (Schichten) bezeichnet.}
@cindex Layers
angelegt werden. Sie tragen die Namen @code{"1"}, @code{"2"} 
usw. In jedem dieser Kontexte wird die Richtung von Bögen,
Hälsen usw. entsprechend angepasst.

Diese Stimmen sind alle unabhängig von der Stimme, in der die 
Noten außerhalb der @code{<< \\ >>}-Konstruktion notiert sind.
Das sollte man berücksichtigen, wenn man auf Stimmen-Ebene
Veränderungen vornimmt. Das bedeutet gleichzeitig auch, dass 
Legato- und Bindebögen nicht in eine @code{<< \\ >>}-Umgebung 
hinein- noch aus hier hinaus ragen können. Die parallelen 
Notenabschnitte aus unterschiedlichen @code{<< \\ >>}-Umgebungen
hingegen gehören der gleichen Stimme an. Hier noch einmal das 
gleiche Beispiel mit unterschiedlichen Notenköpfen und Farben 
für jede Stimme. 
Die Veränderung der Notenköpfe in der Hauptstimme hat keine
Auswirkung auf die Stimmen innerhalb der  @code{<< \\ >>}-Umgebungen, 
und die Veränderung der Notenköpfe für die untere Stimme setzt 
sich fort in der zweiten  @code{<< \\ >>}-Umgebung. Hier ist auch 
eine Noten über die Taktgrenze hinweg an die untere Stimme der 
zweiten Polyphonie-Umgebung angebunden.

@cindex Notenköpfe, Stile

@lilypond[quote,verbatim,fragment]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  <<
    { g4 f e } \\
    { \override NoteHead #'style = #'triangle
      \override NoteHead #'color = #blue
    r8 e4 d c8 ~ }
  >> |
  <<
    { d2 e2 } \\
    { c8 b16 a b8 g ~ g2 } \\
    { \override NoteHead #'style = #'slash 
      \override NoteHead #'color = #green
      s4 b4 c2 }
  >>
}
@end lilypond

Polyphonie verändert nicht das Verhältnis der Noten 
innerhalb einer @code{\relative @{ @}}-Umgebung.
Jede Note wird weiterhin errechnet aus der direkt 
vorhergehenden.

@example
\relative @{ NoteA << NoteB \\ NoteC >> NoteD @}
@end example

@code{NoteC} ist relativ zu @code{NoteB}, nicht @code{NoteA};
@code{NoteD} ist relativ zu @code{NoteC}, nicht @code{NoteB} oder
@code{NoteA}.


@node Explicitly instantiating voices
@subsection Explicitly instantiating voices

@internalsref{Voice}-Kontexte können auch manuell innerhalb 
eines @code{<< >>}-Abschnittes initiiert werden. Mit den Befehlen 
@code{\voiceOne} bis hin zu @code{\voiceFour} kann jeder Stimme 
entsprechendes Verhalten von vertikaler Verschiebung und Richtung 
von Hälsen und anderen Objekten hinzugefügt werden.

Genauer gesagt,
@example
<< \upper \\ \lower >>
@end example

@noindent
entspricht 

@example
<<
  \new Voice = "1" @{ \voiceOne \upper @}
  \new Voice = "2" @{ \voiceTwo \lower @}
>>
@end example

Der @code{\voiceXXX}-Befehl setzt die Richtung von Hälsen, 
Bögen, Artikulationszeichen, Text, Punktierungen und Fingersätzen. 
 @code{\voiceOne} und @code{\voiceThree} lassen diese Objekte 
 nach oben zeigen, 
 @code{\voiceTwo} und @code{\voiceFour}
dagegen lassen sie abwärts zeigen. Der Befehl 
@code{\oneVoice} stellt wieder auf das normale Verhalten um.

Ein Ausdruck, der direkt innerhalb einer @code{<< >>}-Umgebung 
auftritt, gehört der Hauptstimme an. Das ist nützlich, wenn zusätzliche 
Stimme auftreten, während die Hauptstimme sich fortsetzt. Hier also 
eine bessere Version des Beispiels aus dem vorigen Abschnitt. Die 
farbigen Kreuz-Notenköpfe zeigen, dass die Hauptstimme sich jetzt in 
einem einzigen Stimmen (@code{voice})-Kontext befindet.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  \override NoteHead #'style = #'cross
  \override NoteHead #'color = #red
  c16 d e f
  \voiceOne
  <<
    { g4 f e | d2 e2 }
    \new Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. | s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Und mit der richtigen Definition der Stimmen kann die Melodie auch 
übergebunden werden.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ | c8 b16 a b8 g ~ g2
      \oneVoice
    }
    \new Voice { \voiceThree
      s2. s4 b4 c2
      \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

Indem man den @code{\\}-Trenner vermeidet, gelingt es auch, mehrstimmige 
Abschnitte ineinander zu schachteln, was in manchen Fällen die bessere 
und natürlichere Lösung sein kann.

@lilypond[quote,ragged-right,verbatim]
\new Staff \relative c' {
  c16^( d e f
  \voiceOne
  <<
    { g4 f e | d2 e2) }
    \context Voice="1" { \voiceTwo
      r8 e4 d c8 ~ |
      <<
        {c8 b16 a b8 g ~ g2}
        \new Voice { \voiceThree
          s4 b4 c2
          \oneVoice
        }
      >>
    \oneVoice
    }
  >>
  \oneVoice
}
@end lilypond

In manchen Fällen von sehr komplexer polyphoner Musik können noch 
mehr Stimmen benötigt werden, um Zusammenstöße zwischen Noten zu 
vermeiden. Zusätzliche Stimmen werden durch einen neuen Bezeichner 
erstellt, wie das nächste Beispiel zeigt.

@lilypond[quote,verbatim,ragged-right,relative=2]
voiceFive = #(context-spec-music (make-voice-props-set 4) 'Voice)

\relative c''' <<
  { \voiceOne g4 ~  \stemDown g32[ f( es d c b a b64 )g] } \\
  { \voiceThree  b4} \\
  { \voiceFive d,} \\
  { \voiceTwo g,}
>>
@end lilypond


@node Collision Resolution
@subsection Collision Resolution

Normalerweise werden Notenköpfe mit einer unterschiedlichen Anzahl 
von Punktierungen nicht verschmolzen, aber wenn die Objekt-Eigenschaft 
 @code{merge-differently-dotted} in ein 
Notenkollisions (@internalsref{NoteCollision})-Objekt gesetzt wird, 
werden sie zusammengefasst.

@lilypond[quote,verbatim,fragment,ragged-right,relative=2]
\new Voice << {
  g8 g8
  \override Staff.NoteCollision
    #'merge-differently-dotted = ##t
  g8 g8
} \\ { g8.[ f16] g8.[ f16] } >>
@end lilypond

Auf gleiche Art können auch Halbe mit Achteln vereinigt werden, indem 
@code{merge-differently-headed} eingesetzt wird:

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\new Voice << {
  c8 c4.
  \override Staff.NoteCollision
    #'merge-differently-headed = ##t
c8 c4. } \\ { c2 c2 } >>
@end lilypond

@noindent
@code{merge-differently-headed} und @code{merge-differently-dotted}
wirken sich allerdings nur auf Noten mit unterschiedlich gerichteten 
Hälsen aus (wie etwa Stimme 1 und 2).

LilyPond verschiebt auch Pausen vertikal, die einem Hals gegenüber stehen:

@lilypond[quote,ragged-right,fragment,verbatim]
\new Voice << c''4 \\ r4 >>
@end lilypond

Wenn drei oder mehr Noten in der selben Spalte angeordnet werden, 
kann @code{merge-differently-headed} nicht mehr erfolgreich die 
Noten vereinen, die ineinander gesetzt werden müssten. Damit die 
Vereinigung funktioniert, muss der Befehl @code{\shift} vor die
Note gesetzt werden, auf die er Auswirkung hat. Im ersten Takt 
des folgenden Beispiels funktioniert @code{merge-differently-headed} 
nicht (der Notenkopf der Halben ist schwarz). Im zweiten Takt 
wurde @code{\shiftOn} eingefügt, um das obere @code{g} aus der 
Spalte zu rücken, und das Vereinigen funktioniert wie gewünscht.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\override Staff.NoteCollision #'merge-differently-headed = ##t
<<
  { d=''2 g2 } \\
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
<<
  { d'=''2 \shiftOn g2 } \\ 
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
@end lilypond


@refcommands

@funindex \oneVoice
@code{\oneVoice},
@funindex \voiceOne
@code{\voiceOne},
@funindex \voiceTwo
@code{\voiceTwo},
@funindex \voiceThree
@code{\voiceThree},
@funindex \voiceFour
@code{\voiceFour}.

@funindex \shiftOn
@code{\shiftOn},
@funindex \shiftOnn
@code{\shiftOnn},
@funindex \shiftOnnn
@code{\shiftOnnn},
@funindex \shiftOff
@code{\shiftOff}: Diese Befehle definieren den Grad, mit 
welchem Noten der aktuellen Stimmen verschoben werden 
sollen. Die äußeren Stimmen (normalerweise 1 und 2) haben 
den Befehl @code{\shiftOff}, die inneren dagegen (drei und 
vier) den Befehl @code{\shiftOn}. @code{\shiftOnn} und 
@code{\shiftOnnn} stellen weitere Verschiebungsebenen dar.

Wenn LilyPond selber keine Lösung bieten kann, können die 
Eigenschaft @code{force-hshift} des 
@internalsref{NoteColumn}-Objektes (siehe unten) 
sowie Pausen mit definierter Tonhöhe eingesetzt werden, 
um Satzentscheidungen des Programmes zu überschreiben.

@lilypond[quote,verbatim,ragged-right]
\relative <<
{
  <d g>
  <d g>
} \\ {
  <b f'>
  \once \override NoteColumn #'force-hshift = #1.7
  <b f'>
} >>
@end lilypond


@seealso

Programmreferenz: Die Objekte, die für Auflösung von Zusammenstößen 
zuständig sind, sind 
@internalsref{NoteCollision} und @internalsref{RestCollision}.


@refbugs

Wenn @code{merge-differently-headed} mit einer nach oben gerichteten 
Achtel oder kleineren Note verwendet wird, und die nach unten gerichtete 
Note ist eine Halbe, bekommt die Achtel die falsche Richtung gesetzt.

Es gibt keine Unterstützung für Cluster, in denen die gleiche Note 
mit unterschiedlichen Vorzeichen im selben Akkord auftritt. In diesem 
Fall sollte man eine enharmonische Transkription benutzen oder 
die spezielle Cluster-Notationsweise, siehe @ref{Clusters}.



@node Staff notation
@section Staff notation

@cindex Notation von Systemelementen
@cindex Systemelemente
@cindex Symbole, systemweit

Dieser Abschnitt zeigt die Notation von Symbolen, die auf 
Systemebene wirken, wie Tonartvorzeichen, Schlüssel oder 
Taktangaben.

@menu
* Clef::                        
* Key signature::               
* Time signature::              
* Partial measures::            
* Bar lines::                   
* Unmetered music::             
* System start delimiters::     
* Staff symbol::                
* Writing music in parallel::   
@end menu


@node System start delimiters
@subsection System start delimiters

@cindex Beginn eines Notensystems
@cindex Systeme, mehrere
@cindex Notensysteme, mehrere
@cindex Klammer, vertikal
@cindex Klammer, geschweift
@cindex Partitur
@cindex Systemgruppe
@cindex Instrumentengruppe
@cindex Stimmgruppe
@cindex System, Chor

Viele Partituren bestehen aus mehr als einem Notensystem. Diese Systeme 
können auf vier unterschiedliche Arten verbunden werden:

@itemize @bullet
@item Die Gruppe wird mit einer Klammer an der linken Seite geöffnet und 
die Taktlinien sind verbunden. Das ist der Klaviersystem 
(@internalsref{GrandStaff})-Kontext.

@lilypond[verbatim,ragged-right,quote]
\new GrandStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Die Gruppe beginnt mit einer Klammer und die Taktlinien sind verbunden. 
Dieses Verhalten erzeugt der Stimmgruppen 
(@internalsref{StaffGroup})-Kontext.

@lilypond[verbatim,ragged-right,quote]
\new StaffGroup
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Die Gruppe beginnt mit einer Klammer, aber die Taktlinien sind nicht 
miteinander verbunden. Das wird mit dem Chorsystem 
(@internalsref{ChoirStaff})-Kontext erreicht.

@lilypond[verbatim,ragged-right,quote]
\new ChoirStaff
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond

@item Die Gruppe beginnt mit einer vertikalen Linie. Taktlinien sind nicht 
verbunden. Das ist die Standardeinstellung für eine Partitur.

@lilypond[verbatim,ragged-right,quote]
\relative <<
  \new Staff { c1 c }
  \new Staff { c c }
>>
@end lilypond
@end itemize


@seealso

Die Definition der Taktlinien am Beginn jedes Systems werden mit 
den Befehlen @internalsref{SystemStartBar}, @internalsref{SystemStartBrace} 
und @internalsref{SystemStartBracket} festgelegt. Nur einer dieser 
drei Typen wird in jedem Kontext erstellt, und dieser Typ wird durch 
die @code{systemStartDelimiter}-Eigenschaft bestimmt.


@commonprop

Anfangsklammern können tief einander verschachtelt werden.

@lilypond[quote,ragged-right,verbatim]
\new StaffGroup
\relative <<
  \set StaffGroup.systemStartDelimiterHierarchy
    = #'(SystemStartSquare (SystemStartBracket a (SystemStartSquare b)) d)
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
  \new Staff { c1 }
>>
@end lilypond


@node Staff symbol
@subsection Staff symbol

@cindex Justierung von Notensystemen
@cindex Notensysteme, Modifikation

Noten, Dynamikzeichen usw. werden auf den Notenlinien angeordnet, die 
sich zu einem Notensystem zusammenfassen lassen. Das Programm LilyPond 
zeichnet diese Linien durch ein spezielles graphisches Objekt, 
@code{staff symbol} (engl. @qq{staff} = Notensystem) genannt.

Dieses Objekt kann bezüglich seiner Eigenschaften, wie Anzahl, Dicke und 
Abstand der Linien verändert werden. Das wird gezeigt in den Beispieldateien 
@lsr{staff,changing-the-number-of-lines-in-a-staff.ly} und
@lsr{staff,changing-the-staff-size.ly}.

Zusätzlich können Systeme beliebig begonnen und beendet werden. Das 
geschieht mit den Befehlen @code{\startStaff} und @code{\stopStaff}.

@lilypond[verbatim,relative=2,fragment]
b4 b
\override Staff.StaffSymbol #'line-count = 2
\stopStaff \startStaff
b b
\revert Staff.StaffSymbol #'line-count
\stopStaff \startStaff
b b
@end lilypond

Kombiniert mit verkleinerten Systemen, kann man diese Funktion etwa 
benutzen, um Ossia-Abschnitte zu notieren. Siehe das Beispiel:

@cindex Ossia

@lilypondfile{ossia.ly}

@cindex Notenlinien, Anzahl
@cindex Notenlinien, Dicke
@cindex Dicke der Notenlinien einstellen
@cindex Anzahl der Notenlinien einstellen
@cindex Zahl der Notenlinien einstellen

@seealso

Programmreferenz: @internalsref{StaffSymbol}.

Beispiele: @lsrdir{staff}


@node Writing music in parallel
@subsection Writing music in parallel

@cindex Parallele Notation, Eingabe
@cindex Eingabe von Noten parallel
@cindex Verschachtelte Musik

Noten für mehrere Stimmen können verschachtelt notiert werden:

@lilypond[quote,fragment,verbatim]
\parallelMusic #'(voiceA voiceB) {
  r8     g'16[ c''] e''[ g' c'' e''] r8     g'16[ c''] e''[ g' c'' e''] |
  c'2                                c'2                                |
  r8     a'16[ d''] f''[ a' d'' f''] r8     a'16[ d''] f''[ a' d'' f''] |
  c'2                                c'2                                |
}
\new StaffGroup <<
  \new Staff \new Voice \voiceA
  \new Staff \new Voice \voiceB
>>
@end lilypond

Das funktioniert ziemlich gut für Klaviernoten:

@lilypond[quote,verbatim]
music = {
  \key c \major
  \time 4/4
  \parallelMusic #'(voiceA voiceB voiceC voiceD) {
    % Bar 1
    r8  g'16[ c''] e''[ g' c'' e''] r8  g'16[ c''] e''[ g' c''
e''] |
    c'2                                 c'2 |
    r8  a16[ d'] f'[ a d' f']       r8  a16[ d'] f'[ a d' f'] |
    c2                                  c2 |

    % Bar 2
    a'8 b'      c'' d''    e'' f''    g'' a'' |
    d'4         d'         d'         d' |
    c16 d e f   d e f g    e f g a    f g a b |
    a,4         a,4        a,4        a,4 |

    % Bar 3 ...
  }
}

\score {
  \new PianoStaff <<
    \music
    \new Staff <<
      \voiceA \\
      \voiceB
    >>
    \new Staff {
      \clef bass
      <<
        \voiceC \\
        \voiceD
      >>
    }
  >>
}
@end lilypond


@node Connecting notes
@section Connecting notes

Dieser Abschnitt stellt Eigenschaften dar, die Gruppen von 
Noten betreffen.

@menu
* Ties::                        
* Slurs::                       
* Phrasing slurs::              
* Laissez vibrer ties::         
* Automatic beams::             
* Manual beams::                
* Grace notes::                 
@end menu


@node Expressive marks
@section Expressive marks

Vortragszeichen helfen dem Musiker, mehr Ausdruck in die Musik zu legen.

@menu
* Articulations::               
* Fingering instructions::      
* Dynamics::                    
* Breath marks::                
* Trills::                      
* Glissando::                   
* Arpeggio::                    
* Falls and doits::             
@end menu


@node Fingering instructions
@subsection Fingering instructions

@cindex Fingersatz
@cindex Fingerwechsel

Fingersatzanweisungen können folgenderweise notiert werden:
@example
@var{Note}-@var{Zahl}
@end example
Für Fingerwechsel muss eine Textbeschriftung (markup) benutzt werden:

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
c4-1 c-2 c-3 c-4
c^\markup { \finger "2 - 3" }
@end lilypond

Mit dem Daumen-Befehl (@code{\thumb}) können die Noten bezeichnet 
werden, die mit dem 
Daumen (etwa auf dem Cello) gespielt werden sollen.
@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
<a_\thumb a'-3>8 <b_\thumb b'-3>
@end lilypond

Fingersätze für Akkorde können auch zu einzelnen Noten des 
Akkordes hinzugefügt werden, indem sie innerhalb der Akkord-Klammer 
direkt an die Noten angefügt werden.
@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
< c-1 e-2 g-3 b-5 >4
@end lilypond


@commonprop

Eine bessere Kontrolle über die Position der Fingersätze in Akkorden 
lässt sich mit der Eigenschaft @code{fingeringOrientations} herstellen:

@lilypond[quote,verbatim,ragged-right,fragment,relative=1]
\set fingeringOrientations = #'(left down)
<c-1 es-2 g-4 bes-5 > 4
\set fingeringOrientations = #'(up right down)
<c-1 es-2 g-4 bes-5 > 4
@end lilypond

Mit dieser Funktion können Fingersatzbezeichnungen auch bei einstimmiger 
Musik sehr nah in die Notenköpfe gerückt werden.

@lilypond[verbatim,ragged-right,quote,fragment]
\set fingeringOrientations = #'(right)
<es'-2>4
@end lilypond


@seealso

Programmreferenz: @internalsref{Fingering}.

Beispiele: @lsr{expressive,fingering-chords.ly}


@node Repeats
@section Repeats

Wiederholung ist ein zentrales Konzept in der Musik, und es gibt eine 
ganze Vielzahl von Notationsmöglichkeiten für Wiederholungen.

@menu
* Repeat types::                
* Repeat syntax::               
* Repeats and MIDI::            
* Manual repeat commands::      
* Tremolo repeats::             
* Tremolo subdivisions::        
* Measure repeats::             
@end menu


@node Repeat types
@subsection Repeat types

@cindex Wiederholungen

Die folgenden Wiederholungsarten sind unterstützt:

@table @code
@item unfold
Die wiederholte Musik wird vollständig ausgeschrieben (bzw. gespielt). 
Hiermit können sehr einfach sich wiederholende Stellen notiert werden. 
Es ist auch der einzige Wiederholungstyp, der in der MIDI-Ausgabe 
berücksichtigt wird.

@item volta
Wiederholungen werden nicht ausgeschrieben, aber alternative Endungen 
(Volta-Klammern) können bei Bedarf notiert werden. Das ist die übliche 
Wiederholung für Wiederholungen mit unterschiedlichen Enden. Die 
Wiederholung wird in der MIDI-Datei nicht berücksichtigt.


@item tremolo
Hiermit können Tremolo-Balken erstellt werden. Sie werden nicht in die 
MIDI-Datei aufgenommen.

@item percent
Hiermit können noten- oder taktweise Wiederholungszeichen notiert werden. 
Sie erinnern an das Prozentzeichen. Auch sie werden nicht in der MIDI-Datei 
berücksichtigt. Diese Wiederholungen müssen innerhalb eines Stimmen 
(@code{Voice})-Kontextes erstellt werden.

@end table


@node Repeat syntax
@subsection Repeat syntax

@cindex Klammer, Wiederholung
@cindex Volta
@cindex Prima volta
@cindex Seconda volta
@cindex Zweite Klammer
@funindex \repeat

LilyPond besitzt eine einzige Syntax für alle unterschiedlichen 
Wiederholungstypen. Sie lautet:

@example
\repeat @var{Typ} @var{Wiederholungszähler} @var{Wiederholungsnoten}
@end example

Wenn Sie unterschiedliche Endungen haben, können Sie diese mit dem 
Befehl 
@funindex \alternative notieren, etwa 
@example
\alternative @{
  @var{Klammer1}
  @var{Klammer2}
  @var{Klammer3}
  @dots{}
@}
@end example

@noindent
wobei jede Klammer ein musikalischer Ausdruck ist. Wenn Sie nicht genug 
unterschiedliche Alternativen für alle Wiederholungen angeben, wird 
angenommen, dass die erste Alternative mehr als einmal verwendet wird.

Eine typische Wiederholung kann so aussehen:

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 { c4 d e f }
\repeat volta 2 { f e d c }
@end lilypond

Und mit unterschiedlichen Klammern:

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 {c4 d e f}
\alternative { {d2 d} {f f,} }
@end lilypond

Wiederholungen können mit Auftakten kombiniert werden.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\new Staff {
  \partial 4 e |
  \repeat volta 4 { c2 d2 | e2 f2 | }
  \alternative { { g4 g g e } { a a a a | b2. } }
}
@end lilypond

@noindent
or

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\new Staff {
  \partial 4 
  \repeat volta 4 { e | c2 d2 | e2 f2 | }
  \alternative { { \partial 4*3 g4 g g } { a a a a | b2. } }
}
@end lilypond


@funindex \repeatTie

Bindebögen können auch an eine zweite Klammer angefügt werden.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c1
\repeat volta 2 {c4 d e f ~ }
\alternative { {f2 d} {f\repeatTie f,} }
@end lilypond

Es ist auch möglich, die Klammern zu verkürzen, indem ihnen ein 
Wert in der Eigenschaft @code{voltaSpannerDuration} zugewiesen 
wird. Im nächsten Beispiel ist die Klammer beispielsweise nur 
einen 3/4-Takt lang.

@lilypond[verbatim,ragged-right,quote]
\relative c''{
  \time 3/4
  c c c
  \set Score.voltaSpannerDuration = #(ly:make-moment 3 4)
  \repeat volta 5 { d d d }
  \alternative { { e e e f f f }
  { g g g } }
}
@end lilypond

Wenn eine Wiederholung am Anfang einer neuen Zeile beginnen soll 
und eine Doppellinie am Ende der vorhergehenden Zeile stehen soll, 
muss
@example
@dots{} \bar "||:" \break 
\repeat volta 2 @{ @dots{} 
@end example

@noindent benutzt werden. Siehe 
 @ref{Bar lines} for more information.

@seealso

Programmreferenz: @internalsref{VoltaBracket},
@internalsref{RepeatedMusic},
@internalsref{VoltaRepeatedMusic} und
@internalsref{UnfoldedRepeatedMusic}.


Beispiele:

Klammern für die Wiederholung werden normalerweise nur über dem obersten 
System ausgegeben. Das kann verändert werden, indem 
 @code{Volta_engraver} in den @code{Staff}-Kontext gesetzt wird,
über dem diese Klammern erscheinen sollen. Vgl.
@ref{Modifying context plug-ins} und

@lsr{repeats,volta@/-multi@/-staff@/.ly}.


@refbugs

@cindex Wiederholung, mehrdeutig

Eine ineinandergeschachtelte Wiederholung wie 

@example
\repeat @dots{}
\repeat @dots{}
\alternative
@end example

@noindent
ist mehrdeutig, weil nicht klar ist, zu welchem @code{\repeat}-Abschnitt 
die @code{\alternative}-Endung gehört. Diese Mehrdeutigkeit wird von 
LilyPond aufgelöst, indem die alternative Endung immer zu der innersten 
Wiederholung gehört. Um Klarheit zu schaffen, bietet es sich an, in solchen 
Situationen Klammern zu benutzen.

Die Taktposition wird bei einer alternativen Endung nicht mitgeteilt, so 
dass nach einer Wiederholung diese Information manuell angegeben werden 
muss, 
entweder durch setzen von @code{Score.measurePosition} oder indem der 
Befehl @code{\partial} benutzt wird. Gleichermaßen werden auch Legato- oder 
Bindebögen nicht wiederholt.


@node Repeats and MIDI
@subsection Repeats and MIDI

@cindex Erweiterung von Wiederholungen
@funindex \unfoldRepeats

Mit ein bisschen Anpassung können alle Wiederholungstypen 
auch in der MIDI-Datei wiedergegeben werden. Das wird erreicht 
durch die @code{\unfoldRepeats}-Funktion. Hiermit werden alle 
Wiederholungen, welcher Art auch immer, in notengetreue Wiederholungen 
umgewandelt, die Noten werden also wiederholt ausgegeben.

@lilypond[quote,verbatim,fragment,line-width=8.0\cm]
\unfoldRepeats {
  \repeat tremolo 8 {c'32 e' }
  \repeat percent 2 { c''8 d'' }
  \repeat volta 2 {c'4 d' e' f'}
  \alternative {
    { g' a' a' g' }
    {f' e' d' c' }
  }
}
\bar "|."
@end lilypond

Wenn man eine Partitur schreibt, die diesen @code{\unfoldRepeats}-Befehl 
für die MIDI-Ausgabe benutzt, muss man zwei @code{\score}-Umgebungen 
schreiben: eine für die MIDI-Ausgabe, wo die Wiederholungen ausgeschrieben 
werden, und eine für die gedruckte Notation, in der Klammern, Tremolo und 
Prozent-Wiederholungen benutzt werden. Zum Beispiel:

@example
\score @{
  @var{..music..}
  \layout @{ .. @}
@}
\score @{
  \unfoldRepeats @var{..music..}
  \midi @{ .. @}
@}
@end example


@node Manual repeat commands
@subsection Manual repeat commands

@funindex repeatCommands

Die Eigenschaft @code{repeatCommands} kann verwendet werden, um das 
Aussehen der Wiederholungen zu beeinflussen. Ihr Argument ist eine 
Scheme-Liste an Wiederholungsbefehlen.

@table @asis
@item @code{start-repeat}
Setzt eine @code{|:} Taktlinie.

@item @code{end-repeat}
Setzt eine @code{:|} Taktlinie.

@item @code{(volta @var{text})}
Setzt eine Volta-Klammer mit der Beschriftung @var{text}: Der Text 
kann definiert werden als Textstring oder formatierter Text, siehe 
Abschnitt @ref{Text markup}. Es darf nicht vergessen werden, die 
Schriftart zu verändern, weil die Standardschriftart für die Nummern 
keine Buchstaben enthält.

@item @code{(volta #f)}
Beendet eine aktive Klammer.
@end table

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c4
  \set Score.repeatCommands = #'((volta "93") end-repeat)
c4 c4
  \set Score.repeatCommands = #'((volta #f))
c4 c4
@end lilypond


@seealso

Programmreferenz: @internalsref{VoltaBracket},
@internalsref{RepeatedMusic},
@internalsref{VoltaRepeatedMusic} und
@internalsref{UnfoldedRepeatedMusic}.


@node Tremolo repeats
@subsection Tremolo repeats

@cindex Tremolobalken

Um Tremolozeichen zwischen den Noten zu setzen, kann der 
Wiederholungstyp @code{tremolo} benutzt werden.

@lilypond[quote,verbatim,ragged-right]
\new Voice \relative c' {
  \repeat tremolo 8 { c16 d16 }
  \repeat tremolo 4 { c16 d16 }
  \repeat tremolo 2 { c16 d16 }
}
@end lilypond

Tremolozeichen können auch einer einzelnen Noten hinzugefügt werden. In 
diesem Fall darf die Note nicht von Klammern eingefasst sein.

@lilypond[quote,verbatim,ragged-right]
\repeat tremolo 4 c'16
@end lilypond

Ähnliche Darstellung wird erreicht durch eine innere Tremolountereilung, 
die im Abschnitt @ref{Tremolo subdivisions} beschrieben wird.


@seealso

Im Handbuch: @ref{Tremolo subdivisions}, @ref{Repeats}.

Programmreferenz: @internalsref{Beam}, @internalsref{StemTremolo}.


@node Tremolo subdivisions
@subsection Tremolo subdivisions

@cindex Tremolozeichen
@funindex tremoloFlags

Tremolozeichen können einer einzelnen Noten hinzugefügt werden, indem 
an sie die Zeichen @code{:}[@var{Anzahl}] angefügt werden. Die Anzahl 
bezeichnet die Dauer der einzelnen Noten, und ihr Mindestwert ist 8. 
Mit der Zahl 8 erhält man eine Linie durch den Notenhals. Wenn die 
Anzahl ausgelassen wird, wird der letzte benutzte Wert (in der 
Funktion @code{tremoloFlags} gespeichert) eingesetzt.

@lilypond[quote,ragged-right,verbatim,fragment]
c'2:8 c':32 | c': c': |
@end lilypond


@refbugs

Tremolos, die auf diese Weise notiert werden, werden nicht in die 
MIDI-Datei aufgenommen.


@seealso

Im Handbuch: @ref{Tremolo repeats}.

Programmreferenz: @internalsref{StemTremolo}.


@node Measure repeats
@subsection Measure repeats

@cindex Prozent-Wiederholungen
@cindex Taktweise Wiederholungen

Wenn der Prozent (@code{percent})-Wiederholungsstil gesetzt ist, wird 
eine Notenphrase wiederholt. Sie wird einmal gedruckt und dann durch 
ein spezielles Zeichen ersetzt. Phrasen von ein oder zwei Takten Dauer 
werden durch ein dem Prozentzeichen ähnlichen Zeichen markiert, Phrasen, 
die kürzer als ein Takt sind, durch einen Schrägstrich dargestellt. 
Dieser Wiederholungstyp muss innerhalb eines Stimmen 
(@code{Voice})-Kontextes notiert werden.

@lilypond[quote,verbatim,ragged-right]
\new Voice \relative c' {
  \repeat percent 4 { c4 }
  \repeat percent 2 { c2 es2 f4 fis4 g4 c4 }
}
@end lilypond

Wiederholungen, die länger als einen Takt dauern, können gezählt werden, 
wenn die @code{countPercentRepeats}-Eigenschaft eingeschaltet wird.

@lilypond[relative=2,fragment,quote,verbatim,ragged-right]
\new Voice {
\set countPercentRepeats = ##t
  \repeat "percent" 4 { c1 }
}
@end lilypond

Isolierte Prozentzeichen können auch gedruckt werden. Das geschieht, indem 
einer Ganztaktpause (@code{R}) eine andere Funktion zugewiesen wird.

@lilypond[fragment,verbatim,quote]
\override MultiMeasureRest #'stencil
  = #ly:multi-measure-rest::percent
R1
@end lilypond

@seealso

Programmreferenz: @internalsref{RepeatSlash},
@internalsref{PercentRepeat}, @internalsref{DoublePercentRepeat},
@internalsref{DoublePercentRepeatCounter},
@internalsref{PercentRepeatCounter},
@internalsref{PercentRepeatedMusic}.



