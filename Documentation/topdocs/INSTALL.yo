article(INSTALL - compiling and installing GNU LilyPond)(HWN & JCN)()

sect(ABSTRACT)

This document explains what you need to install LilyPond, and what you
should do.  If you are going to compile and install LilyPond often,
e.g. when doing development, you might want to check out the 
file(buildscripts/set-lily.sh) script.  It sets some environment 
variables and symlinks, which comes in handly when you have to compile 
LilyPond more often.  

sect(OBTAINING)

You can get the latest version of LilyPond at
lurl(ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/).  Refer to the links
document for mirror sites.

em(If you upgrade by patching do remember to rerun autoconf after
applying the patch).

sect(PREREQUISITES)

For compilation you need:

itemize(
it()A GNU system: GNU LilyPond is known to run on these GNU systems: Linux
    (PPC, intel), FreeBSD, AIX, NeXTStep, IRIX, Digital Unix and
Solaris.

it()Lots of disk space: LilyPond takes between 30 and 100 mb to
compile if you use debugging information.  If you are short on
disk-space run configure with code(--disable-debugging).

Although we recommend to use Unix, LilyPond is known to run on Windows
NT/95/98 as well.  See Section ref(w32).

it() EGCS 1.1 or newer.

it() Python 1.5,
Check out
lurl(ftp://ftp.python.org) or lurl(ftp://ftp.cwi.nl/pub/python).

it() GUILE 1.3,  check out lurl(http://www.gnu.org/software/guile/guile.html).

it()GNU make. 
Check out lurl(ftp://ftp.gnu.org).

it()Flex (version 2.5.4 or newer). 
Check out lurl(ftp://ftp.gnu.org).

it()Bison (version 1.25 or newer).
Check out lurl(ftp://ftp.gnu.org).

it()Yodl.  All documentation will be in Yodl. (1.30.17)
lurl(ftp://ftp.lilypond.org/pub/yodl)

it()The geometry package for LaTeX is needed to use ly2dvi.  
Available at 
lurl(ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry)
or at mirror site lurl(ftp://ftp.dante.de)
)


sect(RUNNING)

GNU LilyPond does use a lot of resources. For operation you need the
following software

itemize(
it()TeX
it()A PostScript printer and/or viewer (such as Ghostscript) is strongly
    recommended.  Xdvi will show all embedded PostScript too if you have
    Ghostscript installed.
it() GUILE 1.3, check out lurl(http://www.gnu.org/programs/guile.html)
)


For running LilyPond successfully you have to help TeX and MetaFont
find various files.  The recommended way of doing so is adjusting the
environment variables in the start-up scripts of your shell.  An
example is given here for the Bourne shell:
verb(export MFINPUTS="/usr/local/share/lilypond/mf:"
export TEXINPUTS="/usr/local/share/lilypond/tex:/usr/local/share/lilypond/ps:"
)
The empty path component
represents TeX() and MetaFont's default search paths.  Scripts with
the proper paths for the bourne and C-shell respectively are generated in
file(buildscripts/out/lilypond-profile) and
file(buildscripts/out/lilypond-login) during compilation. 

LilyPond is a hideously slow program.  A fast CPU and plenty of RAM is
recommended for comfortable use.


sect(WEBSITE)

If you want to auto-generate Lily's website, you'll need some additional
conversion tools.

itemize(
it()xpmtoppm (from the Portable Bitmap Utilities) (For RedHat Linux
	     users: it is included within the package libgr-progs).
it()Bib2html lurl(http://pertsserver.cs.uiuc.edu/~hull/bib2html.)
    Which, in turn depends on man2html for proper installation.
man2html can be had from lurl(http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05).

    TeTeX users should not forget to rerun texhash.
)

Building the website requires pnmtopng.  The version of file(pnmtopng)
that is distributed with RedHat 5.1 and 5.2 contains a bug: pnmtopng
is dynamically linked to the wrong version of libpng.  Recompile it
from source, and make sure that the pnmtopng binary is linked
statically to the libpng that is included in libgr.   RedHat 6.0 does
not have this problem.

verb( tar xzf libgr-2.0.13.tar.gz
      make
      cd png
      rm libpng.so*
      make pnmtopng
)

You can then install the new pnmtopng into /usr/local/bin/

sect(CONFIGURING and COMPILING)

to install GNU LilyPond, simply type:
verb(
	gunzip -c lilypond-x.y.z | tar xf -
	cd lilypond-x.y.z
	./configure		# fill in your standard prefix with --prefix
	make
	make install
)

This will install a number of files, something close to:
verb(
	/usr/local/man/man1/mi2mu.1
	/usr/local/man/man1/convert-mudela.1
	/usr/local/man/man1/mudela-book.1
	/usr/local/man/man1/lilypond.1
	/usr/local/bin/lilypond
	/usr/local/bin/mi2mu
	/usr/local/share/lilypond/*
	/usr/local/share/locale/{it,nl}/LC_MESSAGES/lilypond.mo
)


The above assumes that you are root and have the GNU development
tools, and your make is GNU make.  If this is not the case, you can
adjust your environment variables to your taste:

verb(
	export CPPFLAGS="-I /home/me/my_include -DWEIRD_FOOBAR" 
	./configure
)

code(CPPFLAGS) are the preprocessor flags. 

The configure script is Cygnus configure, and it will accept
bf(--help). If you are not root, you will probably have to make it
with a different bf(--prefix) option.  Our favourite location is

verb(
	./configure --prefix=$HOME/usr
)

In this case, you will have to set up MFINPUTS, and TEXINPUTS accordingly.

Since GNU LilyPond currently is beta, you are advised to also use

verb(
	--enable-debugging
	--enable-checking
)

Options to configure include:

description(
dit(bf(--enable-printing))
    Enable debugging print routines (lilypond bf(-D) option)
dit(bf(--enable-optimise))
    Set maximum optimisation: compile with bf(-O2).  This can be
unreliable on some compiler/platform combinations (eg, DEC Alpha and PPC)
dit(bf(--enable-profiling))
    Compile with support for profiling.
dit(bf(--enable-config))
    Output to a different configuration file.  Needed for multi-platform
    builds
)

All options are documented in the file(configure) help
The option bf(--enable-optimise) is recommended for Real Life usage.

If you do

verb(
	make all
)

everything will be compiled, but nothing will be installed.  The
resulting binaries can be found in the subdirectories file(out/) (which
contain all files generated during compilation).

sect(CONFIGURING FOR MULTIPLE PLATFORMS)

If you want to compile LilyPond with different configuration settings,
then, you can use the bf(--enable-config) option.  Example: suppose I
want to build with and   without profiling.  Then I'd use the
following for the normal build, 

verb(
      ./configure --prefix=~ --disable-optimise --enable-checking
      make
      make install
     )

and for the profiling version, I specify a different configuration.

verb(
      ./configure --prefix=~ --enable-profiling --enable-config=optprof --enable-optimise --disable-checking
      make config=optprof
      make config=optprof install
)


sect(INSTALLING)

If you have done a successful code(make), then a simple

verb(
	make install
)

should do the trick.

If you are doing an upgrade, please remember to remove obsolete
file(.pk) and file(.tfm) files of the fonts.  A script has been
provided to do the work for you, see file(bin/clean-fonts.sh).

nsect(CAVEATS)

itemize(
it()The -O2 option  triggers  bugs on various platforms (PowerPC, Alpha).
    If you experience problems, you  should first try  turning off
    this.
it() On PPC you need at least EGCS-1.1.2f.
)

nsect(EXAMPLE)

This is what I type in my xterm:

verb(
	lilypond someinput.ly
	tex someinput.tex
	xdvi someinput&
)

This is what the output looks like over here:

verb(
	GNU LilyPond 0.0.78 #4/FlowerLib 1.1.24 #0
	Parsing ... [/home/hw/share/lilypond/init//
		<..etc..>
		init//performer.ly]]][input/kortjakje.ly]
	Creating elements ...[8][16][24][25]
	Preprocessing elements... 
	Calculating column positions ... [14][25]
	Postprocessing elements...
	TeX output to someinput.tex ...
	Creating MIDI elements ...MIDI output to someinput.midi ...


	hw:~/musix/spacer$ xdvi someinput&
	[1] 855
)

Check out the input files, some of them have comments
Please refer to the man page for more information.

sect(REDHAT LINUX)

RedHat Linux users can compile an RPM. A spec file is in
file(make/out/lilypond.spec), it is distributed along with the
sources.

You can make the rpm by issuing
verb(
	rpm -tb lilypond-x.y.z.tar.gz
	rpm -i /usr/src/redhat/RPMS/i386/lilypond-x.y.z
)

Precompiled i386 eRedHat RPMS are available from
lurl(http://linux.umbc.edu/software/lilypond/rpms/).



sect(DEBIAN GNU/LINUX)

A Debian package is also available; contact Anthony Fok
email(foka@debian.org).  The build scripts are in the subdirectory
file(debian/).


sect(WINDOWS NT/95)
label(w32)


Separate instructions on building for W32 are avaible
url(in the file README-W32.yo)(../../DOEXPAND(outdir)/README-W32.html).

sect(AUTHORS)

nemail(Han-Wen Nienhuys)(hanwen@cs.uu.nl)

nemail(Jan Nieuwenhuizen)(janneke@gnu.org)


Have fun!
