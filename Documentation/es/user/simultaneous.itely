@c -*- coding: utf-8; mode: texinfo; -*-
@ignore
    Translation of GIT committish: b5ba45ccb092324961dac292dc58cc0eddbc7307

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c \version "2.11.38"

@node Simultaneous notes
@section Simultaneous notes

@lilypondfile[quote]{simultaneous-headword.ly}

La polifonía en música hace referencia a tener más de una voz en una
pieza cualquiera de música.  En LilyPond la polifonía hace referencia
a tener más de una voz en el mismo pentagrama.

@menu
* Single voice::                
* Multiple voices::             
@end menu


@node Single voice
@subsection Single voice

@menu
* Chorded notes::                      
* Clusters::                    
@end menu

@node Chorded notes
@subsubsection Chorded notes

@cindex acordes
@cindex paréntesis en ángulo
@funindex <
@funindex >
@funindex <...>

Un acorde se forma encerrando un conjunto de notas entre @code{<} y
@code{>}.  Un acorde puede ir seguido de una duración o un conjunto de
articulaciones, como si fueran simples notas.

@lilypond[verbatim,ragged-right,fragment,quote,relative=1]
<c e g>2 <c f a>4-> <e g c>-.
@end lilypond

Para ver más información sobre los acordes, consulte @ref{Modern chords}.

@seealso

Glosario musical:
@rglos{chord}.

Manual de aprendizaje:
@rlearning{Combining notes into chords}.

Referencia de la notación:
@ref{Modern chords}.

Snippets:
@rlsr{Simultaneous notes}.

@knownissues

Por algún motivo, expresiones musicales como @code{<< @{ g8 e8 @} a4
>>}, que se deberían convertir en acordes, aparecen en dos pentagramas
separados.  Para evitarlo emplee acordes explícitos como en
@code{<g a>8 <e a>8}.



@node Clusters
@subsubsection Clusters

@cindex cluster
@cindex racimo (cluster)

Un «cluster» o racimo indica que se deben tocar simultáneamente un
conjunto de notas consecutivas.  Se escriben aplicando la función
@code{\makeClusters} a una secuencia de acordes, p.ej.:

@lilypond[quote,ragged-right,relative=2,fragment,verbatim]
\makeClusters { <g b>2 <c g'> }
@end lilypond

Se pueden mezclar en el mismo pentagrama notas normales y clusters,
incluso al mismo tiempo.  En tal caso, no se hace ningún intento de
evitar automáticamente las colisiones entre clusters y notas normales.

@seealso

Glosario musical:
@rglos{cluster}.

Fragmentos de código:
@rlsr{Simultaneous notes}.

Referencia de funcionamiento interno:
@internalsref{ClusterSpanner},
@internalsref{ClusterSpannerBeacon},
@internalsref{Cluster_spanner_engraver}.

@c Examples: @rlsr{contemporary,cluster@/.ly}.

@knownissues

Los clusters sólo tienen un buen aspecto cuando abarcan un mínimo de
dos acordes.  En caso contrario aperecerán excesivamente estrechos.

Los clusters no llevan plica y por sí mismos no pueden indicar las
duraciones.  Los racimos separados necesitarían silencios de
separación entre ellos.

@node Multiple voices
@subsection Multiple voices

@menu
* Collision resolution::        
* Automatic part combining::    
* Writing music in parallel::   
@end menu

@node Collision resolution
@subsubsection Collision resolution

@cindex mezclar notas
@cindex notas, colisiones de

Normalmente las cabezas de nota con un número de puntillos diferente
no se mezclan en una sola, pero cuando se le da un valor verdadero a
la propiedad @code{merge-differently-dotted} en el objeto
@internalsref{NoteCollision}, se juntan en una sola:

@lilypond[quote,verbatim,fragment,ragged-right,relative=2]
\new Voice << {
  g8 g8
  \override Staff.NoteCollision
    #'merge-differently-dotted = ##t
  g8 g8
} \\ { g8.[ f16] g8.[ f16] } >>
@end lilypond

De forma similar puede mezclar cabezas de blanca con corcheas,
ajustando @code{merge-differently-headed}:

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\new Voice << {
  c8 c4.
  \override Staff.NoteCollision
    #'merge-differently-headed = ##t
c8 c4. } \\ { c2 c2 } >>
@end lilypond

@noindent
@code{merge-differently-headed} y
@code{merge-differently-dotted} se aplican solamente a direcciones de
plica opuestas (es decir, a las voces 1 y 2).

LilyPond también desplaza verticalmente los silencios que están en el
lado contrario de una plica, por ejemplo

@lilypond[quote,ragged-right,fragment,verbatim]
\new Voice << c''4 \\ r4 >>
@end lilypond

@cindex desplazada, nota

Si tres o más notas coinciden verticalmente en la misma columna,
@code{merge-differently-headed} no puede completar satisfactoriamente
la mezcla de las dos notas que deberían mezclarse.  Para hacer posible
que la mezcla funcione, aplique un @code{\shift} (desplazamiento) a la
nota que no debe mezclarse.  En el primer compás del ejemplo
siguiente, @code{merge-differently-headed} no funciona (la cabeza de
la blanca está rellena) En el segundo compás, se aplica
@code{\shiftOn} para mover horizontalmente el @code{g} (Sol) superior,
y @code{merge-differently-headed} funciona correctamente.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\override Staff.NoteCollision #'merge-differently-headed = ##t
<<
  { d=''2 g2 } \\
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
<<
  { d'=''2 \shiftOn g2 } \\ 
  { \oneVoice d=''8 c8 r4 e,8 c'8 r4 } \\
  { \voiceFour e,,2 e'2}
>>
@end lilypond

@cindex multiple voices
@cindex polyphonic music
@cindex shifting voices

En ciertos casos de polifonía compleja, podría necesitar voces
adicionales para evitar colisiones entre las notas.  Las voces
adicionales se añaden definiendo una variable, como se muestra a
continuación:

@lilypond[quote,verbatim,ragged-right]
voiceFive = #(context-spec-music (make-voice-props-set 4) 'Voice)

\relative c''' <<
  { \voiceOne g4 ~  \stemDown g32[ f( es d c b a b64 )g] } \\
  { \voiceThree  b4} \\
  { \voiceFive d,} \\
  { \voiceTwo g,}
>>
@end lilypond


@predefined

@funindex \oneVoice
@code{\oneVoice},
@funindex \voiceOne
@code{\voiceOne},
@funindex \voiceTwo
@code{\voiceTwo},
@funindex \voiceThree
@code{\voiceThree},
@funindex \voiceFour
@code{\voiceFour}.

@funindex \voiceNeutralStyle
@funindex \voiceOneStyle
@funindex \voiceTwoStyle
@funindex \voiceThreeStyle
@funindex \voiceFourStyle
@example
\voiceNeutralStyle
\voiceOneStyle
\voiceTwoStyle
\voiceThreeStyle
\voiceFourStyle
@end example

@funindex \shiftOn
@code{\shiftOn},
@funindex \shiftOnn
@code{\shiftOnn},
@funindex \shiftOnnn
@code{\shiftOnnn},
@funindex \shiftOff
@code{\shiftOff}: estos comandos especifican el grado en que se deben
desplazar los acordes de la voz en curso.  Las voces exteriores
(normalmente: la voz uno y la voz dos) tienen @code{\shiftOff}
(desplazamiento desactivado), mientras que las voces interiores (tres
y cuatro) tienen @code{\shiftOn} (desplazamiento activado).
@code{\shiftOnn} y @code{\shiftOnnn} definen niveles de desplazamiento
más grandes.

Cuando LilyPond no puede con todo, se pueden usar la propiedad
@code{force-hshift} (forzar desplazamiento) del objeto
@internalsref{NoteColumn} y los silencios con altura para
sobreescribir las decisiones de composición tipográfica.

@lilypond[quote,verbatim,ragged-right]
\relative <<
{
  <d g>
  <d g>
} \\ {
  <b f'>
  \once \override NoteColumn #'force-hshift = #1.7
  <b f'>
} >>
@end lilypond


@seealso

Fragmentos de código:
@lsrdir{Simultaneous,Simultaneous-notes}.

Referencia de funcionamiento interno: los objetos responsables de
resolver las colisiones son
@internalsref{NoteCollision} y
@internalsref{RestCollision}.


@knownissues

Cuando se emplea @code{merge-differently-headed} con una corchea (o
una nota más corta) con la plica hacia arriba, y una blanca con la
plica hacia abajo, la corchea no tiene el desplazamiento correcto.

No están contemplados los racimos (clusters) donde la misma nota se
presenta con diferentes alteraciones accidentales dentro del mismo
acorde.  En este caso se recomienda usar la transcripción enarmónica,
o usar la notación especial de racimos (véase @ref{Clusters}).


@node Automatic part combining
@subsubsection Automatic part combining
@cindex automática, combinación de partes
@cindex partes, combinación automática
@cindex partes, combinador de

La combinación automática de particellas se usa para mezclar dos
partes musicales sobre un pentagrama.  Tiene como objetivo el
tipografiado de partituras orquestales.  Cuando las dos partes son
idénticas durante un período de tiempo, sólo se presenta una de ellas.
En los lugares en que las dos partes son diferentes, se tipografían
como voces separadas, y las direcciones de las plicas se establecen de
forma automática.  También las partes de solo y @emph{a due} quedan
identificadas y es posible marcarlas.

La sintaxis para la combinación de las partes es

@example
\partcombine @var{expresión_musical_1} @var{expresión_musical_2}
@end example


El ejemplo siguiente ejemplifica la funcionalidad básica del
combinador de partes: poner las partes en un solo pentagrama, y
establecer las direcciones de las plicas y la polifonía.

@lilypond[quote,verbatim,ragged-right,fragment]
\new Staff \partcombine
  \relative g' { g g a( b) c c r r }
  \relative g' { g g r4 r e e g g }
@end lilypond

El primer Sol (@code{g}) aparece una sola vez, aunque se especificaba
dos veces (una en cada parte).  Las direcciones de las plicas,
ligaduras de expresión y ligaduras de unión se establecen
automáticamente, dependiendo de si es un solo o un unísono.  La
primera parte (la que tiene el contexto llamado @code{one}) siempre
tiene las plicas para arriba, y @q{Solo}, mientras que la segunda
(llamada @code{two}) siempre tiene las plicas para abajo y @q{Solo
II}.

Si queremos sólo las partes mezcladas y no las marcas textuales,
podemos establecer la propiedad @code{printPartCombineTexts} al valor
false.

@lilypond[quote,verbatim,ragged-right,fragment]
\new Staff <<
  \set Staff.printPartCombineTexts = ##f
  \partcombine
    \relative g' { g a( b) r }
    \relative g' { g r4 r f }
>>
@end lilypond

Para cambiar el texto que se imprime para los solos o la fusión,
podemos establecer las propiedades @code{soloText}, @code{soloIIText}
y @code{aDueText}.

@lilypond[quote,verbatim,ragged-right,fragment]
\new Staff <<
  \set Score.soloText = #"ichi"
  \set Score.soloIIText = #"ni"
  \set Score.aDueText = #"tachi"
  \partcombine
    \relative g' { g4 g a( b) r }
    \relative g' { g4 g r r f }
>>
@end lilypond

Los dos argumentos de @code{\partcombine} se interpretan como
contextos de @internalsref{Voice}.  Si se están usando octavas
relativas, se debe especificar @code{\relative} para ambas expresiones
musicales, es decir:

@example
\partcombine
  \relative @dots{} @var{expresión_musical_1}
  \relative @dots{} @var{expresión_musical_2}
@end example

@noindent
Una sección @code{\relative} que se encuentra fuera de
@code{\partcombine} no tiene ningún efecto sobre las notas de
@var{expresión_musical_1} y @var{expresión_musical_2}.

@seealso

Glosario musical:
@rglos{a due}.

Fragmentos de código:
@lsrdir{Simultaneous,Simultaneous-notes}.

Referencia de funcionamiento interno:
@internalsref{PartCombineMusic}, @internalsref{Voice}.

@knownissues

Si @code{printPartCombineTexts} está establecido, cuando las dos voces
tocan y terminan las mismas notas, el combinador de partes puede
tipografiar @code{a2} más de una vez en el mismo compás.

@code{\partcombine} no puede estar dentro de @code{\times}.

@code{\partcombine} no puede estar dentro de @code{\relative}.

Internamente, el @code{\partcombine} interpreta los dos argumentos
como @code{Voice}s llamadas @code{one} y @code{two}, y después decide
cuándo se pueden combinar las partes.  Como consecuencia, si los
argumentos cambian a contextos de @internalsref{Voice} con nombres
diferentes, los eventos que contienen se ignorarán.


@node Writing music in parallel
@subsubsection Writing music in parallel

@cindex Escribir música en paralelo
@cindex Música intercalada

La música para varias partes se puede intercalar:

@lilypond[quote,fragment,verbatim]
\parallelMusic #'(voiceA voiceB) {
  r8 g'16[ c''] e''[ g' c'' e''] r8 g'16[ c''] e''[ g' c'' e''] |
  c'2                               c'2                         |
  r8 a'16[ d''] f''[ a' d'' f''] r8 a'16[ d''] f''[ a' d'' f''] |
  c'2                               c'2                         |
}
\new StaffGroup <<
  \new Staff \new Voice \voiceA
  \new Staff \new Voice \voiceB
>>
@end lilypond

Esto funciona bastante bien para música de piano.

@lilypond[quote,verbatim]
global = { \key g \major  \time 2/4 }
music = {
  \parallelMusic #'(voiceA voiceB voiceC voiceD) {
    % Bar 1 
    a'8 b'      c'' d''   |
    d'4         e'        |
    c16 d e f   d e f g   |
    a,4         a,4       |

    % Bar 2
    e''8 f''    g'' a''   |
    f'4         g'        |
    e16 f g a   f g a b   |
    a,4         a,4       |

    % Bar 3 ...
  }
}

\score {      
  \new PianoStaff <<
    \new Staff {
      \global
      <<
        \voiceA \\
        \voiceB
      >>
    }
    \new Staff {
      \global \clef bass
      <<
        \voiceC \\
        \voiceD
      >>
    }
  >>
}
@end lilypond

@seealso

Fragmentos de código:
@rlsr{Simultaneous notes}.

