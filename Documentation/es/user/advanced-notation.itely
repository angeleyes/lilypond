@c -*- coding: utf-8; mode: texinfo; -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: f7420240e4ce1fe2217646482a47d00f566af52c

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@c NOTE: dummy committish
@c the stuff below is still to be moved -J.Mandereau

@node Text markup
@subsection Text markup

@node Overview of text markup commands
@subsection Overview of text markup commands

Todas las siguientes órdenes se pueden usar dentro de @code{\markup @{ @}}.

@include markup-commands.tely

@node Overview of text markup list commands
@subsection Overview of text markup list commands

Todos las siguientes instrucciones se puede utilizar con @code{\markuplines}.

@include markup-list-commands.tely

@node Different editions from one source
@subsection Different editions from one source

@funindex \tag
@cindex etiquetas

La orden @code{\tag} marca expresiones musicales con un nombre.  Estas expresiones
etiquetadas se pueden filtrar o seleccionar más tarde.  Con este mecanismo es posible
hacer versiones diferentes a partir de la misma fuente musical.

En el ejemplo siguiente podemos ver dos versiones de una pieza musical, una
para la partitura del director y otra con notas guía para la particella instrumental

@example
c1
<<
  \tag #'part <<
    R1 \\
    @{
      \set fontSize = #-1
      c4_"cue" f2 g4 @}
  >>
  \tag #'score R1
>>
c1
@end example

Lo mismo vale para las articulaciones, textos, etc.: se hacen
anteponiendo
@example
-\tag #@var{su_etiqueta}
@end example
a una articulación, por ejemplo,
@example
c1-\tag #'particella ^4
@end example

Esto define una nota con una indicación condicional de digitación.

@cindex keepWithTag
@cindex removeWithTag
Aplicando las órdenes @code{\keepWithTag} y @code{\removeWithTag},
se pueden filtrar las expresiones etiquetadas.  Por ejemplo,
@example
<<
  @var{the music}
  \keepWithTag #'partitura @var{la música}
  \keepWithTag #'particella @var{la música}
>>
@end example
produciría

@lilypondfile[ragged-right,quote]{tag-filter.ly}

Los argumentos de la orden @code{\tag} deben ser un símbolo
(como @code{#'partitura} o @code{#'particella}), seguido de
una expresión musical.  Es posible poner varias etiquetas sobre
un fragmento de música con varias apariciones de @code{\tag},

@example
  \tag #'particella-original \tag #'particella-transportada @dots{}
@end example


@seealso

Ejemplos: @lsr{parts,tag@/-filter@/.ly}


@refbugs

Los silencios múltiples no se funden si crea la partitura con las dos secciones
etiquetadas.



