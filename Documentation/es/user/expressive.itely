@c -*- coding: utf-8; mode: texinfo; -*-
@ignore
    Translation of GIT committish: f7420240e4ce1fe2217646482a47d00f566af52c

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@node Expressive marks
@section Expressive marks

@menu
* Attached to notes::           
* Curves::                      
* Lines::                       
@end menu


@node Attached to notes
@subsection Attached to notes


@menu
* Articulations::               
* Dynamics::                    
@end menu

@node Articulations
@unnumberedsubsubsec Articulations

@cindex Articulaciones
@cindex guiones
@cindex ornamentos

Un amplio abanico de símbolos pueden aparecer encima o debajo de las notas
para indicar distintas características de la ejecución.  Se adjuntan a una
nota escribiendo un guión y el carácter que significa la articulación.
Se muestran a continuación:

@lilypondfile[quote,ragged-right]{script-abbreviations.ly}

Los significados de estas abreviaturas se pueden modificar.  Consulte
@file{ly/@/script@/-init@/.ly} para ver ejemplos.

La indicación se coloca automáticamente, pero la dirección (arriba o abajo)
se puede también forzar.  Como otros fragmentos de código de LilyPond,
@code{_} los situará por debajo del pentagrama, y @code{^} los colocará por encima.

@lilypond[quote,ragged-right,fragment,verbatim]
c''4^^ c''4_^
@end lilypond

Se pueden añadir otros símbolos usando la sintaxis
@var{nota}@code{\}@var{nombre}.  Una vez más, se puede forzar
que aparezcan por encima o por debajo usando @code{^} y @code{_},
por ejemplo

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c\fermata c^\fermata c_\fermata
@end lilypond

@cindex acento
@cindex marcato
@cindex staccatissimo
@cindex espressivo
@cindex fermata
@cindex calderón
@cindex apagado
@cindex staccato
@cindex portato
@cindex tenuto
@cindex arco arriba
@cindex arco abajo
@cindex pedal, indicaciones de
@cindex órgano, indicaciones de pedal de
@cindex grupeto circular
@cindex open
@cindex flageolet
@cindex grupeto circular invertido
@cindex trino
@cindex semitrino
@cindex semitrino descendente
@cindex prallprall
@cindex prallmordent
@cindex prall, up
@cindex prall, down
@cindex thumb marking
@cindex segno
@cindex coda
@cindex varcoda

He aquí un cuadro que muestra todas las articulaciones disponibles:

@lilypondfile[ragged-right,quote]{script-chart.ly}


@commonprop

El orden vertical de las articulaciones se controla con la propiedad
@code{script-priority}.  Cuanto más bajo es esta número,
más cerca de la nota se colocará.
En este ejemplo el @internalsref{TextScript} (el símbolo de sostenido) tiene primero la
prioridad más baja, así que se coloca en la parte más baja en el primer ejemplo.
En el segundo, el semitrino (el @internalsref{Script}) tiene la prioridad más baja, por tanto
se coloca en la parte interior.  Cuando dos objetos tienen la misma prioridad, el orden en que
se escriben decide cuál de ellos va primero.

@lilypond[verbatim,relative=3,ragged-right,fragment,quote]
\once \override TextScript #'script-priority = #-100
a4^\prall^\markup { \sharp }

\once \override Script #'script-priority = #-100
a4^\prall^\markup { \sharp }
@end lilypond


@seealso

Referencia del programa: @internalsref{Script}.


@refbugs

Estos signos aparecen en la salida impresa pero no tienen ningún efecto sobre la
representación de MIDI de la música.


@node Dynamics
@unnumberedsubsubsec Dynamics

@cindex Dynamics
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz

Las marcas dinámicas de matiz absoluto se especifican usando un comando después de una nota:
@code{c4\ff}.  Las marcas dinámicas disponibles son @code{\ppppp},
@code{\pppp}, @code{\ppp},
@code{\pp}, @code{\p}, @code{\mp}, @code{\mf}, @code{\f}, @code{\ff},
@code{\fff}, @code{\ffff}, @code{\fp}, @code{\sf}, @code{\sff},
@code{\sp}, @code{\spp}, @code{\sfz} y @code{\rfz}.

@lilypond[quote,verbatim,ragged-right,fragment,relative=2]
c\ppp c\pp c \p c\mp c\mf c\f c\ff c\fff
c2\fp c\sf c\sff c\sp c\spp c\sfz c\rfz
@end lilypond

@funindex \<
@funindex \>
@funindex \!

Un regulador de crescendo se comienza con @code{\<} y se termina con
@code{\!} o con un matiz absoluto.  Un regulador decrescendo comienza con
@code{\>} y se termina también con @code{\!} o con un matiz dinámico
absoluto.  Se pueden usar @code{\cr} y @code{\decr} en lugar de
@code{\<} y @code{\>}.  A causa de que estas marcas se unen a notas, se deben
usar notas espaciadoras si se necesitan varias marcas durante una nota.

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c\< c\! d\> e\!
<< f1 { s4 s4\< s4\! \> s4\! } >>
@end lilypond

@noindent
Un regulador comienza normalmente en el borde izquierdo de la nota inicial
y acaba en el borde derecho de la nota final.  Si la nota
final cae sobre el principio de un compás,  el regulador finaliza en la línea divisoria
inmediatamente anterior.  Esto se puede modificar estableciendo la propiedad
@code{hairpinToBarline},

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
\set hairpinToBarline = ##f
c4\< c2. c4\!
@end lilypond

En algunas situaciones, la marca de articulación @code{\espressivo} puede ser
apropiada para indicar un crescendo y decrescendo sobre una nota,

@lilypond[quote,ragged-right,fragment,verbatim,relative=2]
c2 b4 a g1\espressivo
@end lilypond

Esto puede dar lugar a reguladores muy cortos.  Utilice @code{minimum-length}
dentro de @internalsref{Voice}.@internalsref{Hairpin} para alargarlos, por
ejemplo

@example
\override Voice.Hairpin #'minimum-length = #5
@end example

@cindex al niente
@cindex niente, al

Los reguladores se pueden imprimir con la punta en círculo (notación
al niente) estableciendo la propiedad @code{circled-tip},

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\override Hairpin #'circled-tip = ##t
c2\< c\!
c4\> c\< c2\!
@end lilypond


@cindex crescendo
@cindex decrescendo
@cindex diminuendo

También puede usar texto que diga @emph{cresc.} en vez de reguladores

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
\setTextCresc
c\< d e f\!
\setHairpinCresc
e\> d c b\!
\setTextDecresc
c\> d e f\!
\setTextDim
e\> d c b\!
@end lilypond

Asimismo puede aportar sus propios textos
@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\set crescendoText = \markup { \italic "cresc. poco" }
\set crescendoSpanner = #'dashed-line
a'2\< a a a\!\mf
@end lilypond

Para crear nuevas indicaciones dinámicas o texto que se deba alinear
con los matices, consulte @ref{New dynamic marks}.

El posicionamiento vertical de las expresiones dinámicas se gestiona a
través de @internalsref{DynamicLineSpanner}.


@commonprop

Las expresiones dinámicas que suceden en, comienzan sobre, o acaban
en, la misma nota se alinearán verticalmente.  Si quiere asegurar que
las expresiones dinámicas se alinean cuando no suceden sobre la misma
nota, puede aumentar el valor de la propiedad @code{staff-padding}.

@example
\override DynamicLineSpanner #'staff-padding = #4
@end example

También puede utilizar esta propiedad si las expresiones dinámicas
colisionan con otros elementos de la notación.

Los crescendi y decrescendi que acaban sobre la misma nota de una
línea nueva no se imprimen.  Para cambiar este comportamiento, utilice

@example
\override Score.Hairpin #'after-line-breaking = ##t
@end example

Los cambios dinámicos de tipo texto (como @emph{cresc.} y @emph{dim.})
se imprimen con una línea de puntos que muestra su alcance.  Para
evitar que se imprima esta línea, use

@example
\override DynamicTextSpanner #'dash-period = #-1.0
@end example


@refcommands

@funindex \dynamicUp
@code{\dynamicUp},
@funindex \dynamicDown
@code{\dynamicDown},
@funindex \dynamicNeutral
@code{\dynamicNeutral}.


@seealso

Referencia del programa: @internalsref{DynamicText}, @internalsref{Hairpin}.
El posicionamiento vertical de estos símbolos se maneja por medio de
@internalsref{DynamicLineSpanner}.


@node Curves
@subsection Curves

@menu
* Ties::                        
* Slurs::                       
* Phrasing slurs::              
* Laissez vibrer ties::         
* Breath marks::                
* Falls and doits::             
@end menu

@node Ties
@unnumberedsubsubsec Ties

@cindex ligadura de unión
@funindex ~

Una ligadura de unión conecta dos notas adyacentes de la misma altura.  La ligadura
en efecto extiende la longitud de una nota.  No deben confundirse las ligaduras de unión con
las ligaduras de expresión, que indican articulación, ni con las ligaduras de fraseo, que indican
el fraseo musical.  Se introduce una ligadura de unión usando el símbolo de la tilde curva @samp{~}

@lilypond[quote,ragged-right,fragment,verbatim]
e' ~ e' <c' e' g'> ~ <c' e' g'>
@end lilypond

Cuando se aplica una ligadura de unión a un acorde, se conectan todas las cabezas de las notas cuyas alturas coinciden.
Si no coincide ningún par de cabezas, no se crea ninguna ligadura.  Los acordes
se pueden ligar parcialmente colocando la ligadura dentro del acorde,

@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
<c~ e g~ b> <c e g b>
@end lilypond

Una ligadura es simplemente una forma de extender la duración de una nota, parecida al
puntillo.  El ejemplo siguiente muestra dos formas de escribir
exactamente el mismo concepto:

@lilypond[quote,fragment,ragged-right]
\time 3/4 c'2. c'2 ~ c'4
@end lilypond

@noindent
Se usan ligaduras de expresión bien cuando la nota atraviesa la barra
de compás o bien cuando no se pueden usar puntillos para denotar el
ritmo.  Cuando se usan ligaduras, las notas de mayor duración se deben alinear con las subdivisiones del compás, como

@lilypond[fragment,quote,ragged-right]
\relative {
  r8 c8 ~ c2 r4 | r8^"not" c2 ~ c8 r4
}
@end lilypond

Si necesita unir muchas notas a través de las líneas divisorias, puede
resultar más fácil utilizar la división automática de notas (vea
@ref{Automatic note splitting}).  Este mecanismo divide las notas
largas de forma automática y las liga a través de las barras de compás.

@funindex \repeatTie

Cuando la segunda vez de una repetición comienza con una nota ligada,
es necesario repetir la ligadura.  Esto se puede conseguir mediante @code{\repeatTie},

@lilypond[fragment,quote,ragged-right,relative=2]
r <c e g>\repeatTie
@end lilypond

@cindex ligaduras de repetición
@cindex corchetes de repetición de primera y segunda vez y ligaduras

@commonprop

A veces se usan ligaduras para escribir arpegios.  En este caso, dos notas ligadas no
necesitan ser consecutivas.  Esto se puede conseguir estableciendo la propiedad @code{tieWaitForNote}
(ligadura - esperar nota) al valor verdadero. La misma funcionalidad puede resultar útil,
por ejemplo, para ligar un trémolo a un acorde.  Por ejemplo,

@lilypond[fragment,verbatim,relative=1,ragged-right,quote]
\set tieWaitForNote = ##t
\grace { c16[~ e~ g]~ } <c, e g>2
\repeat tremolo 8 { c32~ c'~ } <c c,>1
e8~ c~ a~ f~ <e' c a f>2
@end lilypond

Las ligaduras de pueden grabar manualmente modificando la propiedad
@code{tie-configuration}.  El primer número indica la distancia desde
el centro del pentagrama en espacios de pentagrama, y el segundo
número indica la dirección (1 = hacia arriba, -1 = hacia abajo).

@lilypond[fragment,verbatim,relative=1,ragged-right,quote]
<c e g>2~ <c e g> |
\override TieColumn #'tie-configuration =
  #'((0.0 . 1) (-2.0 . 1) (-4.0 . 1))
<c e g>~ <c e g> |
@end lilypond


@refcommands


@funindex \tieUp
@code{\tieUp},
@funindex \tieDown
@code{\tieDown},
@funindex \tieNeutral
@code{\tieNeutral},
@funindex \tieDotted
@code{\tieDotted},
@funindex \tieDashed
@code{\tieDashed},
@funindex \tieSolid
@code{\tieSolid}.


@seealso

En el presente manual: @ref{Automatic note splitting}.

Referencia del programa: @internalsref{Tie}.


@refbugs

Un cambio de pentagrama cuando hay una ligadura activa no producirá una ligadura inclinada.

Los cambios de clave o de octava durante una ligadura de unión no
están bien definidos realmente.  En estos casos puede ser preferible una ligadura de expresión.


@node Slurs
@unnumberedsubsubsec Slurs

@cindex Ligaduras de expresión

Una ligadura de expresión indica que las notas se deben tocar unidas o
@emph{legato}.  Se escriben utilizando paréntesis

@lilypond[quote,ragged-right,relative=2,fragment,verbatim]
f( g a) a8 b( a4 g2 f4)
<c e>2( <b d>2)
@end lilypond

La dirección de una ligadura de expresión se puede especificar con
@code{\slur@emph{DIRECCIÓN}}, donde @code{@emph{DIRECCIÓN}} es o bien
@code{Up} (arriba), @code{Down} (abajo), o @code{Neutral}
(seleccionada automáticamente).

Sin embargo, hay una forma abreviada muy conveniente para forzar las
direcciones de las ligaduras de expresión.  Escribiendo @code{_} o
@code{^} antes de los paréntesis de apertura, también se establece la dirección.  Por ejemplo,

@lilypond[relative=2,ragged-right,quote,verbatim,fragment]
c4_( c) c^( c)
@end lilypond

Se puede imprimir una sola ligadura cada vez.  Si necesita imprimir
una ligadura larga por encima de varias ligaduras más cortas, consulte @ref{Phrasing slurs}.


@commonprop

Algunos compositores escriben dos ligaduras cuando quieren acordes
legato.  Esto se consigue en LilyPond mediante el establecimiento de @code{doubleSlurs},

@lilypond[verbatim,ragged-right,relative,fragment,quote]
\set doubleSlurs = ##t
<c e>4 ( <d f> <c e> <d f> )
@end lilypond


@refcommands

@funindex \slurUp
@code{\slurUp},
@funindex \slurDown
@code{\slurDown},
@funindex \slurNeutral
@code{\slurNeutral},
@funindex \slurDashed
@code{\slurDashed},
@funindex \slurDotted
@code{\slurDotted},
@funindex \slurSolid
@code{\slurSolid}.

@seealso

Referencia del programa: @internalsref{Slur}.


@node Phrasing slurs
@unnumberedsubsubsec Phrasing slurs

@cindex ligaduras de fraseo
@cindex marcas de fraseo

Una ligadura de fraseo (o marca de fraseo) conecta las notas y se
utiliza para indicar una frase musical.  Se escribe usando @code{\(} y
@code{\)} respectivamente

@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
\time 6/4 c'\( d( e) f( e) d\)
@end lilypond

Tipográficamente, la ligadura de fraseo se comporta casi exactamente
igual que una ligadura de expresión normal.  Sin embargo, se tratan
como objetos diferentes.  Una @code{\slurUp} no tendrá ningún efecto sobre una ligadura de fraseo; utilice en su lugar
@code{\phrasingSlurUp}, @code{\phrasingSlurDown}, y
@code{\phrasingSlurNeutral}.

No se pueden tener varias ligaduras de fraseo simultáneas.


@refcommands

@funindex \phrasingSlurUp
@code{\phrasingSlurUp},
@funindex \phrasingSlurDown
@code{\phrasingSlurDown},
@funindex \phrasingSlurNeutral
@code{\phrasingSlurNeutral}.


@seealso

Referencia del programa: @internalsref{PhrasingSlur}.


@node Laissez vibrer ties
@unnumberedsubsubsec Laissez vibrer ties
@cindex Laissez vibrer
@cindex Ligaduras laissez vibrer

Las ligaduras L.v. (laissez vibrer, dejar vibrar) indican que las
notas no se deben apagar al final.  Se usan en la notación para piano,
arpa y otros instrumentos de cuerda y percusión.  Se pueden introducir escribiendo @code{\laissezVibrer},

@lilypond[fragment,ragged-right,verbatim,relative=1]
<c f g>\laissezVibrer
@end lilypond

@seealso

Referencia del programa:
@internalsref{LaissezVibrerTie}
@internalsref{LaissezVibrerTieColumn}

Archivos de ejemplo:
@lsr{connecting,laissez-vibrer-ties.ly}


@node Breath marks
@unnumberedsubsubsec Breath marks

Las marcas de respiración se introducen usando @code{\breathe}

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
c'4 \breathe d4
@end lilypond


@commonprop

El glifo de la marca de respiración se puede ajustar por medio de la sobreescritura de la propiedad
@code{text} del objeto de presentación @code{BreathingSign} con cualquier texto de marcado.
Por ejemplo,
@lilypond[quote,ragged-right,fragment,verbatim,relative=1]
c'4
\override BreathingSign #'text
  = #(make-musicglyph-markup "scripts.rvarcomma")
\breathe
d4
@end lilypond

@seealso

Referencia del programa: @internalsref{BreathingSign}.

Ejemplos: @lsr{expressive,breathing-sign.ly}


@node Falls and doits
@unnumberedsubsubsec Falls and doits

Se pueden expresar caídas y subidas de tono (falls y doits) añadidas a
las notas mediante el comando @code{\bendAfter},

@lilypond[fragment,ragged-right,relative=2]
\override Score.SpacingSpanner #'shortest-duration-space = #3.0
c4-\bendAfter #+5
c4-\bendAfter #-3
@end lilypond


@node Lines
@subsection Lines

@menu
* Glissando::                   
* Arpeggio::                    
* Trills::                      
* Analysis brackets::           
@end menu

@node Glissando
@unnumberedsubsubsec Glissando

@cindex Glissando
@funindex \glissando

Un glissando es un cambio gradual en la altura.  Se denota por medio
de una línea o una línea ondulada entre dos notas.  Se llama
adjuntando @code{\glissando} a una nota

@lilypond[quote,ragged-right,fragment,relative=2,verbatim]
c2\glissando c'
\override Glissando #'style = #'zigzag
c2\glissando c,
@end lilypond


@commonprop

@lilypond[quote,ragged-right,verbatim]
I = \once \override NoteColumn #'ignore-collision = ##t

\relative <<
  { \oneVoice \stemDown f2 \glissando \stemNeutral a } \\
  { \oneVoice \I c2 \glissando \I d, }
>>
@end lilypond



@seealso

Referencia del programa: @internalsref{Glissando}.

Archivos de ejemplo:
@lsr{expressive,glissando.ly}, @lsr{expressive,line-styles.ly}


@refbugs

La impresión de texto sobre la línea (como @emph{gliss.}) no está contemplada.


@node Arpeggio
@unnumberedsubsubsec Arpeggio

@cindex Arpeggio
@cindex acorde quebrado
@funindex \arpeggio

Se puede especificar un signo de arpegio (conocido también como acorde quebrado) sobre un
acorde adjuntando un @code{\arpeggio} a un acorde

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
<c e g c>\arpeggio
@end lilypond

Un corchete recto a la izquierda indica que el intérprete no tiene que
arpegiar el acorde

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\arpeggioBracket
<c' e g c>\arpeggio
@end lilypond

La dirección del arpegio se denota a veces mediante la adición de una
punta de flecha a la línea ondulada

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\new Voice {
  \arpeggioUp
  <c e g c>\arpeggio
  \arpeggioDown
  <c e g c>\arpeggio
}
@end lilypond


@commonprop

Cuando un arpegio cruza uno o varios pentagramas, puede adjuntar un
arpegio a los acordes en los dos pentagramas y establecer
@internalsref{PianoStaff}.@code{connectArpeggios}

@lilypond[quote,ragged-right,fragment,relative=1,verbatim]
\new PianoStaff <<
  \set PianoStaff.connectArpeggios = ##t
  \new Staff { <c' e g c>\arpeggio }
  \new Staff { \clef bass <c,, e g>\arpeggio }
>>
@end lilypond

@c TODO: cross-voice arpeggio example?
@c such an example is already in LSR -J.Mandereau

@refcommands

@code{\arpeggio},
@funindex \arpeggioUp
@code{\arpeggioUp},
@funindex \arpeggioDown
@code{\arpeggioDown},
@funindex \arpeggioNeutral
@code{\arpeggioNeutral},
@funindex \arpeggioBracket
@code{\arpeggioBracket}.


@seealso

Manual de notación: @ref{Ties}, para escribir arpegios explícitamente.

Referencia del programa: @internalsref{Arpeggio}.


@refbugs

No es posible mezclar arpegios conectados y no conectados en un
@internalsref{PianoStaff} en el mismo instante de tiempo.


@node Trills
@unnumberedsubsubsec Trills

Los trinos cortos se imprimen como una articulación normal; consulte @ref{Articulations}.

Los trinos largos mantenidos se hacen con @code{\startTrillSpan} y
@code{\stopTrillSpan},

@lilypond[verbatim,ragged-right,relative=2,quote,fragment]
\new Voice {
  << { c1 \startTrillSpan }
     { s2. \grace { d16[\stopTrillSpan e] } } >>
  c4 }
@end lilypond

@cindex Trinos con altura

Los trinos que se tienen que ejecutar sobre notas especificadas
explícitamente se pueden tipografiar con el comando @code{pitchedTrill},

@lilypond[ragged-right,verbatim,fragment,relative=1,quote]
\pitchedTrill c4\startTrillSpan fis
f\stopTrillSpan
@end lilypond

@noindent
El primer argumento es la nota principal.  La altura de la segunda se
imprime como una cabeza de nota sin plica entre paréntesis.


@refcommands

@code{\startTrillSpan},
@funindex \startTrillSpan
@code{\stopTrillSpan}.
@funindex \stopTrillSpan


@seealso

Referencia del programa: @internalsref{TrillSpanner}.


@node Analysis brackets
@unnumberedsubsubsec Analysis brackets
@cindex corchetes
@cindex fraseo, corchetes de
@cindex musicológico, análisis
@cindex notas, corchetes de agrupación de

Los corchetes se usan en análisis musical para indicar las estructuras presentes en las piezas
musicales.  LilyPond contempla una forma básica de corchetes horizontales anidados.
Para usarlos, añada el grabador @internalsref{Horizontal_bracket_engraver}
al contexto @internalsref{Staff}.  Un corchete se abre con
@code{\startGroup} y se cierra con @code{\stopGroup}

@lilypond[quote,ragged-right,verbatim]
\score {
  \relative c'' {
    c4\startGroup\startGroup
    c4\stopGroup
    c4\startGroup
    c4\stopGroup\stopGroup
  }
  \layout {
    \context {
      \Staff \consists "Horizontal_bracket_engraver"
}}}
@end lilypond

@seealso

Referencia del programa: @internalsref{HorizontalBracket}.


