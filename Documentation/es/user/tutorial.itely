@c -*- coding: utf-8; mode: texinfo; -*-
@c This file is part of lilypond.tely
@ignore
    Translation of GIT committish: e344dd780c20717963ed77658f3ce169822bc5cb

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  See TRANSLATION for details.
@end ignore

@ignore
Tutorial guidelines:  (different from policy.txt!)
- unless you have a really good reason, use either
    @lilypond[verbatim,quote,ragged-right]
  or
    @lilypond[verbatim,quote,ragged-right,fragment,relative=2]

  Don't use any other relative=X commands (make it a non-fragment
  example), and don't use fragment without relative=2.

- use "aes" and "ees" instead of "as" and "es".  I know it's not
  correct Dutch naming, but let's not confuse people with this
  until we get to the Basic notation chapter.

- Add "Music Glossary: @rglos{foo}" to the _top_ of the relevant
  portions of the tutorial.

@end ignore


@node Tutorial
@chapter Tutorial

Este tutorial comienza con una introducción al lenguaje musical
LilyPond y explica cómo producir música impresa.  Después de este
primer contacto, explicaremos cómo crear música impresa de forma
bella, que contenga notación musical usual.


@menu
* First steps::                 
* Single staff notation::       
* Multiple notes at once::      
* Songs::                       
* Final touches::               
@end menu


@node First steps
@section First steps

Esta sección le ofrece una introducción básica al trabajo con LilyPond.

@menu
* Compiling a file::            
* Simple notation::             
* Working on text files::       
* How to read the manual::    
@end menu


@node Compiling a file
@subsection Compiling a file

@qq{Compilación} es una palabra que significa procesar un texto de
entrada eb formato de LilyPond para producir un archivo que se puede
imprimir y (de manera opcional) un archivo MIDI que se puede
reproducir.  El primer ejemplo muestra el aspecto de un sencillo
archivo de texto de entrada.

Para crear una partitura, escribimos un archivo de texto que detalla
la notación deseada.  Por ejemplo, si escribimos

@example
@{
  c' e' g' e'
@}
@end example

@noindent
el resultado tiene este aspecto

@c  in this case we don't want verbatim
@lilypond[quote,ragged-right]
{
  c' e' g' e'
}
@end lilypond

@warning{La música y la letra escrita en el código de entrada de
LilyPond tiene que ir siempre entre @strong{@{ llaves @}}.  Las llaves
deberían también estar rodeadas por espacios a no ser que se
encuentren al principio o al final de una línea, para evitar
ambigüedades.  Es posible que se omitan en algunos ejemplos del
presente manual ¡pero no las omita en su propia música!  Paara ver más
información sobre la presentación de los ejemplos del manual, consulte
@ref{How to read the manual}.}


@cindex Sensible a las mayúsculas
Además la entrada de LilyPond es @strong{sensible a las mayúsculas}.  @code{ @{ c d e @}}
es una entrada válida; @code{@{ C D E @}} producirá un mensaje de error.

@smallspace

@subheading Entering music and viewing output

@cindex PDF, archivo
@cindex ver la música

En esta sección vamos a explicar qué órdenes hay que ejecutar y cómo,
para ver o imprimir el resultado.

Tenga en cuenta que están disponibles varios otros editores de texto
con un mejor apoyo a la edición de texto de LilyPond.  Para ver más
información, consulte @rprogram{Text editor support}.

@warning{La primera vez que ejecute LilyPond, tardará un minuto o dos
porque todas las tipografías del sistema han de ser analizadas
previamente.  ¡Después de esto, LilyPond será mucho más rápido!}

@subsubheading MacOS X

Si hace doble clic sobre @code{LilyPond.app}, se abrirá con un archivo
de ejemplo.  Guárdelo, por ejemplo, como @file{prueba.ly} en el
Escritorio, y a continuación procéselo con la orden de menú
@samp{Compilar > Componer archivo}.  El PDF resultante se mostrará en
la pantalla.


Para posteriores usos de LilyPond, debería comenzar eligiendo
@q{Nuevo} o @q{Abrir}.  Tiene que grabar el archivo antes de
componerlo tipográficamente.  Si se produce algún error durante el
proceso, observe la ventana del registro.


@subsubheading Windows

En Windows, si hace doble clic sobre el icono de LilyPond que está en
el escritorio, se abrirá un sencillo editor de texto con un archivo de
ejemplo.  Guárdelo, por ejemplo, con el nombre @file{prueba.ly} en el
escritorio y después haga doble clic sobre el icono del archivo para
procesarlo (el icono tiene la forma de una corchea).  Transcurridos
unos segundos, obtendrá un archivo @file{prueba.pdf} en el
escritorio. Haga doble clic sobre este archivo PDF para ver la
partitura compuesta tipográficamente.  Un método alternativo para
procesar el archivo @file{prueba.ly} es arrastrarlo y soltarlo sobre
el icono de LilyPond utilizando el ratón.

Para editar un archivo @file{.ly} existente, haga clic sobre él con el
botón derecho del ratón y elija @qq{Editar la fuente}.  Para empezar
con un archivo vacío, arranque el editor como se describe más arriba y
elija @qq{Nuevo} del menú @qq{Archivo}, o haga clic con el botón
derecho sobre el escritorio y elija @qq{Nuevo..Documento de texto},
cámbiele el nombre por otro de su elección y cambie la extensión del
archivo a @code{.ly}.  Edítelo y luego haga doble click sobre él para
procesarlo como se explicó antes.

Al hacer doble clic sobre el archivo no sólo se obtiene como resultado
un archivo PDF, sino también un archivo @file{.log} que contiene
cierta información acerca de lo que LilyPond ha hecho con el
archivo. Si se produce algún error, examine este archivo de registro.


@subsubheading Unix

Cree un archivo de texto con el nombre @file{prueba.ly} y escriba en él:

@example
@{
  c' e' g' e'
@}
@end example

Para procesar el archivo @file{prueba.ly} haga lo siguiente:

@example
lilypond prueba.ly
@end example

@noindent
Verá algo parecido a:

@example
lilypond prueba.ly
GNU LilyPond 2.12.0
Procesando `prueba.ly'
Analizando...
Interpretando la música...
Preprocesando los objetos gráficos...
Buscando el número de páginas ideal...
Disponiendo la música en 1 página...
Dibujando los sistemas...
Escribiendo la página de salida en `prueba.ps'...
Convirtiendo a `prueba.pdf'...
@end example


@node Simple notation
@subsection Simple notation

LilyPond añadirá ciertos elementos de notación de manera automática.
En el siguiente ejemplo hemos especificado solamente cuatro alturas,
pero LilyPond ha añadido la clave, el compás y las duraciones.

@lilypond[verbatim,quote,ragged-right]
{
  c' e' g' e'
}
@end lilypond

@noindent
Este comportamiento se puede modificar, pero en general estos valores
automáticos son adecuados.


@subheading Pitches

Glosario musical: @rglos{pitch}, @rglos{interval},
@rglos{scale}, @rglos{middle C}, @rglos{octave},
@rglos{accidental}.

La manera más sencilla de introducir las notas es mediante la
utilización del modo @code{\relative} (relativo).  En este modo, se
elige la octava automáticamente bajo la suposición de que la siguiente
nota se colocará siempre lo más cerca de la nota actual, es decir, se
colocará en la octava comprendida dentro de hasta tres espacios de
pentagrama a partir de la nota anterior.  Comenzaremos por introducir
el fragmento musical más elemental: una @notation{escala}, donde cada
nota está comprendida dentro de tan sólo un espacio de pentagrama
desde la nota anterior.

@lilypond[verbatim,quote,ragged-right]
\relative c' {  % set the starting point to middle C
  c d e f
  g a b c
}
@end lilypond

La nota inicial es @rglos{middle C}.  Cada nota sucesiva se coloca lo
más cerca posible de la nota previa (en otras palabras: la primera
@samp{c} es el Do más cercano al Do central; a éste le sigue el Re más
cercano a la nota previa, y así sucesivamente).  Podemos crear
melodías con intervalos mayores, aún sin dejar de utilizar el modo
relativo:

@lilypond[verbatim,quote,ragged-right]
\relative c' {
  d f a g
  c b f d
}
@end lilypond

No es necesario que la primera nota de la melodía comience exactamente
en aquella que especifica la altura de inicio.  En el ejemplo
anterior, la primera nota (@code{d}) es el Re más cercano al Do
central.

Añadiendo (o eliminando) comillas simples @code{'} o comas @code{,} de
la instrucción @code{\relative c' @{}, podemos cambiar la octava de
inicio:

@lilypond[verbatim,quote,ragged-right]
\relative c'' {  % one octave above middle C
  e c a c
}
@end lilypond

Al principio, el modo relativo puede resultar algo confuso, pero es la
forma más sencilla de introducir la mayor parte de las melodías.
Veamos cómo funciona en la práctica este cálculo relativo.  Comenzando
por Si, que está situado en la línea central en clave de Sol, podemos
alcanzar Do, Re y Mi dentro de los tres espacios de pentagrama hacia
arriba, y La, Sol y Fa dentro de los tres espacios hacia abajo.  Por
tanto, si la nota siguiente a Si es Do, Re o Mi se supondrá que está
por encima del Si, mientras que La, Sol o Fa se entenderán situados
por debajo.

@lilypond[verbatim,quote,ragged-right]
\relative c'' {
  b c  % c is 1 staff space up, so is the c above
  b d  % d is 2 up or 5 down, so is the d above
  b e  % e is 3 up or 4 down, so is the e above
  b a  % a is 6 up or 1 down, so is the a below
  b g  % g is 5 up or 2 down, so is the g below
  b f  % f is 4 up or 3 down, so is the f below
}
@end lilypond

Loo mismo exactamente ocurre cuando cualquiera de esas notas llevan un
sostenido o un bemol.  Las @notation{Alteraciones accidentales} se
@strong{ignoran totalmente} en el cálculo de la posición relativa.
Exactamente la misma cuenta de espacios de pentagrama se hace a partir
de una nota situada en cualquier otro lugar del mismo.

Para añadir intervalos mayores de tres espacios de pentagrama, podemos
elevar la @notation{octava} añadiendo una comilla simple @code{'} (o
apóstrofe) a continuación del nombre de la nota.  También podemos
bajar la octava escribiendo una coma @code{,} a continuación del
nombre de la nota.

@lilypond[verbatim,quote,ragged-right]
\relative c'' {
  a a, c' f,
  g g'' a,, f'
}
@end lilypond


@noindent
Para subir o bajar una nota en dos (¡o más!) octavas, utilizamos
varias @code{''} ó @code{,,} (pero tenga cuidado de utilizar dos
comillas simples @code{''} ¡y no una comilla doble @code{"}@tie{}!)
El valor inicial de @code{\relative c'} también puede modificarse de
esta forma.

@subheading Durations (rhythms)

Glosario musical: @rglos{beam}, @rglos{duration}, @rglos{whole note},
@rglos{half note}, @rglos{quarter note}, @rglos{dotted note}.

La @notation{duración} de una nota se especifica mediante un número
después del nombre de la nota.  @code{1} significa @rglos{redonda},
@code{2} significa @rglos{blanca}, @code{4} significa @rglos{negra} y
así sucesivamente.  Las @notation{barras de corchea} se añaden
automáticamente.

Si no especifica una duración, se utiliza la duración previa para la
nota siguiente.  La figura por omisión de la primera nota es una
negra.

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  a1
  a2 a4 a8 a
  a16 a a a a32 a a a a64 a a a a a a a a2
}
@end lilypond

Para crear notas con puntillo (véase @rglos{dotted note}), añada un
punto @samp{.} al número de la duración.  La duración de una nota con
puntillo se debe especificar de forma explícita (es decir: mediante un
número).

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  a a a4. a8
  a8. a16 a a8. a8 a4.
}
@end lilypond


@subheading Rests

Glosario musical: @rglos{rest}.

Un @notation{rest} se introduce igual que si fuera una nota con el
nombre @code{r}:

@lilypond[verbatim,quote,ragged-right]
\relative c'' {
  a r r2
  r8 a r4 r4. r8
}
@end lilypond


@subheading Time signature

Glosario musical: @rglos{time signature}.

La @notation{indicación de compás} se puede establecer con la orden
@code{\time} :

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  \time 3/4
  a4 a a
  \time 6/8
  a4. a
  \time 4/4
  a4 a a a
}
@end lilypond


@subheading Clef

Glosario musical: @rglos{clef}.

La @notation{clave} se puede establecer utilizando la orden
@code{\clef} :

@lilypond[quote,ragged-right,verbatim]
\relative c' {
  \clef treble
  c1
  \clef alto
  c1
  \clef tenor
  c1
  \clef bass
  c1
}
@end lilypond


@subheading All together

He aquí un pequeño ejemplo que muestra todos los elementos anteriores
juntos:

@lilypond[quote,ragged-right,verbatim]
\relative c, {
  \time 3/4
  \clef bass
  c2 e8 c' g'2.
  f4 e d c4 c, r4
}
@end lilypond


@seealso
Referencia de la notación: @ruser{Writing pitches},
@ruser{Writing rhythms}, @ruser{Writing rests},
@ruser{Time signature}, @ruser{Clef}.


@node Working on text files
@subsection Working on text files

Los archivos de entrada de LilyPond son como los archivos fuente de
muchos lenguajes de programación corrientes.  Son sensibles a las
mayúsculas e insensibles al número de espacios Las expresiones se
forman con llaves @{ @} y los comentarios se denotan por un signo de
porcentaje (@code{%}) o por @code{%@{ ... %@}}.

Si la frase anterior no tiene sentido para usted ¡no se preocupe! A
continuación explicaremos el significado de todos estos términos:

@itemize

@cindex Sensible a las mayúsculas
@item @strong{Sensible a las mayúsculas}:
tiene importancia el hecho de que introduzca una letra en minúsculas
(p.ej. @code{a, b, s, t}) o en mayúsculas (p.ej.  @code{A, B, S, T}).
Las notas son minúsculas: @code{@{ c d e @}} es una entrada válida;
@code{@{ C D E @}} produciría un mensaje de error.

@item @strong{Insensible al número de espacios}:
no importa cuántos espacios (o saltos de línea) añada.  @code{@{ c d e
@}} significa lo mismo que @code{@{ c @tie{} @tie{} @tie{} d e @}} y
que

@example
@{ c                        d
                   e   @}
@end example

@noindent
Por supuesto, el ejemplo anterior es difícil de leer.  Una regla
práctica es sangrar los bloques de código con un carácter de
tabulación, o bien con dos espacios:

@example
@{
  c d e
@}
@end example

@item
@strong{Expresiones:}
Todo fragmento de código de entrada para LilyPond ha de llevar
@strong{@{ llaves @}} antes y después de la entrada.  Estas llaves le dicen a
LilyPond que la entrada es una expresión musical unitaria, igual que
los paréntesis @samp{()} de las matemáticas.  Las llaves deben ir rodeadas
de un espacio a no ser que se encuentren al comienzo o al final de una
línea, para evitar cualquier ambigüedad.

Una instrucción de LilyPond seguida de una expresión simple entre
llaves (como por ejemplo @code{\relative @{ @}}) también es una
expresión musical unitaria.

@cindex comentarios
@cindex comentario de línea
@cindex comentario de bloque
@item
@strong{Comentarios}:
Un comentario es una nota para el lector humano de la entrada musical;
se ignora cuando esta entrada se analiza, de manera que no tiene
ningún efecto sobre la salida impresa.  Existen dos tipos de
comentarios.  El símbolo de porcentaje @samp{%} introduce un
comentario de línea; todo lo que se encuentra después de @samp{%} en
esa línea se ignora.  Por convenio, una línea de comentario se coloca
@emph{por encima} del código a que se refiere el comentario.

@example
a4 a a a
% este comentario se refiere a las notas Si
b2 b
@end example

Un comentario de bloque marca una sección entera de entrada musical
como comentario.  Todo lo que está encerrado dentro de @code{%@{} y
@code{%@}} se ignora (pero los comentarios no pueden anidarse, lo que
signnifica que un comentario de bloque no puede incluir otros
comentarios de bloque).  Si lo hiciera, el primer @code{%@}} daría por
terminado @emph{los dos} comentarios de bloque.  El siguiente
fragmento muestra algunos posibles usos para los comentarios:

@example
% a continuación van las notas de campanitas del lugar
  c4 c g' g a a g2

%@{
    Esta línea y las notas que aparecen más abajo
    se ignoran, por estar dentro de un
    comentario de bloque.

    g g f f e e d d c2
%@}
@end example

@end itemize


@node How to read the manual
@subsection How to read the manual

Como vimos en @ref{Working on text files}, la entrada de LilyPond debe
estar rodeada de llaves @{ @} o de @code{\relative c'' @{ ... @}}.
Durante el resto del presente manual, la mayor parte de los ejemplos
omitirán las llaves.  Para reproducir los ejemplos, deberá copiar y
pegar la entrada que se muestra, pero @strong{deberá} escribir
@code{\relative c'' @{ @}}, de la siguiente forma:

Si está leyendo la documentación HTML y quiere ver el código de LilyPond exacto
que se utilizó para crear el ejemplo, sencillamente haga clic
sobre la imagen.  Si no está leyendo la versión en HTML, podría
copiar y pegar la entrada que se muestra, pero @strong{deberá} añadir
@code{\relative c'' @{ @}} de la siguiente manera:

@example
\relative c'' @{
  ... aquí va el ejemplo...
@}
@end example

¿Por qué omitir las llaves? Casi todos los ejemplos del presente
manual se pueden insertar en medio de un fragmento mayor de música.
Para estos ejemplos no tiene ningún sentido añadir @code{\relative c''
@{ @}} (¡no debería poner un @code{\relative} dentro de otro
@code{\relative}!); si hubiésemos incluido @code{\relative c'' @{ @}}
rodeando a cada uno de los ejemplos, usted no podría copiar un ejemplo
pequeño procedente de la documentación y pegarlo dentro de su propia
pieza.  La mayoría querrá insertar el código dentro de una pieza más
grande, por eso hemos formateado el manual de esta forma.



@subheading Clickable examples

Muchas personas aprenden a utilizar programas probando y enredando con ellos.
Esto también puede hacerse con LilyPond.  Si hace clic sobre una imagen
en la versión en HTML de este manual, podrá ver la entrada exacta de LilyPond
que se utilizó para generar esa imagen.
Pruébelo sobre esta imagen:

@c no verbatim here
@lilypond[quote,ragged-right]
\relative c'' {
  c-\markup { \bold \huge { Click here.  } }
}
@end lilypond

Cortando y pegando todo lo que se encuentra dentro de la sección
@qq{ly snippet} (fragmento de tipo ly), tendrá una plantilla inicial
para sus experimentos. Para poder ver exactamente el mismo resultado
(con igual anchura de línea y todo), copie todo lo que está desde
@qq{Start cut-&-pastable section} hasta el final del archivo.

@seealso


Podrá encontrar más consejos y trucos para la construcción de archivos
de entrada en @ref{Suggestions for writing LilyPond files}; pero
podría ser mejor leer primero el resto del presente manual.


@node Single staff notation
@section Single staff notation

Esta sección es una introducción a la notación corriente que se utiliza para una voz
o un pentagrama.

@menu
* Relative note names::         
* Accidentals and key signatures::  
* Ties and slurs::              
* Articulation and dynamics::   
* Automatic and manual beams::  
* Advanced rhythmic commands::  
@end menu


@node Relative note names
@subsection Relative note names

Como hemos visto en @ruser{Simple notation}, LilyPond calcula la altura de
cada nota de forma relativa respecto de la nota anterior@footnote{Existe otra forma de
introducir las alturas, @ruser{Absolute note names}, pero en la práctica el modo
relativo es mucho más cómodo y seguro de utilizar.}.  Si no se añade ninguna marca de octava
(@code{'} y @code{,}), se supone que cada altura se encuentra dentro de una
cuarta desde la nota anterior.

LilyPond examina las alturas basándose en los nombres de las notas (dicho de otra forma:
una cuarta aumentada @emph{no} es lo mismo que una quinta disminuida.  Si
empezamos en un Do, un Fa sostenido situado a continuación se colocará por encima del Do, mientras que
un Sol bemol se colocará por debajo de este mismo Do.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c2 fis
c2 ges
@end lilypond

@seealso
@quotation
@table @asis
@item Octavas relativas
ver @ruser{Relative octaves}.
@item Comprobación de octava
ver @ruser{Octave check}.
@end table
@end quotation



@node Accidentals and key signatures
@subsection Accidentals and key signatures

@subheading Accidentals

Una nota @rglos{sharp} se hace añadiendo @samp{is} al
nombre, y una nota @rglos{flat} añadiendo @samp{es}.  Como
ha podido adivinar, un @rglos{double sharp} o @rglos{double flat} se hace
añadiendo @samp{isis} o @samp{eses}@footnote{Esta sintaxis
derivó de las convenciones de las lenguas nórdicas y germánicas para nombrar las notas
como el alemán y el holandés.  Para utilizar otros nombres para las alteraciones accidentales, vea
@ruser{Note names in other languages}.}

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
cis1 ees fisis, aeses
@end lilypond

@cindex tonalidad, armadura de la, establecer
@subheading Key signatures

La armadura de la tonalidad se establece mediante la instrucción @code{\key} seguido de
una nota y @code{\major} o @code{\minor}.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
\key d \major
a1
\key c \minor
a
@end lilypond

@sp 1

@subheading Warning: key signatures and pitches

Para determinar si hay que imprimir una alteración accidental, LilyPond examina las
notas y la armadura de la tonalidad.  La armadura solamente afecta a las
alteraciones @emph{impresas}, ¡no a las propias notas!  Ésta es una
funcionalidad que frecuentemente confunde a los que se inician con el programa, por ello permítanos explicarla
en detalle.

LilyPond hace una clara distinción entre el contenido musical y la
presentación.  La alteración (bemol, becuadro o sostenido) de una nota es parte de
la altura, y por tanto es contenido musical.  Si una alteración (un
signo @emph{impreso} de bemol, becuadro o sostenido) se imprime o no delante de la
nota correspondiente, es una cuestión de presentación.  La presentación es algo que
sigue unas reglas, así que las alteraciones accidentales se imprimen automáticamente según
dichas reglas.  Las alturas de las notas en su música son obras de arte, por tanto no se
añadirán automáticamente, y usted deberá introducir aquello que quiera oír.

En el siguiente ejemplo

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
\key d \major
d cis fis
@end lilypond

@noindent
ninguna nota lleva una alteración impresa, pero de todas formas usted debe añadir la @samp{is} a
@code{cis} y a @code{fis}.

El texto @samp{e} no significa @qq{imprimir una bolita negra en la
primera línea del pentagrama.}  Más bien significa: @qq{hay una nota
Mi natural.}  En la tonalidad de La bemol mayor, @emph{lleva} una
alteración accidental:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
\key aes \major
e
@end lilypond

Poner todas las alteraciones de forma explícita puede que requiera algo más de trabajo
al teclear, pero la ventaja es que la transposición es más fácil, y las
alteraciones se pueden imprimir siguiendo varias convenciones distintas.  Consulte
@ruser{Automatic accidentals} para ver ejemplos de cómo se pueden imprimir las alteraciones
de acuerdo a reglas diferentes.

@seealso
@quotation
@table @asis
@item Alteraciones accidentales
ver @ruser{Accidentals} y @ruser{Automatic accidentals}.
@item Armadura de la tonalidad
ver @ruser{Key signature}.
@end table
@end quotation


@node Ties and slurs
@subsection Ties and slurs

@cindex ligaduras de unión
@subheading Ties
Una @rglos{tie} se crea adjuntando un carácter tilde @samp{~} a la primera
nota ligada

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
g4~ g c2~
c4 ~ c8 a8 ~ a2
@end lilypond

@cindex ligaduras de expresión
@subheading Slurs

Una @rglos{slur} es una curva que se traza abarcando varias notas.  Las notas inicial
y final se marcan mediante @samp{(} y @samp{)} respectivamente.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
d4( c16) cis( d e c cis d) e( d4)
@end lilypond

@cindex fraseo, ligaduras de
@cindex ligaduras de fraseo
@subheading Phrasing slurs

Las ligaduras que se utilizan para indicar fraseos más largos se pueden introducir mediante @code{\(} y
@code{\)}.  Puede haber al mismo tiempo ligaduras de legato y ligaduras de fraseo,
pero no es posible tener legatos simultáneos o ligaduras de expresión
simultáneas.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
a8(\( ais b c) cis2 b'2 a4 cis,\)
@end lilypond

@sp 1

@cindex ligaduras de expresión frente a ligaduras de unión
@subheading Warnings: slurs vs. ties

Una ligadura de expresión parece una @rglos{tie}, pero tiene un significado distinto.  Una
ligadura (de unión) sencillamente hace que la primera nota sea más larga, y sólo se puede utilizar sobre
parejas de notas iguales.  Las ligaduras de expresión indican las articulaciones
de las notas, y se pueden utilizar sobre grupos mayores de notas.  Las ligaduras de unión y de expresión
se pueden anidar unas dentro de otras.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c2~( c8 fis fis4 ~ fis2 g2)
@end lilypond

@seealso
@quotation
@table @asis
@item Ligaduras de unión
ver @ruser{Ties}.
@item Ligaduras de expresión
ver @ruser{Slurs}.
@item Ligaduras de fraseo
ver @ruser{Phrasing slurs}.
@end table
@end quotation


@node Articulation and dynamics
@subsection Articulation and dynamics

@cindex articulación
@cindex acentos
@cindex staccato
@subheading Articulations

Las articulaciones (véase @rglos{articulation}) más corrientes se pueden añadir a las notas utilizando un guión @samp{-}
seguido de un carácter único:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c-. c-- c-> c-^ c-+ c-_
@end lilypond

@cindex digitaciones
@subheading Fingerings
De manera similar, las indicaciones de digitación se pueden añadir a una nota utilizando un guión 
(@samp{-}) seguido del dígito deseado:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c-3 e-5 b-2 a-1
@end lilypond

Las articulaciones y digitaciones normalmente se colocan de forma automática, pero puede
especificar una dirección mediante @samp{^} (encima) o @samp{_} (debajo).  También
puede usar varias articulaciones sobre la misma nota.  Sin embargo, casi siempre
es mejor dejar que LilyPond determine la dirección de las articulaciones.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c_-^1 d^. f^4_2-> e^-_+
@end lilypond

@subheading Dynamics
Las expresiones de matiz o signos dinámicos se hacen añadiendo las marcas (con una barra invertida) a la
nota:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c\ff c\mf c\p c\pp
@end lilypond

@cindex expresiones dinámicas
@cindex decrescendo
@cindex crescendo

Los crescendi y decrescendi comienzan con las órdenes @code{\<} y
@code{\>}.  Una expresión terminal de matiz, como por ejemplo @code{\f}, dará por terminado el
(de)crescendo, o bien se puede usar la orden @code{\!}:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c2\< c2\ff\> c2 c2\!
@end lilypond

@seealso
@quotation
@table @asis
@item Articulaciones
ver @ruser{Articulations}.
@item Digitaciones
ver @ruser{Fingering instructions}.
@item Matices
ver @ruser{Dynamics}.
@end table
@end quotation


@node Automatic and manual beams
@subsection Automatic and manual beams

@cindex barras, establecimiento manual
Todas las @rglos{beam}s se dibujan automáticamente:
@c aquí hay un problema con el plural. FVD
@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
a8 ais d ees r d c16 b a8
@end lilypond

@noindent
Si no le gustan las barras automáticas, pueden forzarse
manualmente.  Marque la primera nota que comprende la barra con @samp{[} y la última
con @samp{]}.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
a8[ ais] d[ ees r d] a b
@end lilypond

@seealso
@quotation
@table @asis
@item Barras automáticas
ver @ruser{Automatic beams}.
@item Barras manuales
ver @ruser{Manual beams}.
@end table
@end quotation


@node Advanced rhythmic commands
@subsection Advanced rhythmic commands

@cindex anacrusa
@c @cindex anacruse @c redundant, in spanish. FVD
@cindex compás parcial
@subheading Partial measure

Una anacrusa (o @rglos{anacrusis}) se introduce con la palabra clave
@code{\partial}.  Va seguida de una duración: @code{\partial 4} es
una anacrusa de negra y @code{\partial 8} de corchea.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
\partial 8
f8 c2 d
@end lilypond

@cindex grupos especiales
@cindex tresillos
@subheading Tuplets

Los grupos especiales como los tresillos se hacen con la palabra clave @code{\times}.  Requiere dos
argumentos: una fracción y un fragmento de música.  La duración del fragmento
de música se multiplica por la fracción.  Los tresillos hacen que las notas ocupen
2/3 de su duración expresa, por tanto un tresillo lleva una fracción de 2/3

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
\times 2/3 { f8 g a }
\times 2/3 { c r c }
\times 2/3 { f,8 g16[ a g a] }
\times 2/3 { d4 a8 }
@end lilypond

@cindex notas de adorno
@cindex acciaccatura
@cindex appoggiatura
@subheading Grace notes

Las notas de adorno se crean con la instrucción @code{\grace}, aunque
también se pueden conseguir precediendo una expresión musical por la
palabra clave @code{\appoggiatura} o @code{\acciaccatura}

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
c2 \grace { a32[ b] } c2
c2 \appoggiatura b16 c2
c2 \acciaccatura b16 c2
@end lilypond

@seealso
@quotation
@table @asis
@item Notas de adorno
ver @ruser{Grace notes},
@item Grupos especiales
ver @ruser{Tuplets},
@item Anacrusas
ver @ruser{Partial measures}.
@end table
@end quotation


@node Multiple notes at once
@section Multiple notes at once

Esta sección es una introducción a las notas simultáneas:
varios instrumentos, varios pentagramas para un solo instrumento (p.ej. piano)
y acordes.

La palabra @q{polifonía} en música hace referencia al hecho de tener más de una voz en un momento determinado
dentro de una pieza musical.  La palabra @q{polifonía} en LilyPond se refiere al hecho de tener más de
una voz en el mismo pentagrama.

@menu
* Music expressions explained::  
* Multiple staves::             
* Piano staves::                
* Combining notes into chords::  
* Single staff polyphony::      
@end menu


@node Music expressions explained
@subsection Music expressions explained

En los archivos de entrada de LilyPond, la música se representa mediante @emph{expresiones
musicales}.  Una sola nota es una expresión musical, aunque no es una
entrada válida por sí sola.

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
a4
@end lilypond

Al encerrar un grupo de notas dentro de llaves creamos una expresión musical:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
{ a4 g4 }
@end lilypond

Si colocamos un grupo de expresiones musicales (p.ej.: notas) dentro de llaves, eso significa que
se encuentran en secuencia (es decir, cada una sigue a la anterior).  El resultado
es otra expresión musical:

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
{ { a4 g } f g }
@end lilypond

@subheading Simultaneous music expressions: multiple staves

Esta técnica es muy útil para la música polifónica.  Para introducir música
con más voces o con más pentagramas, lo que hacemos es combinar varias expresiones en
paralelo.  Para indicar que dos voces se deben interpretar al mismo tiempo,
sencillamente introduzca una combinación simultánea de expresiones musicales.  Una
expresión musical @q{simultánea} se forma encerrando las expresiones dentro de
@code{<<} y @code{>>}.  En el ejemplo que sigue, tres secuencias (cada una de las cuales
contiene dos notas diferentes) se combinan de forma simultánea:

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  <<
    { a4 g }
    { f e }
    { d b }
  >>
}
@end lilypond

Tenga en cuenta que hemos sangrado cada nivel jerárquico de la entrada con un margen
distinto.  A LilyPond no le importa cuánto (o cuán poco) espacio haya
al comienzo de una línea, pero el establecimiento de márgenes distintos dentro del código de LilyPond, de esta forma, lo
hace mucho más fácil de leer por nosotros los seres humanos.

@strong{Advertencia}: cada nota se entiende relativa a la
nota anterior de la entrada, no relativa a la @code{c''} dentro de la
instrucción inicial @code{\relative}.


@subheading Simultaneous music expressions: single staff

Para determinar el número de pentagramas en una pieza, LilyPond examina la primera
expresión.  Si ésta consiste en una sola nota, hay un solo pentagrama; si hay una
expresión simultánea, hay más de un pentagrama.

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  c2 <<c e>>
  << { e f } { c <<b d>> } >>
}
@end lilypond

@cindex expresión
@cindex expresión musical
@subheading Analogy: mathematical expressions

Este mecanismo es semejante a las fórmulas
matemáticas: una fórmula grande se construye combinando fórmulas pequeñas.  Dichas
fórmulas se llaman expresiones, y su definición es recursiva de tal forma que
se pueden construir expresiones de un tamaño y complejidad arbitrarios.  Por ejemplo:

@example
1

1 + 2

(1 + 2) * 3

((1 + 2) * 3) / (4 * 5)
@end example

Ésta es una secuencia de expresiones donde cada expresión se encuentra contenida dentro
de la siguiente, más grande.  Las expresiones más simples son números, y las mayores
se hacen combinando expresiones mediante operadores (como @samp{+},
@samp{*} y @samp{/}) y paréntesis.  Del mismo modo que las expresiones matemáticas,
las expresiones musicales se pueden anidar a una profundidad arbitraria, lo que se hace necesario
para músicas complejas como las partituras polifónicas.


@node Multiple staves
@subsection Multiple staves

Como ya hemos visto en @ruser{Music expressions explained}, los archivos de entrada para LilyPond
se construyen a base de expresiones musicales.  Si la partitura comienza con
expresiones musicales simultáneas, LilyPond crea varios pentagramas.  Sin embargo
es más fácil ver lo que ocurre si creamos cada uno de los pentagramas de forma explícita.

Para imprimir más de un pentagrama, cada fragmento de música que constituye un
pentagrama se marca escribiendo @code{\new Staff} antes de él.  Estos
elementos @code{Staff} se combinan después en paralelo con @code{<<} y
@code{>>}:

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  <<
    \new Staff { \clef treble c }
    \new Staff { \clef bass c,, }
  >>
}
@end lilypond

La instrucción @code{\new} inaugura un @q{contexto de notación}.  Un contexto de
notación es un entorno dentro del que se interpretan los acontecimientos musicales (como las notas o las
instrucciones @code{\clef}).  Para piezas sencillas, tales
contextos de notación se crean automáticamente.  Para piezas más complicadas, es mejor
marcar los contextos de forma explícita.

Existen varias clases de contextos.  @code{Score}, @code{Staff}
y @code{Voice} manejan la notación melódica, mientras que @code{Lyrics} se ocupa de los textos
cantados y @code{ChordNames} imprime los nombres de los acordes.

En términos de sintaxis, la anteposición de @code{\new} a una expresión musical
crea una expresión musical mayor.  Es semejante al signo
menos de las matemáticas.  La fórmula @math{(4+5)} es una expresión, por tanto
@math{-(4+5)} es una expresión más amplia.

Las indicaciones de compás escritas en un pentagrama afectan al
resto de ellos@footnote{Este comportamiento se puede cambiar si uno lo desea; consulte
@ruser{Polymetric notation} para ver más detalles.}. En cambio,
la armadura de la tonalidad de un pentagrama @emph{no} afecta a los otros
pentagramas.

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  <<
    \new Staff { \clef treble \time 3/4 c }
    \new Staff { \clef bass \key d \major c,, }
  >>
}
@end lilypond




@node Piano staves
@subsection Piano staves

@cindex salto de pentagrama, establecimiento manual
@cindex voz de pentagrama cruzado, establecimiento manual
La música para piano se compone tipográficamente en forma de dos pentagramas unidos mediante una llave. El aspecto impreso de
este sistema de pentagramas se parece al ejemplo polifónico que aparece en @ruser{Multiple staves},
pero en esta ocasión la expresión completa se coloca dentro de un @code{PianoStaff}:

@example
\new PianoStaff <<
  \new Staff @dots{}
  \new Staff @dots{}
>>
@end example

He aquí un pequeño ejemplo:

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  \new PianoStaff <<
    \new Staff { \time 2/4 c4 e g g, }
    \new Staff { \clef bass c,, c' e c }
  >>
}
@end lilypond

@seealso
@quotation
Ver @ruser{Piano music}.
@end quotation

@node Combining notes into chords
@subsection Combining notes into chords

@cindex acordes
Los acordes se hacen rodeando las notas con paréntesis en ángulo simples. Los paréntesis
en ángulo son los símbolos @samp{<} (menor que) y @samp{>} (mayor que).

@lilypond[quote,fragment,verbatim,relative=2,fragment]
r4 <c e g>4 <c f a>2
@end lilypond

Se pueden combinar las marcas como barras y ligaduras con acordes.  Se deben
colocar por fuera de los paréntesis en ángulo:

@lilypond[quote,fragment,verbatim,relative=2,fragment]
r4 <c e g>8[ <c f a>]~ <c f a>2
@end lilypond

@lilypond[quote,fragment,verbatim,relative=2,fragment]
r4 <c e g>8\>( <c e g> <c e g>4 <c f a>\!)
@end lilypond

@node Single staff polyphony
@subsection Single staff polyphony

@cindex polifonía
@cindex varias voces
@cindex voces, más (en un solo pentagrama)
Cuando distintas líneas melódicas se combinan sobre un solo pentagrama, se
imprimen como voces polifónicas; cada voz lleva sus propias plicas, ligaduras y
barras de corchea, y la voz superior tiene las plicas hacia arriba mientras que la voz inferior las
tiene hacia abajo.

La introducción de estas partes se hace escribiendo cada voz en forma de secuencia (con
@code{@{...@}}) y combinando éstas de forma simultánea, separando las
voces con @code{\\}

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
<<
  { a4 g2 f4~ f4 } \\
  { r4 g4 f2 f4 }
>>
@end lilypond

Para el tipografiado de música polifónica, puede ser conveniente la utilización de silencios separadores, o sea,
silencios que no aparecen impresos.  Son muy útiles para rellenar
voces que temporalmente no están cantando.  He aquí el mismo ejemplo con un
silencio separador (@samp{s}) en vez de un silencio normal (@samp{r}):

@lilypond[quote,ragged-right,verbatim,fragment,relative=2]
<<
  { a4 g2 f4~ f4 } \\
  { s4 g4 f2 f4 }
>>
@end lilypond

@noindent
Una vez más, las expresiones de este tipo se pueden anidar de forma arbitraria.

@lilypond[quote,fragment,verbatim,relative=2,fragment]
<<
  \new Staff <<
    { a4 g2 f4~ f4 } \\
    { s4 g4 f2 f4 }
  >>
  \new Staff <<
    \clef bass
    { <c g>1 ~ <c g>4 } \\
    { e,,4 d e2 ~ e4}
  >>
>>
@end lilypond

@seealso
@quotation
Ver @ruser{Basic polyphony}.
@end quotation


@node Songs
@section Songs

Esta sección es una introducción a la música vocal y a las partituras de canciones sencillas.

@menu
* Printing lyrics::             
* A lead sheet::                
@end menu


@node Printing lyrics
@subsection Printing lyrics

@cindex Letra
@cindex Canciones
Consideremos una melodía sencilla:

@lilypond[quote,ragged-right,verbatim]
\relative c'' {
  a4 e c8 e r4
  b2 c4( d)
}
@end lilypond

La letra se puede asignar a esas notas, combinando ambas con la
palabra clave @code{\addlyrics}.  La letra se escribe separando cada
sílaba mediante un espacio.

@lilypond[quote,ragged-right,verbatim]
<<
  \relative c'' {
    a4 e c8 e r4
    b2 c4( d)
  }
  \addlyrics { One day this shall be free }
>>
@end lilypond

@cindex melisma
@cindex línea de extensión de sílabas
Esta melodía acaba en un @rglos{melisma}, una sílaba única (@q{suelta})
que se canta sobre más de una nota.  Esto se indica mediante una @emph{línea
de extensión}.  Se escribe como dos guiones bajos @code{__}:

@lilypond[quote,ragged-right,verbatim]
<<
  \relative c'' {
    a4 e c8 e r4
    b2 c4( d)
  }
  \addlyrics { One day this shall be free __ }
>>
@end lilypond

De forma parecida, los guiones entre las palabras se pueden escribir como dos guiones,
dando como resultado unas líneas cortas entre cada dos sílabas:

@c aquí no se pone ragged-right porque los guiones se perderían.
@lilypond[quote,verbatim]
<<
  \relative c' {
    \time 2/4
    f4 f c c
  }
  \addlyrics { A -- le -- gri -- a }
>>
@end lilypond

@seealso
@quotation
Otras posibilidades como poner varios versos debajo de una melodía, se
discuten en @ruser{Vocal music}.
@end quotation


@node A lead sheet
@subsection A lead sheet

@cindex Hojas guía de acordes
@cindex acordes
@cindex nombres de los acordes

En la música pop es muy común denotar el acompañamiento con los nombres de los acordes.
Estos acordes se pueden escribir como notas:

@lilypond[quote,ragged-right,verbatim]
\chordmode { c2 f4. g8 }
@end lilypond

Ahora, cada altura se lee como la fundamental de un acorde en vez de como una nota.
Este modo se activa con @code{\chordmode}.  Otros acordes pueden
construirse añadiendo modificadores después de un signo de dos puntos.  El
ejemplo que sigue muestra algunos modificadores comunes:

@lilypond[quote,verbatim,ragged-right]
\chordmode { c2 f4:m g4:maj7 gis1:dim7 }
@end lilypond

Para canciones con acordes, éstos no se imprimen sobre pentagramas, sino como nombres en su
propia línea.  Esto se consigue utilizando @code{\chords} en sustitución
de @code{\chordmode}.  Utiliza la misma sintaxis que @code{\chordmode},
pero pinta las notas dentro de un contexto de @code{ChordNames}, con el
siguiente resultado:

@lilypond[quote,verbatim,ragged-right]
\chords { c2 f4.:m g4.:maj7 gis8:dim7 }
@end lilypond

@cindex hoja guía de acordes
Cuando se combinan, los nombres de acorde, la letra y la melodía forman
una hoja de canción con acordes (@q{lead sheet}):

@lilypond[quote,verbatim,ragged-right]
<<
  \chords { c2 g:sus4 f e }
  \relative c'' {
    a4 e c8 e r4
    b2 c4( d)
  }
  \addlyrics { One day this shall be free __ }
>>
@end lilypond


@seealso
@quotation
Puede ver una lista completa de los modificadores y otras opciones de presentación
en @ruser{Chords}.
@end quotation


@node Final touches
@section Final touches

Éste es el último apartado del tutorial; muestra la forma de dar los toques finales
a piezas sencillas, y ofrece una introducción al resto
del manual.

@menu
* Version number::              
* Adding titles::               
* Absolute note names::         
* Organizing pieces with identifiers::  
* After the tutorial::          
* How to read the manual::      
@end menu


@node Version number
@subsection Version number

@cindex indicación de la versión
La indicación @code{\version} deja registrado para qué versión de LilyPond se escribió
el archivo:  

@example
\version @w{"@version{}"}
@end example

@noindent
por convenio se sitúa al principio del archivo de partitura de LilyPond.

Estas anotaciones hacen menos problemáticas las subsiguientes actualizaciones de LilyPond.
Los cambios en la sintaxis se tratan mediante un programa especial,
@file{convert-ly} (ver @rprogram{Updating files with convert-ly}), y utiliza
@code{\version} para determinar qué reglas hay que aplicar.


@node Adding titles
@subsection Adding titles

La información sobre el título, autor, número de Opus y similares se escriben
en el bloque @code{\header}.  Éste se encuentra fuera de la expresión musical
principal; el bloque @code{\header} normalmente se sitúa por debajo del
@ruser{Version number}.

@example
\version @w{"@version{}"}
\header @{
  title = "Symphony"
  composer = "Me"
  opus = "Op. 9"
@}

@{
  @dots{} music @dots{}
@}
@end example

Cuando se procesa el archivo, el título y el autor se imprimen por encima
de la música.  Puede obtener más información sobre los títulos en @ruser{Creating
titles}.


@node Absolute note names
@subsection Absolute note names

Hasta el momento siempre hemos utilizado @code{\relative} para definir las alturas.  Ésta es la
forma más sencilla de escribir la mayor parte de la música, pero existe otra forma de definir
las alturas: el modo absoluto.

Si omite el @code{\relative}, LilyPond tratará todas las alturas como
valores absolutos.  Una @code{c'} significará siembre un Do central, una @code{b} significará
siempre la nota inmediatamente por debajo del Do central, y una @code{g,} significará
siempre la nota que se coloca en la primera línea del pentagrama en clave de Fa.

@lilypond[quote,verbatim,ragged-right]
{
  \clef bass
  c' b g, g,
  g, f, f c'
}
@end lilypond

He aquí una escala que abarca cuatro octavas:

@lilypond[quote,verbatim,ragged-right]
{
  \clef bass
  c, d, e, f,
  g, a, b, c
  d e f g
  a b c' d'
  \clef treble
  e' f' g' a'
  b' c'' d'' e''
  f'' g'' a'' b''
  c'''1
}
@end lilypond

Como puede ver, escribir una melodía en clave de Sol implica escribir gran cantidad de
apóstrofes ' .  Consideremos este fragmento de Mozart:

@lilypond[quote,verbatim,ragged-right]
{
  \key a \major
  \time 6/8
  cis''8. d''16 cis''8 e''4 e''8
  b'8. cis''16 b'8 d''4 d''8
}
@end lilypond

Todos estos apóstrofes hacen casi ilegible el código de entrada y será origen de numerosos
errores.  Con @code{\relative}, el ejemplo anterior es mucho más fácil
de leer:

@lilypond[quote,verbatim,ragged-right]
\relative c'' {
  \key a \major
  \time 6/8
  cis8. d16 cis8 e4 e8
  b8. cis16 b8 d4 d8
}
@end lilypond

Si comete un error con una marca de octava (@code{'} o @code{,}) mientras
trabaja en el modo @code{\relative}, será muy obvio (muchas notas estarán
en la octava equivocada).  Mientras trabaja en el modo absoluto, un solo fallo
no será tan visible, y tampoco será tan fácil de localizar.

Sin embargo, el modo absoluto es útil para escribir música que contenga intervalos grandes, y
será extremadamente útil para hacer archivos de LilyPond generados por ordenador.


@node Organizing pieces with identifiers
@subsection Organizing pieces with identifiers

Cuando los elementos que hemos discutido anteriormente se combinan para producir
archivos mayores, las expresiones musicales se hacen enormes.  En música
polifónica con muchos pentagramas, los archivos de entrada pueden volverse muy propensos a la confusión.  Podemos
reducir esta confusión utilizando los @emph{identificadores}.

Con los identificadores (también conocidos como variables o macros), podemos trocear las
expresiones musicales complejas.  Un identificador se asigna de la manera siguiente:

@example
musicaConNombre = @{ @dots{} @}
@end example

El contenido de la expresión musical @code{musicaConNombre} se puede usar
posteriormente colocando una barra invertida delante del nombre
(@code{\musicaConNombre}, igual que una orden normal de LilyPond).  Los identificadores
se deben definir @emph{antes} de la expresión musical principal.

@lilypond[quote,verbatim,ragged-right]
violin = \new Staff { \relative c'' {
  a4 b c b
}}
cello = \new Staff { \relative c {
  \clef bass
  e2 d
}}
{
  <<
    \violin
    \cello
  >>
}
@end lilypond

@noindent
El nombre de un identificador debe consistir enteramente en caracteres alfabéticos, es decir
sin números, guiones ni guiones bajos.

Es posible utilizar variables para otras muchas clases de objetos en el código de
entrada.  Por ejemplo:

@example
width = 4.5\cm
name = "Wendy"
aFivePaper = \paper @{ paperheight = 21.0 \cm @}
@end example

Dependiendo de su contenido, el identificador se puede usar en distintos
lugares.  El siguiente ejemplo utiliza las variables anteriores:

@example
\paper @{
  \aFivePaper
  line-width = \width
@}
@{ c4^\name @}
@end example


@node After the tutorial
@subsection After the tutorial

Después de terminar el tutorial, quizá debería probar a escribir una o dos
piezas.  Comience con una de las @ruser{Templates} y añada algunas
notas.  Si necesita un tipo de notación que no ha sido tratada en el
tutorial, eche un vistazo a la Referencia de Notación, empezando por
@ruser{Basic notation}.  Si quiere escribir música para un conjunto
instrumental que no está cubierto por ninguna plantilla,
consulte @ruser{Extending the templates}.

Una vez que ha escrito algunas piezas cortas, lea el resto del
Manual de aprendizaje (capítulos 3 al 5).  ¡Por supuesto, no pasa nada por
leerlo ahora mismo!  Sin embargo, el resto del Manual
de Aprendizaje da por sentado que está familiarizado con la entrada
de LilyPond.  Puede saltarse estos capítulos ahora
y volver a ellos cuando haya adquirido más experiencia.


@node How to read the manual
@subsection How to read the manual

Como ya vimos en @ruser{How to read the tutorial}, muchos ejemplos del
tutorial omitían el @code{\relative c'' @{ ... @}} alrededor del ejemplo
mostrado.

Durante el resto del manual seremos mucho menos estrictos respecto de los
ejemplos impresos: a veces pueden omitir el
@code{\relative c'' @{ ... @}}, pero otras veces se puede usar una nota inicial
diferente (como @code{c'} o @code{c,,}), y en ocasiones
¡todo el ejemplo estará en el modo de notas absoluto!  Sin embargo, las ambigüedades de esta clase
existen solamente allí donde las alturas no son lo más importante.  En aquellos ejemplos
en los que las alturas tienen importancia, hemos escrito explícitamente @code{\relative}
o bien el @code{@{ @}} en modo absoluto.

Si aún tiene dudas respecto de la entrada de LilyPond exacta que se
ha utilizado en un ejemplo, lea la versión HTML (si no lo está haciendo ya)
y pulse con el ratón sobre la imagen de la música.  De esta forma se mostrará la entrada
exacta que LilyPond usó para generar este manual.

Para informarse sobre la estructura que tiene el resto del manual, consulte
@ruser{About this manual}.

