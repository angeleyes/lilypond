article(GNU Music project - manifesto)(Han-Wen Nienhuys and Jan Nieuwenhuizen)()

sect(Goal)



The public deserves free tools for composing and printing.


sect(Requirements)

Emacs and TeX() serve as useful examples of what programs by the GMP
should be.

description(
dit(high-quality)
    The software should be of high-quality from the application view.
For example, the notation should be high-quality from an engraving
point of view, like TeX()

dit(high-quality) The software should be of high-quality point of
    view, like all GNU software, it should have no limits, be fast,
    etc.

dit(tweakable)
    Printed music has a lot of styles, and special symbols. It may be
    unfeasible to provide and maintain  lots of code that is hardwired
    into the system. The tools should be extensible/programmable like
    Emacs and TeX.

dit(easy to use.)
    That is, for technical users (that can read a manual). The learning
    curve should be as flat as possible but not at the expense of comfort
    of use and power.
)

sect(Components)

description(
dit(A set of music fonts)
    In development, the Feta font.  
dit(A typesetting engine)
    In development, included in LilyPond.
    A system with rules on how to set properties of items to be printed
    (up/down directions, breaking, dimensions, etc)
    It should be suited to interactive typesetting (so, incremental
    algorithms are needed)
dit(A display engine)
    which can display clear notewriting in (say) an X-window
    Ideally the system should cooperate with the typesetting engine
dit(An ASCII language)
    In development, LilyPond has a language. 
    Having an ASCII format which enables urtext, and easy sharing (via
    mail and news forums) encourages cooperation and exchange of music.
dit(A printing engine)
    In development, included in LilyPond.
dit(An input system)
    The natural way to enter composed music is singing or playing it. The
    GMP should have module which can take keyboard input or microphone
    input and convert it to computer data. (microphone input would be
    difficult)
dit(sequencing)
    (have no clue about this)
dit(A scanning system)
    Having a system which can produce mudela from printed scores,  greatly
    simplifies creating a collection of music
dit(A music-understanding system)
    (difficult) A system to generate accompaniments, figured bass,
    automatic accompaniment, etc.
dit(A performing system)
    A system which can play credible performances of abstract music
    representations.  LilyPond has a bare bones system, but it cannot
    (yet) be described as "credible". 
)

sect(Programs)

itemize(
it()A noninteractive typesetter, suited for batch jobs, and typesetting
    existing music. This would couple the ASCII language, the printing
    engine and the typesetting engine
    LilyPond is currently representing this section.
it()A GUI for composing. This would combine the display engine, the input
    system and the typesetting engine.
it()Libraries for reading and writing various audio/music/notation
    formats.
)

Find sponsors. This project will take a long time, and in its infant
stages, having a hard and small core which does a lot of work, is more
efficient than lots of people doing small subprojects. Finanicial
support would be desirable.

