# -*-python-*-

import glob
import os
import string
import sys

Import ('env')
here = os.getcwd ()
reldir = str (Dir ('.').srcnode ())
os.chdir (reldir)
sources = glob.glob ('*.mf')
outdir = os.path.join (env['build'], reldir, env['out'])

#mf_sources = reduce (+,
mf_sources = reduce (lambda x, y: x + y,
		     map (glob.glob,
			  ('feta[0-9]*.mf',
			   'feta-braces-[a-z].mf',
			   'feta-din*[0-9].mf',
			   'feta-nummer*[0-9].mf',
			   'parmesan[0-9]*.mf',)))
os.chdir (here)

#mf_sources = ('feta16.mf',)
#mf_sources = ('feta-braces-a.mf',)
font_stems = map (lambda x: os.path.splitext (x)[0], mf_sources)

t = map (env.TFM, font_stems)
a = map (env.AFM, font_stems)
p = map (env.PFA, font_stems)

map (lambda x: env.Depends (x + '.pfa', x + '.enc'), font_stems)
#map (lambda x: env.Depends (x + '.pfa', x + '.log'), font_stems)

tfmdir = os.path.join (env['lilypondprefix'], 'fonts/tfm')
afmdir = os.path.join (env['lilypondprefix'], 'afm')
pfadir = os.path.join (env['lilypondprefix'], 'fonts/type1')
#ti = map (lambda x: env.Install (tfmdir, x[0]), t)
ti = map (lambda x: env.Install (tfmdir, x), t)
ai = map (lambda x: env.Install (afmdir, x), a)
pi = map (lambda x: env.Install (pfadir, x), p)
env.Alias ('install', tfmdir)
env.Alias ('install', afmdir)
env.Alias ('install', pfadir)

map (lambda x: env.Alias ('fonts', x), t + a + p)
env.Command ('cmr.enc', 'cmr.enc.in', 'cp $SOURCE $TARGET')
env.Alias ('fonts', 'cmr.enc')

#testing
all_sources = ['SConscript',] + sources
x = env.Tar (env['tarball'], all_sources)
