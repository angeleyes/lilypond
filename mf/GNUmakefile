depth = ..

STEPMAKE_TEMPLATES=metafont install install-out
LOCALSTEPMAKE_TEMPLATES=lilypond

include $(depth)/make/stepmake.make 

AF_FILES = $(wildcard *.af) 

EXTRA_DIST_FILES += README feta.tex

# We don't use $(MF_FILES), because there's more .mf cruft here
FETA_MF_FILES = $(wildcard feta[0-9]*.mf)\
	$(wildcard feta-braces-[a-z].mf)\
	$(wildcard feta-alphabet*[0-9].mf)\
	$(wildcard parmesan[0-9]*.mf)

STAFF_SIZES = 11 13 14 16 18 20 23 26
BRACES = a b c d e f g h i
PFA_PREFIX = PFA

OTF_FILES = $(STAFF_SIZES:%=$(outdir)/emmentaler-%.otf)\
 $(outdir)/aybabtu.otf
PFA_OTF_FILES = $(STAFF_SIZES:%=$(outdir)/$(PFA_PREFIX)emmentaler-%.pfa)\
 $(outdir)/$(PFA_PREFIX)aybabtu.pfa
PE_SCRIPTS = $(STAFF_SIZES:%=$(outdir)/emmentaler-%.pe)\
 $(STAFF_SIZES:%=$(outdir)/emmentaler-%.dep)
OTF_TABLES = $(STAFF_SIZES:%=$(outdir)/feta%.otf-table)\
 $(BRACES:%=$(outdir)/feta-braces-%.otf-table)
FETA_FONTS = $(FETA_MF_FILES:.mf=)
SVG_FILES = $(OTF_FILES:%.otf=%.svg) $(ALL_FONTS:%=$(outdir)/%.svg)


$(outdir)/aybabtu.otf-table: $(BRACES:%=$(outdir)/feta-braces-%.otf-table)
	cat $^ > $@

$(outdir)/aybabtu.otf-gtable: $(BRACES:%=$(outdir)/feta-braces-%.otf-gtable)
	echo '(design_size . 20)' > $@

LOG_FILES = $(FETA_MF_FILES:%.mf=$(outdir)/%.log)
LISP_FILES = $(FETA_MF_FILES:%.mf=$(outdir)/%.lisp)
TEXTABLES = $(FETA_MF_FILES:%.mf=$(outdir)/%.tex)
ENC_FILES = $(TEXTABLES:.tex=.enc) $(outdir)/cmr.enc
TFM_FILES = $(FETA_MF_FILES:%.mf=$(outdir)/%.tfm)\
 $(SAUTER_FONTS:%=$(outdir)/%.tfm)
FETA_LIST_FILES = $(FETA_MF_FILES:%.mf=$(outdir)/%list.ly)


ENCODING_FILE=$(findstring $(<:.mf=.enc), $(FETA_MF_FILES:.mf=.enc))
MFTRACE_FLAGS=$(if $(ENCODING_FILE),--encoding $(ENCODING_FILE),) --no-afm

# only for fonts which
#
# 1. are mentioned in font.scm
#
# 2. are not included with teTeX
#

$(outdir)/$(PFA_PREFIX)%.pfa $(outdir)/%.otf $(outdir)/%.svg: $(outdir)/%.pe
	(cd $(outdir) && $(FONTFORGE) -script $(notdir $<))
	$(PYTHON) $(buildscript-dir)/substitute-encoding.py $@
	-rm $(outdir)/*.scale.pfa

# ugh, this does not work
$(outdir)/%.pfa: $(outdir)/%.log
$(outdir)/feta-alphabet%.pfa: $(outdir)/feta-alphabet%.log
$(outdir)/emmentaler-%.otf $(outdir)/$(PFA_PREFIX)emmentaler-%.pfa $(outdir)/emmentaler%.svg: $(outdir)/feta%.pfa $(outdir)/feta-alphabet%.pfa $(outdir)/parmesan%.pfa

# AARGH?

$(outdir)/feta11.pfa: $(outdir)/feta11.log
$(outdir)/feta13.pfa: $(outdir)/feta13.log
$(outdir)/feta14.pfa: $(outdir)/feta14.log
$(outdir)/feta16.pfa: $(outdir)/feta16.log
$(outdir)/feta18.pfa: $(outdir)/feta18.log
$(outdir)/feta20.pfa: $(outdir)/feta20.log
$(outdir)/feta23.pfa: $(outdir)/feta23.log
$(outdir)/feta26.pfa: $(outdir)/feta26.log

$(outdir)/feta-alphabet11.pfa: $(outdir)/feta-alphabet11.log
$(outdir)/feta-alphabet13.pfa: $(outdir)/feta-alphabet13.log
$(outdir)/feta-alphabet14.pfa: $(outdir)/feta-alphabet14.log
$(outdir)/feta-alphabet16.pfa: $(outdir)/feta-alphabet16.log
$(outdir)/feta-alphabet18.pfa: $(outdir)/feta-alphabet18.log
$(outdir)/feta-alphabet20.pfa: $(outdir)/feta-alphabet20.log
$(outdir)/feta-alphabet23.pfa: $(outdir)/feta-alphabet23.log
$(outdir)/feta-alphabet26.pfa: $(outdir)/feta-alphabet26.log

$(outdir)/parmesan11.pfa: $(outdir)/parmesan11.log
$(outdir)/parmesan13.pfa: $(outdir)/parmesan13.log
$(outdir)/parmesan14.pfa: $(outdir)/parmesan14.log
$(outdir)/parmesan16.pfa: $(outdir)/parmesan16.log
$(outdir)/parmesan18.pfa: $(outdir)/parmesan18.log
$(outdir)/parmesan20.pfa: $(outdir)/parmesan20.log
$(outdir)/parmesan23.pfa: $(outdir)/parmesan23.log
$(outdir)/parmesan26.pfa: $(outdir)/parmesan26.log

$(outdir)/$(PFA_PREFIX)emmentaler-11.otf $(outdir)/$(PFA_PREFIX)emmentaler-11.pfa: $(outdir)/feta11.pfa $(outdir)/feta-alphabet11.pfa $(outdir)/parmesan11.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-13.otf $(outdir)/$(PFA_PREFIX)emmentaler-13.pfa: $(outdir)/feta13.pfa $(outdir)/feta-alphabet13.pfa $(outdir)/parmesan13.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-14.otf $(outdir)/$(PFA_PREFIX)emmentaler-14.pfa: $(outdir)/feta14.pfa $(outdir)/feta-alphabet14.pfa $(outdir)/parmesan14.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-16.otf $(outdir)/$(PFA_PREFIX)emmentaler-16.pfa: $(outdir)/feta16.pfa $(outdir)/feta-alphabet16.pfa $(outdir)/parmesan16.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-18.otf $(outdir)/$(PFA_PREFIX)emmentaler-18.pfa: $(outdir)/feta18.pfa $(outdir)/feta-alphabet18.pfa $(outdir)/parmesan18.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-20.otf $(outdir)/$(PFA_PREFIX)emmentaler-20.pfa: $(outdir)/feta20.pfa $(outdir)/feta-alphabet20.pfa $(outdir)/parmesan20.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-23.otf $(outdir)/$(PFA_PREFIX)emmentaler-23.pfa: $(outdir)/feta23.pfa $(outdir)/feta-alphabet23.pfa $(outdir)/parmesan23.pfa
$(outdir)/$(PFA_PREFIX)emmentaler-26.otf $(outdir)/$(PFA_PREFIX)emmentaler-26.pfa: $(outdir)/feta26.pfa $(outdir)/feta-alphabet26.pfa $(outdir)/parmesan26.pfa


$(outdir)/%.otf-table: $(outdir)/%.lisp $(if $(findstring brace,$<),,$(subst feta,parmesan,$<)) 
	cat $< \
		$(if $(findstring brace,$<),,$(subst feta,parmesan,$<)) \
		$(if $(findstring brace,$<),,$(subst feta,feta-alphabet,$<)) > $@

$(outdir)/aybabtu.otf $(outdir)/$(PFA_PREFIX)aybabtu.pfa: $(outdir)/aybabtu.subfonts $(outdir)/aybabtu.fontname $(outdir)/aybabtu.otf-table $(outdir)/aybabtu.otf-gtable $(outdir)/aybabtu.pe

$(outdir)/aybabtu.otf $(outdir)/$(PFA_PREFIX)aybabtu.pfa $(outdir)/aybabtu.svg: $(BRACES:%=$(outdir)/feta-braces-%.pfa)

$(outdir)/aybabtu.fontname:
	echo -n 'aybabtu' > $@ 
$(outdir)/aybabtu.subfonts: 
	echo $(subst .mf,,$(wildcard feta-braces-[a-z].mf)) > $@

$(PE_SCRIPTS): $(buildscript-dir)/gen-emmentaler-scripts.py
	$(PYTHON) $< --dir=$(outdir)


ALL_FONTS = $(FETA_FONTS) $(SAUTER_FONTS)
PFA_FILES = $(ALL_FONTS:%=$(outdir)/%.pfa) $(PFA_OTF_FILES)

# Make tfm files first, log files last, 
# so that normally log files aren't made twice
ALL_GEN_FILES= $(TFM_FILES) $(TEXTABLES) $(TFM_FILES) $(LOG_FILES) $(ENC_FILES) $(LISP_FILES) $(FETA_LIST_FILES)  $(OTF_TABLES) $(PFA_FILES) $(OTF_FILES) $(SVG_FILES)

#PRE_INSTALL=$(MAKE) "$(ALL_GEN_FILES)"
INSTALLATION_DIR=$(local_lilypond_datadir)/fonts/source
INSTALLATION_FILES=$(MF_FILES) $(AF_FILES)

INSTALLATION_OUT_SUFFIXES=1 2 3 4 5 6 7 8 9

INSTALLATION_OUT_DIR1=$(local_lilypond_datadir)/tex
INSTALLATION_OUT_FILES1=$(TEXTABLES)

# must not be installed with .cff, pango/fontconfig does not like .cff fonts 
INSTALLATION_OUT_DIR2=$(local_lilypond_datadir)/fonts/otf
INSTALLATION_OUT_FILES2=$(OTF_FILES)

INSTALLATION_OUT_DIR3=$(local_lilypond_datadir)/fonts/tfm
INSTALLATION_OUT_FILES3=$(TFM_FILES)

INSTALLATION_OUT_DIR4=$(local_lilypond_datadir)/ps
INSTALLATION_OUT_FILES4=$(CFF_PS_FILES)

INSTALLATION_OUT_DIR5=$(local_lilypond_datadir)/fonts/type1
INSTALLATION_OUT_FILES5=$(PFA_FILES)

INSTALLATION_OUT_DIR6=$(local_lilypond_datadir)/fonts/map
INSTALLATION_OUT_FILES6=$(outdir)/lilypond.map

INSTALLATION_OUT_DIR7=$(local_lilypond_datadir)/fonts/cff/
INSTALLATION_OUT_FILES7=$(CFF_FILES)

INSTALLATION_OUT_DIR7=$(local_lilypond_datadir)/ps/
INSTALLATION_OUT_FILES7=$(ENC_FILES)

INSTALLATION_OUT_DIR9=$(local_lilypond_datadir)/fonts/svg
INSTALLATION_OUT_FILES9=$(SVG_FILES)


export MFINPUTS:=.:$(MFINPUTS)

.PHONY: tree-regen
# FIXME: temporary hack: must regenerate after building fonts
tree-regen:
	rm -rf $(builddir)/share
	make -C $(builddir) link-tree

default: pfa_warning $(ALL_GEN_FILES) $(outdir)/emmentaler-20.otf tree-regen

pfa_warning:
ifneq ($(shell $(MFTRACE) --version | sed 's/ .*//'),mftrace)
	@echo ""
	@echo "ERROR: mftrace not found"
	@echo ""
	@echo "For obtaining PFA fonts, either install mftrace "
	@echo "(see http://www.xs4all.nl/~hanwen/mftrace/ ),"
	@echo "or try one of the following commands in this directory: "
	@echo ""
	@echo " make get-pfa "
	@echo " make get-rpm-pfa "
	@echo " make get-deb-pfa "
	@echo ""
	@echo "These commands will try to download the files from internet."
	@false
endif


debian-mirror=http://ftp.us.debian.org
debian-package =lilypond_$(TOPLEVEL_VERSION)-1_i386.deb
$(outdir)/$(debian-package):
	wget --passive-ftp -P $(outdir) $(debian-mirror)/debian/pool/main/l/lilypond/$(debian-package)

get-deb-pfa: $(outdir)/$(debian-package)
	rm -rf $(outdir)/./usr
	ar p $< data.tar.gz | \
		tar -C $(outdir) -zvxf - '*.pfa'
	cp `find $(outdir)/usr/ -name '*.pfa'` $(outdir)/


redhat-package=lilypond-$(TOPLEVEL_VERSION)-1.i386.rpm
$(outdir)/$(redhat-package):
	wget  --passive-ftp -P $(outdir) http://lilypond.org/download/binaries/Fedora-3/$(redhat-package)

get-rpm-pfa: $(outdir)/$(redhat-package)
	cd $(outdir) ; rm -rf usr/ # (root alert!) 
	cd $(outdir) ; rpm2cpio $(redhat-package) | cpio -uid '*.pfa'
	cp `find $(outdir)/usr/ -name '*.pfa'` $(outdir)/

# change this dependency 
get-pfa: get-rpm-pfa


##
## todo: this also depends on .tfm, FIXME.
$(outdir)/%.lisp $(outdir)/%.otf-gtable $(outdir)/%.enc  $(outdir)/%.tex $(outdir)/%list.ly $(outdir)/%.dep: $(outdir)/%.log $(outdir)/%.tfm
	$(PYTHON) $(buildscript-dir)/mf-to-table.py --global-lisp=$(outdir)/$(<F:.log=.otf-gtable) --lisp=$(outdir)/$(<F:.log=.lisp) --outdir=$(outdir) --dep $(outdir)/$(<F:.log=.dep) --enc $(outdir)/$(<F:.log=.enc) --tex $(outdir)/$(<F:.log=.tex) --ly $(outdir)/$(<F:.log=list.ly) $<

fontdir: $(addprefix $(outdir)/, lilypond.map lilypond.sfd private-fonts fonts.scale fonts.dir Fontmap.lily)


local-clean:
	rm -f mfplain.mem mfplain.log 
	rm -f *.tfm *.log

$(outdir)/%.enc.in: %.enc
	cp $< $@

# teTeX-2.0.x compatibility.
local-install:
	-$(INSTALL) -d $(DESTDIR)$(local_lilypond_datadir)/dvips
	(cd $(DESTDIR)$(local_lilypond_datadir)/dvips && ln -sf ../fonts/map .)

local-uninstall:
	-rm -f $(DESTDIR)$(local_lilypond_datadir)/dvips/map
	-rmdir $(DESTDIR)$(local_lilypond_datadir)/dvips
