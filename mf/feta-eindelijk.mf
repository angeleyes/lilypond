% feta-eindelijk.mf -- implement rest symbols -*-Fundamental-*-
%
% part of LilyPond's pretty-but-neat music font
%
% source file of the Feta (not the Font-En-Tja) music font
% 
% (c) 1997--2002 Jan Nieuwenhuizen <janneke@gnu.org>

fet_begingroup("rests");

begingroup

thick#:=1/16designsize;
define_blacker_pixels(thick);

rthin:=1/8*staff_space;
% rthick:=2rthin;
rthick:=2thick+rthin;

def shift_pic (expr pone, ptwo) =
  currentpicture:=currentpicture shifted (round(pone),round(ptwo))
enddef;

% stuff for     8th,16th etc rests
%
save stem, ball_crook_stem, ball_crook_balldiam, flare;

% stem#:=1/8*staff_space#;
stem# = 1/5staff_space#;
% flare# = 2/3staff_space#;
flare# = 2/3staff_space# - 1/8stafflinethickness#;

define_pixels(stem,flare);

ball_crook_stem = stem;
ball_crook_balldiam =flare;


save block_rest_y, block_rest_x;

save breve_rest_y, breve_rest_x;

breve_rest_y# =  staff_space#;
breve_rest_x# = 3/5 staff_space#;
block_rest_y# = 5/8 staff_space#;
block_rest_x# = 3/2 staff_space#;

define_pixels(block_rest_y, block_rest_x);

def block_rest =
	draw_block ((0,0), (block_rest_x, block_rest_y));
	enddef;

fet_beginchar( "whole rest", "0", "wholerest");
	set_char_box(0, block_rest_x#,
		block_rest_y#,  0);
	block_rest;
	currentpicture := currentpicture shifted (0,- block_rest_y);
fet_endchar;

fet_beginchar("half rest", "1", "halfrest");
	set_char_box(0, block_rest_x#, 0, block_rest_y#);
	block_rest;
fet_endchar;


%
% should use ledgerline thickness?
%
fet_beginchar( "whole rest (outside staff)", "0o", "outsidewholerest");
	set_char_box(0, block_rest_x#,
		block_rest_y#, ledgerlinethickness#/2);
	block_rest;
	currentpicture := currentpicture shifted (0, - block_rest_y);
	pickup pencircle scaled ledgerlinethickness;

	y5 = y6 = 0;
	lft x5 = - b - block_rest_y;
	rt x6 = w + block_rest_y;
	draw_gridline(z5,z6,ledgerlinethickness);
fet_endchar;

fet_beginchar("half rest (outside staff)", "1o", "outsidehalfrest");
	set_char_box(0, block_rest_x#,
		ledgerlinethickness#/2, block_rest_y#);
	block_rest;
	pickup pencircle scaled ledgerlinethickness;
	y5 = y6 = 0;
	lft x5 = - b - block_rest_y ;  
	rt x6 = w + block_rest_y;
	draw_gridline (z5,z6,ledgerlinethickness);
fet_endchar;



define_pixels(breve_rest_y, breve_rest_x, multi_rest_x, multi_beam_height);


fet_beginchar("longa rest", "-2", "longarest");
       set_char_box(0, breve_rest_x#, breve_rest_y#, breve_rest_y#);
       draw_block ((0,-floor (breve_rest_y)), (breve_rest_x, floor (breve_rest_y)));
fet_endchar;

fet_beginchar("breve rest", "-1", "breverest");
       set_char_box(0, breve_rest_x#, 0, breve_rest_y#);
       draw_block ((0,0), (breve_rest_x, floor (breve_rest_y)));
fet_endchar;

tracingvariables := 1;

fet_beginchar("Quarter rest","2","quartrest");
%	draw_staff (-2, 2, 0.0);	
	save alpha, yshift, height;
	alpha:=-50;
	yshift# = -1.25 staff_space#;
	height# = 2.8125 staff_space#;
	define_pixels (yshift, height);
	save xcenter;
	xcenter = -0.1 staff_space;
	
	set_char_box(0, 0.95 staff_space#,
	  -yshift#,
	  yshift# + height#);
	
	save ne,nw,se,sw; pair ne,nw,se,sw;
	
	se=dir alpha; nw=dir (alpha+180);
	ne=dir (alpha+90); sw=dir (alpha-90);
	penpos1(rthin,alpha+90);
	penpos2(5/4rthick,alpha);
	penpos4(5/4rthick,alpha);
	penpos5(rthin,alpha+90);
	penpos3(3/4rthick,alpha);
%	penpos6(5/8rthick,alpha);
	penpos6(2/3rthick,alpha);
	penpos7(1/2rthin,alpha+90);

	z10=z2l+1/2rthin*sw;
%	z11=z4l+1/2rthin*sw;
	z11=z4l+1/2rthin*sw+1/2rthin*se;
	z12=z4r+1/2rthin*ne;
%	z13=z2r+1/2rthin*ne;
	z13=z2r+1/2rthin*ne+1/2rthin*nw;

	y1r = h;
	x1l=xcenter +  1/3staff_space;
	z2r=z1+staff_space*se;
	z3=1/2[z2,z4];
	x4= xcenter + 3/8staff_space;
	y4= 0;
	z5=z4l+1.3staff_space*se;
	x6l=x4l;
	y6l=y4r;
	x7= xcenter + 2/5staff_space;
	y7= -d;
	
	fill z1l{se}..{se}z10..z3l..z11{se}..{se}z5l..z5r{nw}..{nw}z12..z3r..z13{nw}..{nw}z1r.. cycle;
	fill z5r{nw}..tension1.4..z6l..tension1.4..{se}z7l..z7r{nw}..tension1.4..z6r..tension1.4..{se}z5l..cycle;
	penlabels(1,2,3,4,5,6,7);
	penlabels(10,11,12,13);
	
%	  3/4 staff_space# + yshift#,
%	  18/5staff_space# + yshift#)

	fet_endchar;

def rest_crook(expr a, w) =
	balled_crook(a, w, ball_crook_balldiam, ball_crook_stem)
enddef;

%
% Notes about 8th rest:  
% 
% * 8th rest should be no wider than the black note head
%
% * The inside corner of the horizontal portion is usually a little blotted.
%
% * The top of the crook chops off the vertical brush
% 
% * The crook widens a little
%
% * The bottom of the brush is slightly flat, as it has to align with
% stafflines if it is inside the staff.
%
% * The top of the brush usually is a little lower than the top of bulb.
%
% * The bulb can vary. Sometimes it is open (like in the clefs). Sometimes 
% it is closed, or even a flare.
% 

def normalize (expr p) =
	(p / length (p))
enddef ;

def draw_eighth_rest =
	save width, bulb_diam, thin, thick;
	save ycenter, crook_thick, crook_thin;
	save crook_dir, lower_brush;
	pair crook_dir;


	width# := 1.0 staff_space#;
	bulb_diam# := 0.64 staff_space#;
	thin# := 1.1 stafflinethickness#;
	thick# :=  2.2 stafflinethickness#;
	crook_thick# := 1.8 stafflinethickness#;
	crook_thin := 1.3 stafflinethickness;

	lower_brush = 1.5 stafflinethickness;
	ycenter := 0.5 staff_space;

	define_pixels (width, bulb_diam, thin, thick, crook_thick);
	set_char_box (0, width#,
		1.0 staff_space# + 0.5 stafflinethickness#, 0.5 staff_space# + bulb_diam#/2);

	penpos1 (thick, 0);
	penpos2 (thin, 0);

	y1 = ycenter + - 1.5 staff_space ;
%	y9 = y5 -  lower_brush;
	y2 = y5 -  lower_brush;
       
	x2r = width;


	x2r - x1 = 0.5 staff_space;

	x3 = x1l - 0.045 staff_space ;


	x4 = 1.02 bulb_diam ;
	y4 := ceiling (ycenter - 2 stafflinethickness + crook_thin);

	x5 = 0.5 bulb_diam - 0.25 stafflinethickness;
	y5 = ycenter +bulb_diam/2;
	
	z9 = z2 + 0.46 stafflinethickness * dir (angle(z2 - z1)- 10);

%	z7 = %(bulb_diam/2,ycenter) + 0.23 staff_space * dir ( 35);
	z7 = 0.5 [z4, z5] + (0.45 stafflinethickness,0.4 stafflinethickness);
	x8 = 0;
	y8 = ycenter + 0.25 stafflinethickness;

	z6 = whatever [z1l, z2l];
	z6 = whatever [z2l, z4] + crook_thick * (crook_dir rotated -90);
	crook_dir = normalize(z2l - z4);

	y3 := ycenter +floor (- 0.45 bulb_diam);


	penlabels (1, 2);
	labels(3, 4, 5, 6, 7, 8, 9);

	fill z2r -- z2l -- simple_serif (z1l, z1r, 40) -- cycle;
	fill z2r{z2r-z1r} .. z9 .. z2l{dir(232)} .. tension 2
		.. z4{left} .. tension 0.9 .. z7 %{dir(90 + 25)} 
		.. z5{left} .. z8 .. z3{right}
		.. {curl 0.2}z6 -- cycle;

%	draw_staff (-2,2,0.0);

	enddef;

fet_beginchar("8th rest","3","eighthrest");
	draw_eighth_rest;
	fet_endchar;

fet_beginchar("Classical quarter rest","2classical","clasquartrest");
	draw_eighth_rest;
	currentpicture := currentpicture xscaled -1 shifted (w,0);
	fet_endchar;


fet_beginchar("16th rest","4","sixteenthrest");
%	draw_staff (-2, 2, 0.0);
	save yshift, ballcorrection;
	ballcorrection = 0.005 staff_space;

	yshift# := - 2 staff_space#;
	define_pixels(yshift);

	save alpha,cw,h,w, height;
	alpha=74;
	cw#=7/6staff_space#;
	height# =  5/3staff_space#+staff_space#+7/4stafflinethickness#;
	set_char_box(0, cw#+(height#-3/2staff_space#)/tand(alpha),
		-yshift#, height# + yshift#);

	define_pixels(cw);
	save x,y;
	x1=w-stem/6;
	y1 = yshift + 2.5 staff_space + flare/4 + ballcorrection;

	z2-z1=whatever*dir alpha;
	y2= yshift + stem/2;
	brush(z1,2/3stem,z2,stem);
	rest_crook (z1,cw);
	z3-z1=whatever*dir alpha;
	y3=y1-staff_space;
	rest_crook (z3,cw);
	penlabels(1,2);
	fet_endchar;

fet_beginchar("32th rest","5","thirtysecondrest");
%	draw_staff (-2, 2, 0.0);
	save yshift, ballcorrection;
	ballcorrection = 0.005 staff_space;

	yshift# := -2 staff_space#;
	define_pixels(yshift);

	save alpha,cw,h;
	alpha=76;
	cw#=7/6staff_space#;
	h#=5/3staff_space#+2staff_space#+7/4stafflinethickness#;

	set_char_box(0,	cw#+(h#-3/2staff_space#)/tand(alpha),
		-yshift#,yshift# +h#);
	define_pixels(cw);
	save x,y;
	x1=w-stem/6;
	y1 = yshift + 3.5 staff_space + flare/4 + ballcorrection;

	z2-z1=whatever*dir alpha;
	y2=stem/2 + yshift;
	brush(z1,2/3stem,z2,stem);
	rest_crook (z1,cw);
	z3-z1=whatever*dir alpha;
	y3=y1-staff_space;
	rest_crook (z3,cw);
	z4-z1=whatever*dir alpha;
	y4=y1-2staff_space;
	rest_crook (z4,cw);
	fet_endchar;

fet_beginchar("64th rest","6","sixtyfourthrest");
%	draw_staff (-2, 2, 0.0);
	save yshift, ballcorrection;
	ballcorrection = 0.005 staff_space;

	yshift# := -3 staff_space#;
	define_pixels(yshift);

	save alpha,cw,h,w;
	alpha=78;
	cw#=7/6staff_space#;
	h#=5/3staff_space#+3staff_space#+7/4stafflinethickness#;
	w#=cw#+(h#-3/2staff_space#)/tand(alpha);
	set_char_box(0,w#,-yshift# ,yshift# + h#);

	define_pixels(cw);
	save x,y;
	x1=w-stem/6;

	y1 = yshift + 4.5 staff_space + flare/4 + ballcorrection;

	z2-z1=whatever*dir alpha;
	y2=stem/2 + yshift;
	brush (z1,2/3stem,z2,stem);
	rest_crook (z1,cw);
	z3-z1=whatever*dir alpha;
	y3=y1-staff_space;
	rest_crook (z3,cw);
	z4-z1=whatever*dir alpha;
	y4=y1-2staff_space;
	rest_crook (z4,cw);
	z5-z1=whatever*dir alpha;
	y5=y1-3staff_space;
	rest_crook (z5,cw);

	fet_endchar;

fet_beginchar("128th rest","7","hundredtwentyeighthrest"); 
%	draw_staff (-2, 2, 0.0);
	save yshift, ballcorrection;
	ballcorrection = 0.005 staff_space;

	yshift# := -3 staff_space#;
	define_pixels(yshift);
	save alpha,cw,h,w;
	alpha=78;
	cw#=7/6staff_space#;
	h#=5/3staff_space#+4staff_space#+7/4stafflinethickness#;
	w#=cw#+(h#-3/2staff_space#)/tand(alpha);
	set_char_box(0,w#, -yshift#,yshift#  + h#);
	define_pixels(cw);
	save x,y;
	x1=w-stem/6;
	y1 = yshift + 5.5 staff_space + flare/4 + ballcorrection;

	z2-z1=whatever*dir alpha;
	y2=stem/2 + yshift;
	brush (z1,2/3stem,z2,stem);
	rest_crook (z1,cw);
	z3-z1=whatever*dir alpha;
	y3=y1-staff_space;
	rest_crook (z3,cw);
	z4-z1=whatever*dir alpha;
	y4=y1-2staff_space;
	rest_crook (z4,cw);
	z5-z1=whatever*dir alpha;
	y5=y1-3staff_space;
	rest_crook (z5,cw);
	z6-z1=whatever*dir alpha;
	y6=y1-4staff_space;
	rest_crook (z6,cw);
	
	fet_endchar;


endgroup;


%%%%%%%%
%
%
%
% MENSURAL NOTATION
%
%
%

% Neo-mensural longa and breve are identical with default longa and breve.

neomens_block_rest_x# = 2/5 staff_space#;
neomens_block_rest_y# = 1/1 staff_space#;
neomens_half_block_rest_y# = 5/8 staff_space#;

define_pixels(neomens_block_rest_x,
	      neomens_block_rest_y, neomens_half_block_rest_y);

def neomens_half_block_rest =
	draw_block ((0,0), (neomens_block_rest_x, neomens_half_block_rest_y));
	enddef;

fet_beginchar("Neo-mensural maxima rest", "-3neo_mensural", "neomensmaximarest");
       set_char_box(0, neomens_block_rest_x#,
		    neomens_block_rest_y#, 2 neomens_block_rest_y#);
       draw_block ((0,-neomens_block_rest_y),
		   (neomens_block_rest_x, 2 neomens_block_rest_y));
fet_endchar;

fet_beginchar("Neo-mensural longa rest", "-2neo_mensural", "neomenslongarest");
       set_char_box(0, neomens_block_rest_x#,
		    neomens_block_rest_y#, neomens_block_rest_y#);
       draw_block ((0,-neomens_block_rest_y),
		   (neomens_block_rest_x, neomens_block_rest_y));
fet_endchar;

fet_beginchar("Neo-mensural breve rest", "-1neo_mensural", "neomensbreverest");
       set_char_box(0, neomens_block_rest_x#,
		    0, neomens_block_rest_y#);
       draw_block ((0,0), (neomens_block_rest_x, neomens_block_rest_y));
fet_endchar;

fet_beginchar("Neo-mensural whole rest", "0neo_mensural", "neomenssemibrevisrest");
	set_char_box(0, neomens_block_rest_x#,
		     neomens_half_block_rest_y#,  0);
	neomens_half_block_rest;
	currentpicture :=
		currentpicture shifted (0,- neomens_half_block_rest_y);
fet_endchar;

fet_beginchar("Neo-mensural half rest", "1neo_mensural", "neomensminimahalfrest");
	set_char_box(0, neomens_block_rest_x#,
		     0, neomens_half_block_rest_y#);
	neomens_half_block_rest;
fet_endchar;

neomensrestsize# = .8staff_space#;

fet_beginchar("Neo-mensural 4th rest","2neo_mensural","neomenssemiminimarest")
	set_char_box(0,neomensrestsize#,0,neomensrestsize#);
        pickup pencircle scaled 2 stafflinethickness;
	lft x1 = 0;
	bot y1 = 0;
	lft x2 = 0;
	top y2 = h;
	rt x3 = w;
	bot y3 = h/2;
	draw z1 .. z2;
	draw z2 .. z3;
fet_endchar

fet_beginchar("Neo-mensural 8th rest","3neo_mensural","neomensfusarest")
	set_char_box(0,neomensrestsize#,0,neomensrestsize#);
        pickup pencircle scaled 2 stafflinethickness;
	rt x1 = w;
	bot y1 = 0;
	rt x2 = w;
	top y2 = h;
	lft x3 = 0;
	bot y3 = h/2;
	draw z1 .. z2;
	draw z2 .. z3;
fet_endchar

fet_beginchar("Neo-mensural 16th rest","4neo_mensural","neomenssemifusarest")
	set_char_box(0,neomensrestsize#,0,staff_space#);
        pickup pencircle scaled 2 stafflinethickness;
	rt x1 = w;
	bot y1 = 0;
	rt x2 = w;
	top y2 = h;

	draw z1 .. z2;

        pickup pencircle scaled 2 stafflinethickness;
	rt x3 = w;
	top y3 = h;
	lft x4 = 0;
	bot y4 = h/2;
	rt x5 = w;
	top y5 = 5/8h;
	lft x6 = 0;
	bot y6 = h/8;

	draw z3 .. z4;
	draw z5 .. z6;
fet_endchar


fet_endgroup("rests")
