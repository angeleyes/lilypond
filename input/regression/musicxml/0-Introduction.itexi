@menu
* Introduction ::
* Test cases ::
@end menu

@node Introduction
@chapter Introduction

@heading Why a MusicXML test suite?

This test suite of sample @uref{http://www.musicxml.org/,MusicXML} files
is supposed to fill a severe gap for all developers implementing MusicXML
support in their application: There is no complete test suite of MusicXML
files available for testing purposes.

@heading Downloading the test suite

The complete set of MusicXML test files contained in this suite can be downloaded
@uref{MusicXML-TestSuite-0.1.zip,here} as a ZIP archive.

@heading Connection with @uref{http://www.lilypond.org/,LilyPond}

At the same time as providing a generic test suite for MusicXML document,
this test suite also serves as proofs for the musicxml2ly script provided with
LilyPond @lilypondversion. The images shown in the @ref{Test cases} chapter
were generated by running @command{musicxml2ly} and @command{lilypond} on
the MusicXML files. As @command{musicxml2ly} does not yet perfectly support
every single aspect of MusicXML, the output is not supposed to be used as 
a definitive reference rendering, but rather as an indication how one 
particular application supports and interprets each of the test files.

If something does not seem right in the output, it might either be that this
feature has not been implemented yet, has been wrongly implemented, or a 
regression has crept in recently...

In the web version of this document, you can click on the file name 
or figure for each example to see the corresponding .ly intermediary file.

@heading Structure of this test suite 

Each test file (typically hand-crafted from the MusicXML "specification")
checks one particular aspect of MusicXML. A short description of the 
particular feature for a file is given element inside the file in a comment 
element of the form:
@example
  <identification><miscellaneous>
    <miscellaneous-field name="description"> .... </miscellaneous-field>
  </miscellaneous></identification>
@end example


The files are categorized by their first two digits with the following meaning:
@itemize
@item 00 ... Basics: Pitches, durations, rests, clefs, keys, time sigs, ties, etc.
@item 01 ... Chords
@item 02 ... MusicXML notations and articulations (articulations, ornaments, technicals, text markup)
@item 03 ... MusicXML directions (dynamics; single symbols, not spanners like hairpins)
@item 04 ... Spanners (hairpin, octave shift, trill, glissando, etc.)
@item 05 ... Header information (title, composer, poet, etc.)
@item 06 ... Lyrics
@item 08 ... Multiple parts (staves)
@item 09 ... Measure issues: Repeats, barlines, pickup measures, mid-measure barlines/repeats
@item 10 ... Multiple voices per staff
@item 12 ... Triplets, Tuplets
@item 13 ... Grace notes
@item 14 ... Multi-staff parts (one voice on multiple staves, e.g. PianoStaff)
@item 15 ... Percussion
@item 17 ... Guitar notation: Chord names, Fretboards, Tablature notation
@item 18 ... Figured bass
@item 19 ... Page layout: font/paper size, margins, spacing
@item 20 ... Compressed MusicXML files
@item 99 ... Compatibility modes with broken MusicXML exporters (i.e. ignore beams for Sibelius 5)
@end itemize

@node Test cases
@chapter Test cases
