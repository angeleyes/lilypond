%%  Do not edit this file; it is auto-generated from LSR!
\version "2.10.12"

\header { texidoc = "
It is possible to use fragments of LilyPond syntax inside Scheme, by
putting them between #@{ and #@}. In this example, three functions are
defined to apply different paddings on the TextScript markups, using
native LilyPond commands such as \"\override TextScript #'padding\".
" }

\layout { ragged-right = ##t }

withPaddingA = #(define-music-function (parser location padding music) (number? ly:music?)
		 #{ \override TextScript #'padding = #$padding
		 $music 
		 \revert TextScript #'padding #})

withPaddingB = #(define-music-function (parser location padding music) (number? ly:music?)
		 #{ \override TextScript #'padding = #$(* padding 2)
		 $music 
		 \revert TextScript #'padding #})

withPaddingC = #(define-music-function (parser location padding music) (number? ly:music?)
		 #{ \override TextScript #'padding = #(+ 1 $(* padding 2))
		    $music 
		    \revert TextScript #'padding #})

{
    c'^"1"
    \withPaddingA #2
    { c'^"2" c'^"3"}
    c'^"4"
    \withPaddingB #2
    { c'^"5" c'^"6"}
    c'^"7"
    \withPaddingC #2
    { c'^"8" c'^"9"}
    c'^"10"
}
