dnl configure.in   -*-shell-script-*-
dnl Process this file with autoconf to produce a configure script. 

# Bootstrap the init proces.
AC_INIT

# Bootstrap StepMake configure
# For user package:
AC_CONFIG_AUX_DIR([stepmake/bin])

# For stepmake package:
# AC_CONFIG_AUX_DIR(bin)


STEPMAKE_INIT

# List a file that identifies your package.
AC_CONFIG_SRCDIR([lily/main.cc])

# Move to aclocal.m4?
AC_CONFIG_HEADER([$CONFIGFILE.hh:config.hh.in])

# Uncomment the configuration options your package needs.

DOCUMENTATION=yes
AC_ARG_ENABLE(documentation,
    [  --enable-documentation  build Documentation.  Default: on],
    [DOCUMENTATION=$enableval])
AC_SUBST(DOCUMENTATION)

gui_b=no
AC_ARG_ENABLE(gui,
    [  --enable-gui            compile with experimental GNOME output module.  Default: off],
    [gui_b=$enableval])


NCSB_DIR=unknown
AC_ARG_ENABLE(ncsb,
[  --enable-ncsb-dir      set the path where Century Schoolbook fonts can be found.
                            Default: detect with locate(1)],
    [NCSB_DIR=$enableval])


reloc_b=no
AC_ARG_ENABLE(relocation,
    [  --enable-relocation     compile with dynamic relocation.  Default: off],
    [reloc_b=$enableval])

FRAMEWORKDIR=".."
AC_ARG_WITH(framework-dir,
    [  --with-framework-dir=DIR
	relative the optional framework directory],[
	if test "$withval" = "yes" -o "$withval" = "no"; then
	    AC_MSG_WARN(Usage: --with-framework-dir=../lib/FRAMEWORK/DIR)
	else
	    FRAMEWORKDIR="${withval}"
	    LDFLAGS="$LDFLAGS -Wl,--rpath,'\$\${ORIGIN}/$FRAMEWORKDIR/lib'"
	fi
	])
AC_DEFINE_UNQUOTED(FRAMEWORKDIR, ["${FRAMEWORKDIR}"])

LINK_GXX_STATICALLY=no
AC_ARG_ENABLE(static-gxx,
    [  --enable-static-gxx     link libstdc++.a statically. Default: off],
    [LINK_GXX_STATICALLY=$enableval])
AC_SUBST(LINK_GXX_STATICALLY)

# must come before any header checks
STEPMAKE_COMPILE

STEPMAKE_PYTHON(REQUIRED, 2.2)
STEPMAKE_GCC(REQUIRED, 2.8)
STEPMAKE_CXX(REQUIRED)
STEPMAKE_GXX(REQUIRED, 3.0.5)
STEPMAKE_CXXTEMPLATE
STEPMAKE_LIB(REQUIRED)
STEPMAKE_DLOPEN
# Do not use bison 1.50 and 1.75.
# 1.29 is required fr %locations, but I'm not sure it's enough --ns
STEPMAKE_BISON(OPTIONAL, 1.29)
STEPMAKE_FLEX(REQUIRED)
STEPMAKE_FLEXLEXER(REQUIRED)
STEPMAKE_FLEXLEXER_LOCATION
AC_LANG_C
STEPMAKE_LOCALE
STEPMAKE_GETTEXT
STEPMAKE_MSGFMT(REQUIRED)
STEPMAKE_TEXMF(REQUIRED)
STEPMAKE_TEXMF_DIRS
STEPMAKE_GUILE_DEVEL(REQUIRED, 1.6.5)
STEPMAKE_MAKEINFO(REQUIRED)
STEPMAKE_PYTHON_DEVEL(REQUIRED)

STEPMAKE_PATH_PROG(GHOSTSCRIPT, gs, OPTIONAL, 8.15)

STEPMAKE_PROGS(MFTRACE, mftrace, REQUIRED, 1.1.9)
STEPMAKE_PATH_PROG(FONTFORGE, fontforge, REQUIRED, 20050624)

AC_CHECK_HEADERS([assert.h grp.h libio.h pwd.h sys/stat.h wchar.h])
AC_LANG_PUSH(C++)
AC_CHECK_HEADERS([sstream])
AC_LANG_POP(C++)
AC_HEADER_STAT
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([chroot fopencookie funopen gettext isinf mbrtowc memmem snprintf vsnprintf wcrtomb])
AC_CHECK_HEADERS([utf8/wchar.h], LIBS="$LIBS -lutf8")
AC_SEARCH_LIBS(mbrtowc, [mingwex msvcp60])

STEPMAKE_PROGS(PKG_CONFIG, pkg-config, REQUIRED, 0.9.0)

if test "$gui_b" = "yes"; then
    STEPMAKE_GTK2(gtk+-2.0, REQUIRED, 2.4.0)
fi

if test "$reloc_b" = "yes"; then
    AC_DEFINE(ARGV0_RELOCATION)
fi

AC_MSG_CHECKING([New Century Schoolbook PFB files])
if test "$NCSB_DIR" = "unknown"; then
  which locate >& /dev/null
  if test "$?" = "0"; then
      for d in `locate c059033l.pfb `; do
	  if test -f `dirname "$d"`/c059033l.afm ; then
	      NCSB_DIR=`dirname "$d"`
	      break 
	  fi 
      done
      if test "$NCSB_DIR" = "unknown";  then
	  AC_MSG_WARN(Could not find c059033l.pfb. Use --enable-ncsb-path to set path)
      fi
  else
     AC_MSG_WARN(Could not find locate(1). Use --enable-ncsb-path to set path to c059033l.pfb)
  fi
fi

AC_MSG_RESULT($NCSB_DIR)
AC_SUBST(NCSB_DIR)

STEPMAKE_PANGO_FT2(pangoft2, REQUIRED, 1.6.0)
#STEPMAKE_PANGO(pango, REQUIRED, 1.6.0)
STEPMAKE_FONTCONFIG(fontconfig, REQUIRED, 2.2.0)
STEPMAKE_FREETYPE2(freetype2, REQUIRED, 0)

STEPMAKE_WINDOWS

## Optional tools for building documentation, website, extra fonts.

# guile executable for some scripts
STEPMAKE_GUILE(OPTIONAL)

# perl for help2man.
STEPMAKE_PERL(OPTIONAL)

# New makeinfo for multi-page website docs Simply always require new
# makeinfo should avoid bug reports; if people want to build lily
# without the docs, they can find this comment and use an older
# makeinfo--but hopefully won't report makeinfo problems.
STEPMAKE_PROGS(MAKEINFO, makeinfo, REQUIRED, 4.7)

if test "$optimise_b" = yes; then
    DEFINES="$DEFINES -DSTRING_UTILS_INLINED"
    AC_DEFINE(STRINGS_UTILS_INLINED)
fi

AC_DEFINE_UNQUOTED(FLOWER_VERSION, "${FULL_FLOWER_VERSION}")

# Gather requirements and generate output.
STEPMAKE_END

test -n "$CONFIGURATION" && mc=" conf=$CONFIGURATION" || mc=""

cat <<EOF

Type:
    make$mc all       to build LilyPond
    make$mc install   to install LilyPond
    make$mc help      to see all possible targets

EOF
