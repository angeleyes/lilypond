dnl configure.in   -*-shell-script-*-
dnl Process this file with autoconf to produce a configure script. 

# Bootstrap the init proces.  List a file identifies your package.
AC_INIT(make/lilypond.lsm.in)
AC_CONFIG_HEADER($CONFIGFILE.h:config.hh.in)

# Bootstrap StepMake configure
STEPMAKE_INIT

# For all packages except the StepMake package itself
AC_CONFIG_SUBDIRS(stepmake)

# Uncomment the configuration options your package needs.

# must come before any header checks
STEPMAKE_COMPILE

STEPMAKE_GCC(REQUIRED, 2.8)
STEPMAKE_CXX(REQUIRED)
STEPMAKE_GXX(REQUIRED, 2.95)
STEPMAKE_CXXTEMPLATE
STEPMAKE_LIB(REQUIRED)
STEPMAKE_BISON(REQUIRED, 1.25)
STEPMAKE_FLEX(REQUIRED)
STEPMAKE_FLEXLEXER(REQUIRED)
STEPMAKE_LOCALE
STEPMAKE_GETTEXT
STEPMAKE_MSGFMT(REQUIRED)
STEPMAKE_TEXMF
STEPMAKE_TEXMF_DIRS
STEPMAKE_GUILE_DEVEL(REQUIRED, 1.6)
STEPMAKE_KPATHSEA
STEPMAKE_MAKEINFO(REQUIRED)
STEPMAKE_PYTHON_DEVEL(REQUIRED)


AC_HAVE_HEADERS(assert.h sys/stat.h sstream)
AC_HEADER_STAT

AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(memmem snprintf vsnprintf gettext isinf)


## Optional tools for building documentation, website, extra fonts.

# guile executable for some scripts
STEPMAKE_GUILE(OPTIONAL)
# perl for help2man.
STEPMAKE_PERL(OPTIONAL)
# mftrace for generating pfa's, pfb's
STEPMAKE_PROGS(MFTRACE, pktrace mftrace, OPTIONAL, 1.0.9)
# new makeinfo for multi-page website docs
STEPMAKE_PROGS(MAKEINFO, makeinfo, OPTIONAL, 4.1)


if test "$optimise_b" = yes; then
    DEFINES="$DEFINES -DSTRING_UTILS_INLINED"
    AC_DEFINE(STRINGS_UTILS_INLINED)
fi


AC_DEFINE_UNQUOTED(TOPLEVEL_VERSION, "${FULL_VERSION}")
AC_DEFINE_UNQUOTED(FLOWER_VERSION, "${FULL_FLOWER_VERSION}")

# Gather requirements and generate output.
STEPMAKE_END


test -n "$CONFIGURATION" && mc=" conf=$CONFIGURATION" || mc=""

cat <<EOF

Type:
    make$mc all       to build LilyPond
    make$mc install   to install LilyPond
    make$mc help      to see all possible targets

Do not worry if ./Documentation or ./mutopia should not build.
EOF
